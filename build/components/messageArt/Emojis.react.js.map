{"version":3,"sources":["../../../src/components/messageArt/Emojis.react.js"],"names":["Emojis","props","state","title","onSetActive","bind","shouldComponentUpdate","nextProps","nextState","setState","render","emojis","emojiTabs","forEach","category","cKey","push","items","map","emoji","iKey","onSelect","propTypes","func","isRequired"],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eARA;;;;IAUMA,M;;;AAKJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,aAAO;AADI,KAAb;;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAPiB;AAQlB;;mBAEDC,qB,kCAAsBC,S,EAAWC,S,EAAW;AAC1C,WAAOA,UAAUL,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAtC;AACD,G;;mBAEDC,W,wBAAYD,K,EAAO;AACjB,SAAKM,QAAL,CAAc,EAAEN,YAAF,EAAd;AACD,G;;mBAEDO,M,qBAAS;AAAA;;AAAA,QACCP,KADD,GACW,KAAKD,KADhB,CACCC,KADD;;;AAGP,QAAMQ,SAAS,EAAf;AACA,QAAMC,YAAY,EAAlB;;AAEA,wBAAUC,OAAV,CAAkB,UAACC,QAAD,EAAWC,IAAX,EAAoB;AACpCH,gBAAUI,IAAV,CACE,oDAAU,KAAKD,IAAf,EAAqB,UAAUD,QAA/B,EAAyC,UAAU,OAAKV,WAAxD,GADF;;AAIA,UAAMa,QAAQH,SAASG,KAAT,CAAeC,GAAf,CAAmB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAChD,eACE,qDAAW,KAAKA,IAAhB,EAAsB,OAAOD,KAA7B,EAAoC,UAAU,OAAKlB,KAAL,CAAWoB,QAAzD,GADF;AAGD,OAJa,CAAd;;AAMAV,aAAOK,IAAP,CACE;AAAA;AAAA,UAAS,MAAMF,SAASX,KAAxB,EAA+B,KAAKY,IAApC;AACE;AAAA;AAAA;AAAID,mBAASX;AAAb,SADF;AAEGc;AAFH,OADF;AAMD,KAjBD;;AAmBA,WACE;AAAA;AAAA,QAAK,WAAU,QAAf;AACE;AAAA;AAAA,UAAQ,WAAU,gBAAlB;AACE;AAAA;AAAA,YAAG,WAAU,uBAAb;AACGd;AADH,SADF;AAIE;AAAA;AAAA,YAAK,WAAU,sBAAf;AACGS;AADH;AAJF,OADF;AASE;AAAA;AAAA,UAAK,WAAU,cAAf,EAA8B,IAAG,gBAAjC;AACGD;AADH;AATF,KADF;AAeD,G;;;;;AA/DGX,M,CACGsB,S,GAAY;AACjBD,YAAU,iBAAUE,IAAV,CAAeC;AADR,C;kBAiENxB,M","file":"Emojis.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Element } from 'actor-react-scroll';\nimport EmojiTab from './EmojiTab.react';\nimport EmojiItem from './EmojiItem.react';\nimport emojiData from './emojiData';\n\nclass Emojis extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: 'Emoji'\n    };\n\n    this.onSetActive = this.onSetActive.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.title !== this.state.title;\n  }\n\n  onSetActive(title) {\n    this.setState({ title });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    const emojis = [];\n    const emojiTabs = [];\n\n    emojiData.forEach((category, cKey) => {\n      emojiTabs.push(\n        <EmojiTab key={cKey} category={category} onSelect={this.onSetActive} />\n      );\n\n      const items = category.items.map((emoji, iKey) => {\n        return (\n          <EmojiItem key={iKey} emoji={emoji} onSelect={this.props.onSelect} />\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={cKey}>\n          <p>{category.title}</p>\n          {items}\n        </Element>\n      );\n    });\n\n    return (\n      <div className=\"emojis\">\n        <header className=\"emojis__header\">\n          <p className=\"emojis__header__title\">\n            {title}\n          </p>\n          <div className=\"emojis__header__tabs\">\n            {emojiTabs}\n          </div>\n        </header>\n        <div className=\"emojis__body\" id=\"emojiContainer\">\n          {emojis}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Emojis;\n"]}