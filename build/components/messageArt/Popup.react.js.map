{"version":3,"sources":["../../../src/components/messageArt/Popup.react.js"],"names":["Popup","props","state","currentState","EMOJI","handleKeyDown","bind","shouldComponentUpdate","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","keyCode","ESC","preventDefault","onClose","handleTabClick","setState","renderBody","onSelect","STICKER","stickers","onStickerSelect","renderFooter","emojiTabClassName","stickerTabClassName","render","onMouseEnter","onMouseLeave","propTypes","className","string","array","isRequired","func"],"mappings":"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","file":"Popup.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport { KeyCodes, MessageArtPopupState } from '../../constants/ActorAppConstants';\n\nimport Emojis from './Emojis.react';\nimport Stickers from './Stickers.react';\n\nclass Popup extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onStickerSelect: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentState: MessageArtPopupState.EMOJI\n    };\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.props.onClose();\n    }\n  }\n\n  handleTabClick(state) {\n    this.setState({ currentState: state })\n  }\n\n  renderBody() {\n    const { currentState } = this.state;\n\n    switch (currentState) {\n      case MessageArtPopupState.EMOJI:\n        return (\n          <Emojis onSelect={this.props.onSelect}/>\n        );\n      case MessageArtPopupState.STICKER:\n        return (\n          <Stickers\n            stickers={this.props.stickers}\n            onStickerSelect={this.props.onStickerSelect}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderFooter() {\n    const { currentState } = this.state;\n\n    const emojiTabClassName = classnames('tab', {\n      'tab--active': currentState === MessageArtPopupState.EMOJI\n    });\n    const stickerTabClassName = classnames('tab', {\n      'tab--active': currentState === MessageArtPopupState.STICKER\n    });\n\n    return (\n      <footer className=\"message-art__popup__footer\">\n        <div className={emojiTabClassName}\n             onClick={() => this.handleTabClick(MessageArtPopupState.EMOJI)}>\n          Emojis\n        </div>\n        <div className={stickerTabClassName}\n             onClick={() => this.handleTabClick(MessageArtPopupState.STICKER)}>\n          Stickers\n        </div>\n      </footer>\n    )\n  }\n\n  render() {\n    const { onMouseEnter, onMouseLeave } = this.props;\n\n    return (\n      <div\n        className=\"message-art__popup\"\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <div className=\"message-art__popup__body\">\n          {this.renderBody()}\n        </div>\n\n        {this.renderFooter()}\n      </div>\n    )\n  }\n}\n\nexport default Popup;\n"]}