{"version":3,"sources":["../../src/components/Main.react.js"],"names":["Main","props","onVisibilityChange","document","hidden","createAppHidden","createAppVisible","components","getComponents","get","Sidebar","sidebar","Toolbar","toolbar","componentWillMount","isElectron","handleEletronEr","componentDidMount","window","messenger","listenOnRender","event","arg","push","setLoggedOut","addEventListener","componentWillUnmount","removeEventListener","handleVisible","visibilityState","sendToElectron","renderCall","features","calls","handleClick","show","name","type","key","Date","getTime","render","children","propTypes","params","object","oneOfType","arrayOf","node"],"mappings":"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","file":"Main.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\nimport { isFunction } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport DelegateContainer from '../utils/DelegateContainer';\n\nimport VisibilityActionCreators from '../actions/VisibilityActionCreators';\nimport LoginActionCreators from '../actions/LoginActionCreators';\nimport MessageAlertActionCreators from '../actions/MessageAlertActionCreators';\n\nimport DefaultSidebar from './Sidebar.react';\nimport DefaultToolbar from './Toolbar.react';\nimport ConnectionState from './common/ConnectionState.react';\nimport Favicon from './common/Favicon.react';\nimport Department from './Department.react';\nimport ModalsWrapper from './modals/ModalsWrapper.react';\nimport MenuOverlay from './common/MenuOverlay.react';\nimport SmallCall from './SmallCall.react';\nimport MessageAlert from './common/MessageAlert.react';\n\nimport loading from '../utils/DataLoading';\nimport ActorClient from '../utils/ActorClient';\n\nimport history from '../utils/history';\nimport { setTimeout } from 'timers';\n\nclass Main extends Component {\n  static propTypes = {\n    params: PropTypes.object,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ])\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.components = this.getComponents();\n  }\n\n  getComponents() {\n    const { components } = DelegateContainer.get();\n\n    if (components) {\n      return {\n        Sidebar: isFunction(components.sidebar) ? components.sidebar : DefaultSidebar,\n        Toolbar: isFunction(components.toolbar) ? components.toolbar : DefaultToolbar\n      };\n    }\n\n    return {\n      Sidebar: DefaultSidebar,\n      Toolbar: DefaultToolbar\n    };\n  }\n  componentWillMount() {\n    if (ActorClient.isElectron()) {\n      this.handleEletronEr();\n    }\n  }\n\n  componentDidMount() {\n    // 测试\n    // message('测试测试测试');  \n\n    this.onVisibilityChange();\n    if (ActorClient.isElectron()) {\n      window.messenger.listenOnRender('windows-blur', function(event, arg) {\n        history.push('/im');\n      })\n\n      window.messenger.listenOnRender('windows-focus', function(event, arg) {\n\n        history.push(`/im/${arg}`);\n      })\n\n\n      window.messenger.listenOnRender('setLoggedOut', function(event, arg) {\n        if (ActorClient.isElectron()) {\n            // 存储用户信息\n          // ActorClient.sendToElectron('setLoginStore', {key: 'info.auto', value: false });\n          // ActorClient.sendToElectron('setLoginStore', {key: 'info.isLogin', value: false });\n          LoginActionCreators.setLoggedOut();\n        }\n      })\n    } else {\n      document.addEventListener('visibilitychange', this.onVisibilityChange);\n\n    }\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.onVisibilityChange);\n  }\n\n  handleEletronEr() {\n    // window.messenger.listenOnRender('loginStore', (event, data) => {\n    //   if (!data || !data.info.isLogin) {\n    //     localStorage.clear();\n    //     history.push('/auth');\n    //   } else {\n    //     LoginActionCreators.setLoggedIn({redirect: false})\n    //   }\n    // });\n    // ActorClient.sendToElectron('logged-in');\n  }\n\n  handleVisible() {\n    if (document.visibilityState === 'visible') {\n      ActorClient.sendToElectron('window-visible');\n    } else if (document.visibilityState === 'hidden') {\n      ActorClient.sendToElectron('window-hidden');\n    }\n  }\n\n  onVisibilityChange = () => {\n    if (document.hidden) {\n      VisibilityActionCreators.createAppHidden();\n    } else {\n      VisibilityActionCreators.createAppVisible();\n    }\n  };\n\n  renderCall() {\n    const { features } = DelegateContainer.get();\n\n    if (!features.calls) {\n      return null;\n    }\n\n    return <SmallCall />;\n  }\n  handleClick() {\n    MessageAlertActionCreators.show({name: 123, type: 'success', key: new Date().getTime()})\n  }\n\n  render() {\n    const { Sidebar, Toolbar } = this.components;\n    return (\n      <div className=\"app\">\n        {/* <a href=\"javascript:;\" target=\"_self\" onClick={this.handleClick.bind(this)} style={{position: 'absolute', 'zIndex': 99999, top: 0, left: 0}}>click</a> */}\n\n        <ConnectionState />\n        <Favicon />\n\n        <Toolbar />\n        <section className=\"wrapper\">\n          <Sidebar />\n          {this.props.children}\n        </section>\n\n        <MessageAlert />\n        <ModalsWrapper />\n        <MenuOverlay />\n\n        {this.renderCall()}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]}