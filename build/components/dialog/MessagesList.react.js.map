{"version":3,"sources":["../../../src/components/dialog/MessagesList.react.js"],"names":["MessagesList","props","context","dialog","delegate","components","messages","MessageItem","message","Welcome","welcome","state","showScrollToBottom","dimensions","isLoading","onResize","bind","onScroll","handleScrollToBottom","shouldComponentUpdate","nextProps","nextState","peer","isMember","componentDidMount","restoreScroll","componentWillReceiveProps","equals","updateDimensions","refs","scroller","getDimensions","componentDidUpdate","prevProps","prevState","uid","unreadId","unread","scrollToNode","changeReason","PUSH","_isLastMessageMine","scrollToBottom","UNSHIFT","nextDimensions","scrollTo","scrollHeight","scrollTop","onLoadMore","offsetHeight","setState","ratio","renderHeader","isLoaded","length","renderMessages","overlay","count","selected","receiveDate","readDate","editId","result","index","rid","push","overlayItem","dateDivider","useShort","has","onEdit","onSelect","sortKey","renderScrollToBottomButton","render","contextTypes","object","isRequired","propTypes","number","shape","array","bool","string","oneOf","UNKNOWN","UPDATE","func"],"mappings":";;;;AAIA;;AAEA;;;;AAEA;;AACA;;AAEA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;+eAjBA;;;;IAmBMA,Y;;;AA+BJ,wBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,iDAC1B,sBAAMD,KAAN,EAAaC,OAAb,CAD0B;;AAAA,QAGlBC,MAHkB,GAGPD,QAAQE,QAAR,CAAiBC,UAHV,CAGlBF,MAHkB;;AAI1B,QAAIA,UAAUA,OAAOG,QAArB,EAA+B;AAC7B,YAAKD,UAAL,GAAkB;AAChBE,qBAAa,wBAAWJ,OAAOG,QAAP,CAAgBE,OAA3B,IAAsCL,OAAOG,QAAP,CAAgBE,OAAtD,wBADG;AAEhBC,iBAAS,wBAAWN,OAAOG,QAAP,CAAgBI,OAA3B,IAAsCP,OAAOG,QAAP,CAAgBI,OAAtD;AAFO,OAAlB;AAID,KALD,MAKO;AACL,YAAKL,UAAL,GAAkB;AAChBE,0CADgB;AAEhBE;AAFgB,OAAlB;AAID;;AAED,UAAKE,KAAL,GAAa;AACXC,0BAAoB;AADT,KAAb;;AAIA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,SAAL,GAAiB,KAAjB;;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,UAAKC,QAAL,GAAgB,sBAAS,MAAKA,QAAL,CAAcD,IAAd,OAAT,EAAmC,GAAnC,CAAhB;AACA,UAAKE,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BF,IAA1B,OAA5B;AAzB0B;AA0B3B;;yBAEDG,qB,kCAAsBC,S,EAAWC,S,EAAW;AAC1C,WAAOD,UAAUE,IAAV,KAAmB,KAAKrB,KAAL,CAAWqB,IAA9B,IACAF,UAAUd,QAAV,KAAuB,KAAKL,KAAL,CAAWK,QADlC,IAEAc,UAAUG,QAAV,KAAuB,KAAKtB,KAAL,CAAWsB,QAFlC,IAGAF,UAAUT,kBAAV,KAAiC,KAAKD,KAAL,CAAWC,kBAHnD;AAID,G;;yBAEDY,iB,gCAAoB;AAClB,SAAKC,aAAL;AACD,G;;yBAEDC,yB,sCAA0BN,S,EAAW;AACnC,QAAI,CAAC,oBAAUO,MAAV,CAAiBP,UAAUE,IAA3B,EAAiC,KAAKrB,KAAL,CAAWqB,IAA5C,CAAL,EAAwD;AACtD,WAAKT,UAAL,GAAkB,IAAlB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD,KAHD,MAGO;AACL,WAAKc,gBAAL,CAAsB,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,aAAnB,EAAtB;AACD;AACF,G;;yBAEDC,kB,+BAAmBC,S,EAAWC,S,EAAW;AACvC,QAAIA,UAAUtB,kBAAV,KAAiC,KAAKD,KAAL,CAAWC,kBAAhD,EAAoE;AAClE;AACD;;AAHsC,QAK/BC,UAL+B,GAK8B,IAL9B,CAK/BA,UAL+B;AAAA,QAKXiB,QALW,GAK8B,IAL9B,CAKnBD,IALmB,CAKXC,QALW;AAAA,iBAK8B,IAL9B,CAKC7B,KALD;AAAA,QAKUkC,GALV,UAKUA,GALV;AAAA,QAKe7B,QALf,UAKeA,QALf;;;AAOvC,QAAIA,SAAS8B,QAAT,IAAqB9B,SAAS8B,QAAT,KAAsBH,UAAU3B,QAAV,CAAmB8B,QAAlE,EAA4E;AAC1E,UAAI,KAAKP,IAAL,CAAUQ,MAAd,EAAsB;AACpB,aAAKR,IAAL,CAAUC,QAAV,CAAmBQ,YAAnB,CAAgC,KAAKT,IAAL,CAAUQ,MAA1C;AACD;AACF,KAJD,MAIO,IAAI/B,SAASiC,YAAT,KAA0B,uCAAoBC,IAAlD,EAAwD;AAC7D,UAAMC,qBAAqB,qCAAkBN,GAAlB,EAAuB7B,QAAvB,CAA3B;AACA,UAAI,CAACO,UAAD,IAAe4B,kBAAnB,EAAuC;AACrC,aAAKC,cAAL;AACD;AACF,KALM,MAKA,IAAIpC,SAASiC,YAAT,KAA0B,uCAAoBI,OAAlD,EAA2D;AAChE,WAAK7B,SAAL,GAAiB,KAAjB;AACA,UAAID,UAAJ,EAAgB;AACd,YAAM+B,iBAAiBd,SAASC,aAAT,EAAvB;AACA;AACAD,iBAASe,QAAT,CAAkBD,eAAeE,YAAf,GAA8BjC,WAAWiC,YAA3D;AACD,OAJD,MAIO;AACL,aAAKJ,cAAL;AACD;AACF,KATM,MASA;AACL,WAAKjB,aAAL;AACD;AACF,G;;yBAEDR,Q,uBAAW;AACT,QAAMJ,aAAa,KAAKgB,IAAL,CAAUC,QAAV,CAAmBC,aAAnB,EAAnB;AACA,SAAKH,gBAAL,CAAsBf,UAAtB;AACA,QAAI,CAAC,KAAKC,SAAN,IAAmBD,WAAWkC,SAAX,GAAuB,GAA9C,EAAmD;AACjD,WAAKjC,SAAL,GAAiB,IAAjB;AACA,WAAKb,KAAL,CAAW+C,UAAX;AACD;;AAED,QAAMpC,qBAAqBC,WAAWkC,SAAX,GAAuBlC,WAAWiC,YAAX,GAA2B,IAAIjC,WAAWoC,YAA5F;;AAEA,QAAIrC,uBAAuB,KAAKD,KAAL,CAAWC,kBAAtC,EAA0D;AACxD,WAAKsC,QAAL,CAAc,EAAEtC,sCAAF,EAAd;AACD;AACF,G;;yBAEDG,Q,uBAAW;AAAA,QACDF,UADC,GACkC,IADlC,CACDA,UADC;AAAA,QACmBiB,QADnB,GACkC,IADlC,CACWD,IADX,CACmBC,QADnB;;AAET,QAAIjB,UAAJ,EAAgB;AACd;AACA,UAAMsC,QAAQtC,WAAWkC,SAAX,GAAuBlC,WAAWiC,YAAhD;AACA,UAAMF,iBAAiBd,SAASC,aAAT,EAAvB;AACAD,eAASe,QAAT,CAAkBM,QAAQP,eAAeE,YAAzC;AACA,WAAKjC,UAAL,GAAkB+B,cAAlB;AACD,KAND,MAMO;AACLd,eAASY,cAAT;AACD;AACF,G;;yBAEDxB,oB,mCAAuB;AACrB,SAAKW,IAAL,CAAUC,QAAV,CAAmBY,cAAnB;AACD,G;;yBAEDU,Y,2BAAe;AAAA,kBACwB,KAAKnD,KAD7B;AAAA,QACLqB,IADK,WACLA,IADK;AAAA,QACCC,QADD,WACCA,QADD;AAAA,QACWjB,QADX,WACWA,QADX;;;AAGb,QAAI,CAACiB,QAAL,EAAe;AACb,aAAO,IAAP;AACD;;AAED,QAAIjB,SAAS+C,QAAb,EAAuB;AAAA,UACb5C,OADa,GACD,KAAKJ,UADJ,CACbI,OADa;;AAErB,aAAO,8BAAC,OAAD,IAAS,MAAMa,IAAf,EAAqB,KAAI,QAAzB,GAAP;AACD;;AAED,QAAI,CAAChB,SAASA,QAAT,CAAkBgD,MAAvB,EAA+B;AAC7B,aAAO,IAAP;AACD;;AAED,WAAO,mDAAS,KAAI,QAAb,GAAP;AACD,G;;yBAEDC,c,6BAAiB;AAAA,kBACkG,KAAKtD,KADvG;AAAA,QACPkC,GADO,WACPA,GADO;AAAA,QACFb,IADE,WACFA,IADE;AAAA,mCACIhB,QADJ;AAAA,QACgBA,QADhB,oBACgBA,QADhB;AAAA,QAC0BkD,OAD1B,oBAC0BA,OAD1B;AAAA,QACmCC,KADnC,oBACmCA,KADnC;AAAA,QAC0CC,QAD1C,oBAC0CA,QAD1C;AAAA,QACoDC,WADpD,oBACoDA,WADpD;AAAA,QACiEC,QADjE,oBACiEA,QADjE;AAAA,QAC2EC,MAD3E,oBAC2EA,MAD3E;AAAA,QACmFzB,QADnF,oBACmFA,QADnF;AAAA,QAEP7B,WAFO,GAES,KAAKF,UAFd,CAEPE,WAFO;;;AAIf,QAAMuD,SAAS,EAAf;AACA,SAAK,IAAIC,QAAQzD,SAASgD,MAAT,GAAkBG,KAAnC,EAA0CM,QAAQzD,SAASgD,MAA3D,EAAmES,OAAnE,EAA4E;AAC1E,UAAMvD,UAAUF,SAASyD,KAAT,CAAhB;AACA,UAAIvD,QAAQwD,GAAR,KAAgB5B,QAApB,EAA8B;AAC5B0B,eAAOG,IAAP,CACE;AAAA;AAAA,YAAK,WAAU,gBAAf,EAAgC,KAAI,QAApC,EAA6C,KAAI,QAAjD;AACE;AAAA;AAAA,cAAK,WAAU,MAAf;AACE;AAAA;AAAA,gBAAG,WAAU,gBAAb;AAAA;AAAA,aADF;AAEE,yEAAkB,IAAG,gBAArB,GAFF;AAGE;AAAA;AAAA,gBAAG,WAAU,gBAAb;AAAA;AAAA;AAHF;AADF,SADF;AASD;;AAED,UAAMC,cAAcV,QAAQO,KAAR,CAApB;AACA,UAAIG,eAAeA,YAAYC,WAA/B,EAA4C;AAC1CL,eAAOG,IAAP,CACE;AAAA;AAAA,YAAK,WAAU,cAAf,EAA8B,KAAKC,YAAYC,WAA/C;AACGD,sBAAYC;AADf,SADF;AAKD;;AAEDL,aAAOG,IAAP,CACE,8BAAC,WAAD;AACE,cAAM3C,IADR;AAEE,iBAASd,OAFX;AAGE,eAAO,mCAAgBA,OAAhB,EAAyB2B,GAAzB,EAA8BwB,WAA9B,EAA2CC,QAA3C,CAHT;AAIE,iBAASM,YAAYE,QAJvB;AAKE,oBAAYV,SAASW,GAAT,CAAa7D,QAAQwD,GAArB,CALd;AAME,mBAAWH,WAAWrD,QAAQwD,GANhC;AAOE,gBAAQ,KAAK/D,KAAL,CAAWqE,MAPrB;AAQE,kBAAU,KAAKrE,KAAL,CAAWsE,QARvB;AASE,aAAK/D,QAAQgE;AATf,QADF;AAaD;;AAED,WAAOV,MAAP;AACD,G;;yBAEDW,0B,yCAA6B;AAAA,QACnB7D,kBADmB,GACI,KAAKD,KADT,CACnBC,kBADmB;;AAE3B,QAAI,CAACA,kBAAL,EAAyB;AACvB,aAAO,IAAP;AACD;;AAED,WACE;AAAA;AAAA,QAAK,WAAU,wBAAf,EAAwC,SAAS,KAAKM,oBAAtD;AACE;AAAA;AAAA,UAAG,WAAU,gBAAb;AAAA;AAAA;AADF,KADF;AAKD,G;;yBAEDwD,M,qBAAS;AACP,WACE;AAAA;AAAA,QAAK,WAAU,iBAAf;AACE;AAAA;AAAA;AACE,qBAAU,gBADZ;AAEE,eAAI,UAFN;AAGE,oBAAU,KAAKzD,QAHjB;AAIE,oBAAU,KAAKF;AAJjB;AAMG,aAAKqC,YAAL,EANH;AAOG,aAAKG,cAAL;AAPH,OADF;AAUG,WAAKkB,0BAAL;AAVH,KADF;AAcD,G;;yBAED/B,c,6BAAiB;AACf,SAAK7B,UAAL,GAAkB,IAAlB;AACA,SAAKgB,IAAL,CAAUC,QAAV,CAAmBY,cAAnB;AACD,G;;yBAEDd,gB,6BAAiBf,U,EAAY;AAC3B,QAAIA,WAAWiC,YAAX,KAA4BjC,WAAWkC,SAAX,GAAuBlC,WAAWoC,YAAlE,EAAgF;AAC9E;AACA,WAAKpC,UAAL,GAAkB,IAAlB;AACD,KAHD,MAGO;AACL,WAAKA,UAAL,GAAkBA,UAAlB;AACD;AACF,G;;yBAEDY,a,4BAAgB;AAAA,QACNZ,UADM,GAC6B,IAD7B,CACNA,UADM;AAAA,QACciB,QADd,GAC6B,IAD7B,CACMD,IADN,CACcC,QADd;;;AAGd,QAAIjB,UAAJ,EAAgB;AACdiB,eAASe,QAAT,CAAkBhC,WAAWkC,SAA7B;AACD,KAFD,MAEO;AACLjB,eAASY,cAAT;AACD;AACF,G;;;;;AAlQG1C,Y,CACG2E,Y,GAAe;AACpBvE,YAAU,iBAAUwE,MAAV,CAAiBC;AADP,C;AADlB7E,Y,CAKG8E,S,GAAY;AACjB3C,OAAK,iBAAU4C,MAAV,CAAiBF,UADL;AAEjBvD,QAAM,iBAAUsD,MAAV,CAAiBC,UAFN;AAGjBvE,YAAU,iBAAU0E,KAAV,CAAgB;AACxB1E,cAAU,iBAAU2E,KAAV,CAAgBJ,UADF;AAExBrB,aAAS,iBAAUyB,KAAV,CAAgBJ,UAFD;AAGxBpB,WAAO,iBAAUsB,MAAV,CAAiBF,UAHA;AAIxBxB,cAAU,iBAAU6B,IAAV,CAAeL,UAJD;AAKxBlB,iBAAa,iBAAUoB,MAAV,CAAiBF,UALN;AAMxBjB,cAAU,iBAAUmB,MAAV,CAAiBF,UANH;AAOxBhB,YAAQ,iBAAUsB,MAPM;AAQxB/C,cAAU,iBAAU+C,MARI;AASxBzB,cAAU,iBAAUkB,MAAV,CAAiBC,UATH;AAUxBtC,kBAAc,iBAAU6C,KAAV,CAAgB,CAC5B,uCAAoBC,OADQ,EAE5B,uCAAoB7C,IAFQ,EAG5B,uCAAoBG,OAHQ,EAI5B,uCAAoB2C,MAJQ,CAAhB,EAKXT;AAfqB,GAAhB,EAgBPA,UAnBc;AAoBjBtD,YAAU,iBAAU2D,IAAV,CAAeL,UApBR;AAqBjBN,YAAU,iBAAUgB,IAAV,CAAeV,UArBR;AAsBjB7B,cAAY,iBAAUuC,IAAV,CAAeV,UAtBV;AAuBjBP,UAAQ,iBAAUiB,IAAV,CAAeV;AAvBN,C;kBAgQN7E,Y","file":"MessagesList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction, throttle } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { MessageChangeReason } from '../../constants/ActorAppConstants';\n\nimport PeerUtils from '../../utils/PeerUtils';\nimport { getMessageState, isLastMessageMine } from '../../utils/MessageUtils';\nimport Scroller from '../common/Scroller.react';\n\nimport DefaultMessageItem from './messages/MessageItem.react';\nimport DefaultWelcome from './messages/Welcome.react';\nimport Loading from './messages/Loading.react';\n\nclass MessagesList extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    uid: PropTypes.number.isRequired,\n    peer: PropTypes.object.isRequired,\n    messages: PropTypes.shape({\n      messages: PropTypes.array.isRequired,\n      overlay: PropTypes.array.isRequired,\n      count: PropTypes.number.isRequired,\n      isLoaded: PropTypes.bool.isRequired,\n      receiveDate: PropTypes.number.isRequired,\n      readDate: PropTypes.number.isRequired,\n      editId: PropTypes.string,\n      unreadId: PropTypes.string,\n      selected: PropTypes.object.isRequired,\n      changeReason: PropTypes.oneOf([\n        MessageChangeReason.UNKNOWN,\n        MessageChangeReason.PUSH,\n        MessageChangeReason.UNSHIFT,\n        MessageChangeReason.UPDATE\n      ]).isRequired\n    }).isRequired,\n    isMember: PropTypes.bool.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onLoadMore: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const { dialog } = context.delegate.components;\n    if (dialog && dialog.messages) {\n      this.components = {\n        MessageItem: isFunction(dialog.messages.message) ? dialog.messages.message : DefaultMessageItem,\n        Welcome: isFunction(dialog.messages.welcome) ? dialog.messages.welcome : DefaultWelcome\n      };\n    } else {\n      this.components = {\n        MessageItem: DefaultMessageItem,\n        Welcome: DefaultWelcome\n      };\n    }\n\n    this.state = {\n      showScrollToBottom: false\n    };\n\n    this.dimensions = null;\n    this.isLoading = false;\n\n    this.onResize = this.onResize.bind(this);\n    this.onScroll = throttle(this.onScroll.bind(this), 300);\n    this.handleScrollToBottom = this.handleScrollToBottom.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.peer !== this.props.peer ||\n           nextProps.messages !== this.props.messages ||\n           nextProps.isMember !== this.props.isMember ||\n           nextState.showScrollToBottom !== this.state.showScrollToBottom;\n  }\n\n  componentDidMount() {\n    this.restoreScroll();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!PeerUtils.equals(nextProps.peer, this.props.peer)) {\n      this.dimensions = null;\n      this.isLoading = false;\n    } else {\n      this.updateDimensions(this.refs.scroller.getDimensions());\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.showScrollToBottom !== this.state.showScrollToBottom) {\n      return;\n    }\n\n    const { dimensions, refs: { scroller }, props: { uid, messages } } = this;\n\n    if (messages.unreadId && messages.unreadId !== prevProps.messages.unreadId) {\n      if (this.refs.unread) {\n        this.refs.scroller.scrollToNode(this.refs.unread);\n      }\n    } else if (messages.changeReason === MessageChangeReason.PUSH) {\n      const _isLastMessageMine = isLastMessageMine(uid, messages);\n      if (!dimensions || _isLastMessageMine) {\n        this.scrollToBottom();\n      }\n    } else if (messages.changeReason === MessageChangeReason.UNSHIFT) {\n      this.isLoading = false;\n      if (dimensions) {\n        const nextDimensions = scroller.getDimensions();\n        // Restore scroll\n        scroller.scrollTo(nextDimensions.scrollHeight - dimensions.scrollHeight);\n      } else {\n        this.scrollToBottom();\n      }\n    } else {\n      this.restoreScroll();\n    }\n  }\n\n  onScroll() {\n    const dimensions = this.refs.scroller.getDimensions();\n    this.updateDimensions(dimensions);\n    if (!this.isLoading && dimensions.scrollTop < 100) {\n      this.isLoading = true;\n      this.props.onLoadMore();\n    }\n\n    const showScrollToBottom = dimensions.scrollTop < dimensions.scrollHeight - (2 * dimensions.offsetHeight);\n\n    if (showScrollToBottom !== this.state.showScrollToBottom) {\n      this.setState({ showScrollToBottom });\n    }\n  }\n\n  onResize() {\n    const { dimensions, refs: { scroller } } = this;\n    if (dimensions) {\n      // Fix scroll\n      const ratio = dimensions.scrollTop / dimensions.scrollHeight;\n      const nextDimensions = scroller.getDimensions();\n      scroller.scrollTo(ratio * nextDimensions.scrollHeight);\n      this.dimensions = nextDimensions;\n    } else {\n      scroller.scrollToBottom();\n    }\n  }\n\n  handleScrollToBottom() {\n    this.refs.scroller.scrollToBottom();\n  }\n\n  renderHeader() {\n    const { peer, isMember, messages } = this.props;\n\n    if (!isMember) {\n      return null;\n    }\n\n    if (messages.isLoaded) {\n      const { Welcome } = this.components;\n      return <Welcome peer={peer} key=\"header\" />;\n    }\n\n    if (!messages.messages.length) {\n      return null;\n    }\n\n    return <Loading key=\"header\" />;\n  }\n\n  renderMessages() {\n    const { uid, peer, messages: { messages, overlay, count, selected, receiveDate, readDate, editId, unreadId } } = this.props;\n    const { MessageItem } = this.components;\n\n    const result = [];\n    for (let index = messages.length - count; index < messages.length; index++) {\n      const message = messages[index];\n      if (message.rid === unreadId) {\n        result.push(\n          <div className=\"unread-divider\" ref=\"unread\" key=\"unread\">\n            <div className=\"text\">\n              <i className=\"material-icons\">expand_more</i>\n              <FormattedMessage id=\"message.unread\"/>\n              <i className=\"material-icons\">expand_more</i>\n            </div>\n          </div>\n        );\n      }\n\n      const overlayItem = overlay[index];\n      if (overlayItem && overlayItem.dateDivider) {\n        result.push(\n          <div className=\"date-divider\" key={overlayItem.dateDivider}>\n            {overlayItem.dateDivider}\n          </div>\n        );\n      }\n\n      result.push(\n        <MessageItem\n          peer={peer}\n          message={message}\n          state={getMessageState(message, uid, receiveDate, readDate)}\n          isShort={overlayItem.useShort}\n          isSelected={selected.has(message.rid)}\n          isEditing={editId === message.rid}\n          onEdit={this.props.onEdit}\n          onSelect={this.props.onSelect}\n          key={message.sortKey}\n        />\n      );\n    }\n\n    return result;\n  }\n\n  renderScrollToBottomButton() {\n    const { showScrollToBottom } = this.state;\n    if (!showScrollToBottom) {\n      return null;\n    }\n\n    return (\n      <div className=\"chat__scroll-to-bottom\" onClick={this.handleScrollToBottom}>\n        <i className=\"material-icons\">keyboard_arrow_down</i>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"chat__container\">\n        <Scroller\n          className=\"chat__messages\"\n          ref=\"scroller\"\n          onScroll={this.onScroll}\n          onResize={this.onResize}\n        >\n          {this.renderHeader()}\n          {this.renderMessages()}\n        </Scroller>\n        {this.renderScrollToBottomButton()}\n      </div>\n    )\n  }\n\n  scrollToBottom() {\n    this.dimensions = null;\n    this.refs.scroller.scrollToBottom();\n  }\n\n  updateDimensions(dimensions) {\n    if (dimensions.scrollHeight === dimensions.scrollTop + dimensions.offsetHeight) {\n      // Lock scroll to bottom\n      this.dimensions = null;\n    } else {\n      this.dimensions = dimensions;\n    }\n  }\n\n  restoreScroll() {\n    const { dimensions, refs: { scroller } } = this;\n\n    if (dimensions) {\n      scroller.scrollTo(dimensions.scrollTop);\n    } else {\n      scroller.scrollToBottom();\n    }\n  }\n}\n\nexport default MessagesList;\n"]}