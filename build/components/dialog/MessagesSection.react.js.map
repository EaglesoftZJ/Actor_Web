{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":["MessagesSection","getStores","calculateState","getState","props","onEdit","bind","onSelect","onLoadMore","message","text","peer","endEdit","rid","toggleSelected","loadMoreMessages","render","uid","isMember","state","propTypes","number","isRequired","object","bool","create"],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;+eAZA;;;;IAcMA,e;;;kBAOGC,S,wBAAY;AACjB,WAAO,wBAAP;AACD,G;;kBAEMC,c,6BAAiB;AACtB,WAAO,uBAAaC,QAAb,EAAP;AACD,G;;AAED,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,OAAhB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,OAAlB;AALiB;AAMlB;;4BAEDD,M,mBAAOI,O,EAASC,I,EAAM;AAAA,QACZC,IADY,GACH,KAAKP,KADF,CACZO,IADY;;AAEpB,oCAAsBC,OAAtB,CAA8BD,IAA9B,EAAoCF,OAApC,EAA6CC,IAA7C;AACD,G;;4BAEDH,Q,qBAASM,G,EAAK;AACZ,oCAAsBC,cAAtB,CAAqCD,GAArC;AACD,G;;4BAEDL,U,yBAAa;AACX,mCAAqBO,gBAArB,CAAsC,KAAKX,KAAL,CAAWO,IAAjD;AACD,G;;4BAEDK,M,qBAAS;AAAA,iBACyB,KAAKZ,KAD9B;AAAA,QACCa,GADD,UACCA,GADD;AAAA,QACMN,IADN,UACMA,IADN;AAAA,QACYO,QADZ,UACYA,QADZ;;;AAGP,WACE;AACE,WAAKD,GADP;AAEE,YAAMN,IAFR;AAGE,gBAAU,KAAKQ,KAHjB;AAIE,gBAAUD,QAJZ;AAKE,gBAAU,KAAKX,QALjB;AAME,kBAAY,KAAKC,UANnB;AAOE,cAAQ,KAAKH;AAPf,MADF;AAWD,G;;;;;AAlDGL,e,CACGoB,S,GAAY;AACjBH,OAAK,iBAAUI,MAAV,CAAiBC,UADL;AAEjBX,QAAM,iBAAUY,MAAV,CAAiBD,UAFN;AAGjBJ,YAAU,iBAAUM,IAAV,CAAeF;AAHR,C;kBAoDN,iBAAUG,MAAV,CAAiBzB,eAAjB,C","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport MessageStore from '../../stores/MessageStore';\n\nimport MessagesList from './MessagesList.react';\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    uid: PropTypes.number.isRequired,\n    peer: PropTypes.object.isRequired,\n    isMember: PropTypes.bool.isRequired\n  };\n\n  static getStores() {\n    return [MessageStore];\n  }\n\n  static calculateState() {\n    return MessageStore.getState();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onEdit = this.onEdit.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onLoadMore = this.onLoadMore.bind(this);\n  }\n\n  onEdit(message, text) {\n    const { peer } = this.props;\n    MessageActionCreators.endEdit(peer, message, text);\n  }\n\n  onSelect(rid) {\n    MessageActionCreators.toggleSelected(rid);\n  }\n\n  onLoadMore() {\n    DialogActionCreators.loadMoreMessages(this.props.peer);\n  }\n\n  render() {\n    const { uid, peer, isMember } = this.props;\n\n    return (\n      <MessagesList\n        uid={uid}\n        peer={peer}\n        messages={this.state}\n        isMember={isMember}\n        onSelect={this.onSelect}\n        onLoadMore={this.onLoadMore}\n        onEdit={this.onEdit}\n      />\n    );\n  }\n}\n\nexport default Container.create(MessagesSection);\n"]}