{"version":3,"sources":["../../../src/components/dialog/DialogHeader.react.js"],"names":["MAX_GROUP_CALL_SIZE","DialogHeader","props","context","state","isMoreDropdownOpen","onFavoriteToggle","bind","handleInfoButtonClick","handleMakeCallButtonClick","handleEndCallButtonClick","handleSearchButtonClick","handleCreateGroup","toggelMoreDropdownOpen","handleAddPeople","peer","isFavorite","unfavoriteChat","favoriteChat","call","isActivityOpen","isCalling","toggleFloating","hide","show","makePeerCall","endCall","id","isDialogSearchOpen","open","close","info","openInDialog","setState","renderMessage","message","replace","renderInfoButton","className","isFloating","renderVerified","isVerified","renderFavorite","favoriteClassName","renderSearchButton","delegate","features","search","callButtonClassName","renderCallButton","calls","type","GROUP","members","length","renderMoreDropdown","renderMoreButton","dropdownButtonClassNames","renderAddUsersButton","USER","renderCreateGroupButton","render","avatar","placeholder","name","__html","contextTypes","object","isRequired","propTypes","string","bool"],"mappings":"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","file":"DialogHeader.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport { PeerTypes } from '../../constants/ActorAppConstants';\n\nimport { escapeWithEmoji } from '../../utils/EmojiUtils';\n\nimport CallActionCreators from '../../actions/CallActionCreators';\nimport ActivityActionCreators from '../../actions/ActivityActionCreators';\nimport FavoriteActionCreators from '../../actions/FavoriteActionCreators';\nimport SearchMessagesActionCreators from '../../actions/SearchMessagesActionCreators';\nimport InviteUserActions from '../../actions/InviteUserActions';\nimport CreateGroupActionCreators from '../../actions/CreateGroupActionCreators';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport ToggleFavorite from '../common/ToggleFavorite.react';\nimport MoreDropdown from './header/MoreDropdown.react';\nimport SmartCallButton from '../call/SmartCallButton.react';\n\nconst MAX_GROUP_CALL_SIZE = 25;\n\nclass DialogHeader extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  }\n\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    info: PropTypes.object.isRequired,\n    call: PropTypes.object.isRequired,\n    message: PropTypes.string,\n    isFavorite: PropTypes.bool.isRequired,\n    isActivityOpen: PropTypes.bool.isRequired,\n    isDialogSearchOpen: PropTypes.bool.isRequired\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isMoreDropdownOpen: false\n    }\n\n    this.onFavoriteToggle = this.onFavoriteToggle.bind(this);\n    this.handleInfoButtonClick = this.handleInfoButtonClick.bind(this);\n    this.handleMakeCallButtonClick = this.handleMakeCallButtonClick.bind(this);\n    this.handleEndCallButtonClick = this.handleEndCallButtonClick.bind(this);\n    this.handleSearchButtonClick = this.handleSearchButtonClick.bind(this);\n    this.handleCreateGroup =  this.handleCreateGroup.bind(this);\n    this.toggelMoreDropdownOpen = this.toggelMoreDropdownOpen.bind(this);\n    this.handleAddPeople = this.handleAddPeople.bind(this);\n  }\n\n  onFavoriteToggle() {\n    const { peer, isFavorite } = this.props;\n\n    if (isFavorite) {\n      FavoriteActionCreators.unfavoriteChat(peer);\n    } else {\n      FavoriteActionCreators.favoriteChat(peer);\n    }\n  }\n\n  handleInfoButtonClick() {\n    const { call, isActivityOpen } = this.props;\n    if (call.isCalling) {\n      CallActionCreators.toggleFloating();\n    } else if (isActivityOpen) {\n      ActivityActionCreators.hide();\n    } else {\n      ActivityActionCreators.show();\n    }\n  }\n\n  handleMakeCallButtonClick() {\n    const { peer } = this.props;\n    CallActionCreators.makePeerCall(peer);\n  }\n\n  handleEndCallButtonClick() {\n    const { call } = this.props;\n    CallActionCreators.endCall(call.id);\n  }\n\n  handleSearchButtonClick() {\n    const { isDialogSearchOpen } = this.props;\n    if (!isDialogSearchOpen) {\n      SearchMessagesActionCreators.open();\n    } else {\n      SearchMessagesActionCreators.close();\n    }\n  }\n\n  handleAddPeople() {\n    const { info } = this.props;\n    InviteUserActions.show(info)\n  }\n\n  handleCreateGroup() {\n    CreateGroupActionCreators.openInDialog();\n  }\n\n  toggelMoreDropdownOpen() {\n    const { isMoreDropdownOpen } = this.state;\n    this.setState({ isMoreDropdownOpen: !isMoreDropdownOpen })\n  }\n\n  renderMessage() {\n    const { message } = this.props;\n\n    if (!message)\n      return message;\n\n\n\n    return message.replace('members', '位成员').replace('online', '在线').replace('offline', '离线');\n  }\n\n  renderInfoButton() {\n    const { call, isActivityOpen } = this.props;\n\n    const className = classnames('button button--icon', {\n      'active': isActivityOpen || (call.isCalling && !call.isFloating)\n    });\n\n    return (\n      <Tooltip\n        placement=\"left\"\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        overlay={<FormattedMessage id=\"tooltip.toolbar.info\"/>}\n      >\n        <button className={className} onClick={this.handleInfoButtonClick}>\n          <i className=\"material-icons\">info</i>\n        </button>\n      </Tooltip>\n    )\n  }\n\n  renderVerified() {\n    const { info } = this.props;\n\n    if (!info.isVerified) {\n      return null;\n    }\n\n    return (\n      <span className=\"dialog__header__peer__verified\">\n        <i className=\"material-icons\">verified_user</i>\n      </span>\n    );\n  }\n\n  renderFavorite() {\n    const { isFavorite } = this.props;\n    const favoriteClassName = classnames('dialog__header__peer__favorite', {\n      'dialog__header__peer__favorite--active': isFavorite\n    });\n\n    return (\n      <Tooltip\n        placement=\"bottom\"\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        overlay={<FormattedMessage id=\"tooltip.toolbar.favorite\"/>}\n      >\n        <span className={favoriteClassName}>\n          <ToggleFavorite value={isFavorite} onToggle={this.onFavoriteToggle} />\n        </span>\n      </Tooltip>\n    )\n  }\n\n  renderSearchButton() {\n    const { delegate } = this.context;\n    const { isDialogSearchOpen } = this.props;\n\n    if (!delegate.features.search) {\n      return null;\n    }\n\n    const callButtonClassName = classnames('button button--icon', {\n      'active': isDialogSearchOpen\n    });\n\n    return null;\n    // TODO search messages\n    // (\n    //   <button className={callButtonClassName} onClick={this.handleSearchButtonClick}>\n    //     <i className=\"material-icons\">search</i>\n    //   </button>\n    // );\n  }\n\n  renderCallButton() {\n    const { delegate } = this.context;\n    const { peer, info } = this.props;\n\n    if (!delegate.features.calls) {\n      return null;\n    }\n\n    if (peer.type === PeerTypes.GROUP && info.members.length > MAX_GROUP_CALL_SIZE) {\n      return null;\n    }\n\n    const { call } = this.props;\n    return null;\n    // TODO 语音通话\n    // (\n    //   <SmartCallButton\n    //     call={call}\n    //     onCallStart={this.handleMakeCallButtonClick}\n    //     onCallEnd={this.handleEndCallButtonClick}\n    //   />\n    // );\n  }\n\n  renderMoreDropdown() {\n    const { isMoreDropdownOpen } = this.state;\n\n    if (!isMoreDropdownOpen) {\n      return null;\n    }\n\n    const { info, peer } = this.props;\n\n    return (\n      <MoreDropdown\n        onClose={this.toggelMoreDropdownOpen}\n        info={info}\n        peer={peer}\n      />\n    );\n  }\n\n  renderMoreButton() {\n    const { isMoreDropdownOpen } = this.state;\n\n    const dropdownButtonClassNames = classnames('button button--icon', {\n      'active': isMoreDropdownOpen\n    })\n\n    return (\n      <div className=\"dropdown dropdown--opened\">\n        <button className={dropdownButtonClassNames} onClick={this.toggelMoreDropdownOpen}>\n          <i className=\"material-icons\">more_vert</i>\n        </button>\n        {this.renderMoreDropdown()}\n      </div>\n    );\n  }\n\n  renderAddUsersButton() {\n    const { peer } = this.props;\n    if (peer.type === PeerTypes.USER) {\n      return null;\n    }\n\n    return (\n      <Tooltip\n        placement=\"left\"\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        overlay={<FormattedMessage id=\"tooltip.toolbar.addUser\"/>}\n      >\n      <button className=\"button button--icon\" onClick={this.handleAddPeople}>\n        <i className=\"material-icons\">group_add</i>\n      </button>\n      </Tooltip>\n    );\n  }\n\n  renderCreateGroupButton() {\n    const { peer } = this.props;\n    if (peer.type === PeerTypes.GROUP) {\n      return null;\n    }\n\n    return (\n      <Tooltip\n      placement=\"left\"\n      mouseEnterDelay={0}\n      mouseLeaveDelay={0}\n      overlay={<FormattedMessage id=\"tooltip.toolbar.createGroup\"/>}\n    >\n      <button className=\"button button--icon\" onClick={this.handleCreateGroup}>\n        <i className=\"material-icons\">group</i>\n      </button>\n    </Tooltip>\n    );\n  }\n\n  render() {\n    const { info } = this.props;\n\n    if (!info) {\n      return <header className=\"dialog__header\" />;\n    }\n\n    return (\n      <header className=\"dialog__header\">\n        <div className=\"row\">\n          <AvatarItem\n            className=\"dialog__header__avatar\"\n            size=\"medium\"\n            image={info.avatar}\n            placeholder={info.placeholder}\n            title={info.name}\n          />\n\n          <div className=\"dialog__header__peer\">\n            <header className=\"dialog__header__peer__title\" >\n              <span dangerouslySetInnerHTML={{ __html: escapeWithEmoji(info.name) }}/>\n              {this.renderVerified()}\n              {this.renderFavorite()}\n            </header>\n            <div className=\"dialog__header__peer__message\">\n              {this.renderMessage()}\n            </div>\n          </div>\n\n          <div className=\"col-xs\"/>\n\n          <div className=\"dialog__header__controls\">\n            {this.renderSearchButton()}\n            {this.renderCallButton()}\n            {this.renderAddUsersButton()}\n            {this.renderCreateGroupButton()}\n            {this.renderInfoButton()}\n            {this.renderMoreButton()}\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default DialogHeader;\n"]}