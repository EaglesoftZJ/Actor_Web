{"version":3,"sources":["../../../../src/components/dialog/messages/Document.react.js"],"names":["Document","props","context","state","peer","getCurrentPeer","renderIcon","fileUrl","isUploading","renderActions","handleDownloadClick","bind","handleMouseMove","handleOpenRecord","padding","height","marginTop","marginLeft","color","fontSize","message","isElectron","window","messenger","sendToElectron","rid","event","showDocumentRecord","nativeEvent","stopImmediatePropagation","render","fileName","fileSize","fileExtension","className","documentClassName","propTypes","string","isRequired","bool","sortKey","container","object","contextTypes","func"],"mappings":";;;;;;AAIA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eATA;;;;AAYA;;;IAGMA,Q;;;AAkBJ,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,iDAC1B,sBAAMD,KAAN,EAAaC,OAAb,CAD0B;;AAE1B,UAAKC,KAAL,GAAa;AACXC,YAAM,sBAAYC,cAAZ;AADK,KAAb;AAF0B;AAK3B;;qBAEDC,U,yBAAa;AAAA,iBACsB,KAAKL,KAD3B;AAAA,QACHM,OADG,UACHA,OADG;AAAA,QACMC,WADN,UACMA,WADN;;;AAGX,QAAIA,WAAJ,EAAiB;AACf,aACE;AAAA;AAAA,UAAK,WAAU,gBAAf;AACE;AAAA;AAAA,YAAG,WAAU,gBAAb;AAAA;AAAA;AADF,OADF;AAKD,KAND,MAMO;AACL,aACE;AAAA;AAAA,UAAG,WAAU,gBAAb,EAA8B,MAAMD,OAApC;AACE;AAAA;AAAA,YAAG,WAAU,gBAAb;AAAA;AAAA;AADF,OADF;AAKD;AACF,G;;qBAEDE,a,4BAAgB;AAAA,kBACmB,KAAKR,KADxB;AAAA,QACNM,OADM,WACNA,OADM;AAAA,QACGC,WADH,WACGA,WADH;;;AAGd,QAAIA,WAAJ,EAAiB;AACf,aACE;AAAA;AAAA;AAAM,qEAAkB,IAAG,mBAArB;AAAN,OADF;AAGD,KAJD,MAIO;AACL,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACI;AAAA;AAAA,YAAG,MAAMD,OAAT,EAAkB,SAAS,KAAKG,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AAAgE,uEAAkB,IAAG,kBAArB;AAAhE,SADJ;AAEI;AAAA;AAAA;AACI,uBAAU,KADd;AAEI,6BAAiB,IAFrB;AAGI,6BAAiB,CAHrB;AAII,qBAAS,6DAAkB,IAAG,wBAArB,GAJb;AAKI;AAAA;AAAA,cAAQ,aAAa,KAAKC,eAA1B,EAA2C,SAAS,KAAKC,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAApD,EAAsF,WAAU,qBAAhG,EAAsH,OAAO,EAACG,SAAS,CAAV,EAAaC,QAAQ,EAArB,EAAyBC,WAAW,CAAC,CAArC,EAAwCC,YAAY,CAApD,EAAuDC,OAAO,SAA9D,EAA7H;AAAuM;AAAA;AAAA,gBAAG,OAAO,EAACC,UAAU,EAAX,EAAV,EAA0B,WAAU,gBAApC;AAAA;AAAA;AAAvM;AALJ;AAFJ,OADF;AAaD;AACF,G;;qBAEDT,mB,kCAAsB;AAAA,QACZN,IADY,GACH,KAAKD,KADF,CACZC,IADY;AAAA,QAEZgB,OAFY,GAEA,KAAKlB,OAFL,CAEZkB,OAFY;;AAGpB,QAAI,sBAAYC,UAAZ,EAAJ,EAA8B;AAC5BC,aAAOC,SAAP,CAAiBC,cAAjB,CAAgC,oBAAhC,aAAuDC,KAAKL,QAAQK,GAApE,IAA4ErB,IAA5E;AACD;AACF,G;;qBAEDS,gB,6BAAiBa,K,EAAO;AAAA,QACdC,kBADc,GACS,KAAKzB,OADd,CACdyB,kBADc;;AAEtBA;AACAD,UAAME,WAAN,CAAkBC,wBAAlB;AACD,G;;qBAEDjB,e,4BAAgBc,K,EAAO;AACrBA,UAAME,WAAN,CAAkBC,wBAAlB;AACD,G;;qBAEDC,M,qBAAS;AAAA,kBACkD,KAAK7B,KADvD;AAAA,QACC8B,QADD,WACCA,QADD;AAAA,QACWC,QADX,WACWA,QADX;AAAA,QACqBC,aADrB,WACqBA,aADrB;AAAA,QACoCC,SADpC,WACoCA,SADpC;;;AAGP,QAAMC,oBAAoB,0BAAWD,SAAX,EAAsB,KAAtB,CAA1B;;AAEA,WACE;AAAA;AAAA,QAAK,WAAWC,iBAAhB,EAAmC,SAAnC;AACE;AAAA;AAAA,UAAK,WAAU,cAAf;AACG,aAAK7B,UAAL,EADH;AAEE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA,cAAM,WAAU,oBAAhB;AAAsCyB;AAAtC,WADF;AAEE;AAAA;AAAA,cAAK,WAAU,gBAAf;AACE;AAAA;AAAA,gBAAM,WAAU,sBAAhB;AAAwCC;AAAxC,aADF;AAEE;AAAA;AAAA,gBAAM,WAAU,qBAAhB;AAAuCC;AAAvC;AAFF,WAFF;AAME;AAAA;AAAA,cAAK,WAAU,mBAAf;AACG,iBAAKxB,aAAL;AADH;AANF;AAFF,OADF;AAcE,6CAAK,WAAU,QAAf;AAdF,KADF;AAkBD,G;;;;;AA5GGT,Q,CACGoC,S,GAAY;AACjB7B,WAAS,iBAAU8B,MADF;AAEjBN,YAAU,iBAAUM,MAAV,CAAiBC,UAFV;AAGjBN,YAAU,iBAAUK,MAAV,CAAiBC,UAHV;AAIjBL,iBAAe,iBAAUI,MAAV,CAAiBC,UAJf;AAKjB9B,eAAa,iBAAU+B,IAAV,CAAeD,UALX;AAMjBJ,aAAW,iBAAUG,MANJ;AAOjBG,WAAS,iBAAUH,MAPF;AAQjBI,aAAW,iBAAUC;AARJ,C;AADf1C,Q,CAYG2C,Y,GAAe;AACpBhB,sBAAoB,iBAAUiB,IADV;AAEpBxB,WAAS,iBAAUsB;AAFC,C;kBAmGT1C,Q","file":"Document.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from 'rc-tooltip';\nimport DialogStore from '../../../stores/DialogStore';\nimport ActorClient from '../../../utils/ActorClient';\n\n\n/**\n * Class that represents a component for display document message content\n */\nclass Document extends Component {\n  static propTypes = {\n    fileUrl: PropTypes.string,\n    fileName: PropTypes.string.isRequired,\n    fileSize: PropTypes.string.isRequired,\n    fileExtension: PropTypes.string.isRequired,\n    isUploading: PropTypes.bool.isRequired,\n    className: PropTypes.string,\n    sortKey: PropTypes.string,\n    container: PropTypes.object,\n  }\n  \n  static contextTypes = {\n    showDocumentRecord: PropTypes.func,\n    message: PropTypes.object\n  }\n  \n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      peer: DialogStore.getCurrentPeer()\n    };\n  }\n\n  renderIcon() {\n    const { fileUrl, isUploading } = this.props;\n\n    if (isUploading) {\n      return (\n        <div className=\"document__icon\">\n          <i className=\"material-icons\">attach_file</i>\n        </div>\n      );\n    } else {\n      return (\n        <a className=\"document__icon\" href={fileUrl}>\n          <i className=\"material-icons\">attach_file</i>\n        </a>\n      );\n    }\n  }\n\n  renderActions() {\n    const { fileUrl, isUploading } = this.props;\n\n    if (isUploading) {\n      return (\n        <span><FormattedMessage id=\"message.uploading\"/></span>\n      );\n    } else {\n      return (\n        <div className=\"btn-group\">\n            <a href={fileUrl} onClick={this.handleDownloadClick.bind(this)}><FormattedMessage id=\"message.download\"/></a>\n            <Tooltip\n                placement=\"top\"\n                mouseEnterDelay={0.15}\n                mouseLeaveDelay={0}\n                overlay={<FormattedMessage id=\"tooltip.documentRecord\"/>}>\n                <button onMouseMove={this.handleMouseMove} onClick={this.handleOpenRecord.bind(this)} className=\"button button--icon\" style={{padding: 0, height: 24, marginTop: -2, marginLeft: 5, color: '#468ee5'}}><i style={{fontSize: 20}} className=\"material-icons\">history</i></button>\n            </Tooltip>\n            {/* <a href={fileUrl} style={{'paddingLeft': 5}} onMouseMove={this.handleMouseMove} onMouseEnter={this.handleOpenRecord.bind(this)}><FormattedMessage id=\"message.downloadDetial\"/></a> */}\n        </div>\n      );\n    }\n  }\n  \n  handleDownloadClick() {\n    const { peer } = this.state;\n    const { message } = this.context;\n    if (ActorClient.isElectron()) {\n      window.messenger.sendToElectron('will-download-info', {rid: message.rid, ...peer});\n    }\n  }\n\n  handleOpenRecord(event) {\n    const { showDocumentRecord } = this.context;\n    showDocumentRecord();\n    event.nativeEvent.stopImmediatePropagation();\n  }\n\n  handleMouseMove(event) {\n    event.nativeEvent.stopImmediatePropagation();\n  }\n\n  render() {\n    const { fileName, fileSize, fileExtension, className } = this.props;\n\n    const documentClassName = classnames(className, 'row');\n\n    return (\n      <div className={documentClassName} ref>\n        <div className=\"document row\">\n          {this.renderIcon()}\n          <div className=\"col-xs\">\n            <span className=\"document__filename\">{fileName}</span>\n            <div className=\"document__meta\">\n              <span className=\"document__meta__size\">{fileSize}</span>\n              <span className=\"document__meta__ext\">{fileExtension}</span>\n            </div>\n            <div className=\"document__actions\">\n              {this.renderActions()}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xs\"/>\n      </div>\n    );\n  }\n}\n\nexport default Document;\n"]}