{"version":3,"sources":["../../../../src/components/dialog/messages/MessageEdit.react.js"],"names":["MessageEdit","props","state","text","message","content","onSubmit","bind","onTyping","onKeyDown","shouldComponentUpdate","componentDidMount","console","debug","setState","event","keyCode","ESC","preventDefault","render","sendByEnter","propTypes","object","isRequired","bool","func","defaultProps"],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;;;;;;;;;+eAPA;;;;IASMA,W;;;AAYJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,YAAMF,MAAMG,OAAN,CAAcC,OAAd,CAAsBF;AADjB,KAAb;;AAIA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,OAAhB;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,OAAjB;;AAEA,UAAKG,qBAAL,GAA6B,kDAAsBH,IAAtB,OAA7B;AAXiB;AAYlB;;AAjBD;;;wBAmBAI,iB,gCAAoB;AAClBC,YAAQC,KAAR,CAAc,qBAAd;AACD,G;;wBAEDP,Q,uBAAW;AACT,SAAKL,KAAL,CAAWK,QAAX,CAAoB,KAAKL,KAAL,CAAWG,OAA/B,EAAwC,KAAKF,KAAL,CAAWC,IAAnD;AACD,G;;wBAEDK,Q,qBAASL,I,EAAM;AACb,SAAKW,QAAL,CAAc,EAAEX,UAAF,EAAd;AACD,G;;wBAEDM,S,sBAAUM,K,EAAO;AACf,QAAIA,MAAMC,OAAN,KAAkB,4BAASC,GAA/B,EAAoC;AAClCF,YAAMG,cAAN;AACA,WAAKZ,QAAL;AACD;AACF,G;;wBAEDa,M,qBAAS;AACP,WACE;AACE,qBADF;AAEE,aAAO,KAAKjB,KAAL,CAAWC,IAFpB;AAGE,mBAAa,KAAKF,KAAL,CAAWmB,WAH1B;AAIE,gBAAU,KAAKd,QAJjB;AAKE,gBAAU,KAAKE,QALjB;AAME,iBAAW,KAAKC;AANlB,MADF;AAUD,G;;;;;AAxDGT,W,CACGqB,S,GAAY;AACjBjB,WAAS,iBAAUkB,MAAV,CAAiBC,UADT;AAEjBH,eAAa,iBAAUI,IAAV,CAAeD,UAFX;AAGjBjB,YAAU,iBAAUmB,IAAV,CAAeF;AAHR,C;AADfvB,W,CAQG0B,Y,GAAe;AACpBN,eAAa;AADO,C;kBAmDTpB,W","file":"MessageEdit.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\r\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\r\nimport ComposeTextArea from '../compose/ComposeTextArea.react';\r\n\r\nclass MessageEdit extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.object.isRequired,\r\n    sendByEnter: PropTypes.bool.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n  };\r\n\r\n  // TODO: pass real props\r\n  static defaultProps = {\r\n    sendByEnter: true\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: props.message.content.text\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onTyping = this.onTyping.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n\r\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.debug('REPORT ABOUT MOUNT!');\r\n  }\r\n\r\n  onSubmit() {\r\n    this.props.onSubmit(this.props.message, this.state.text);\r\n  }\r\n\r\n  onTyping(text) {\r\n    this.setState({ text });\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    if (event.keyCode === KeyCodes.ESC) {\r\n      event.preventDefault();\r\n      this.onSubmit();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ComposeTextArea\r\n        autoFocus\r\n        value={this.state.text}\r\n        sendByEnter={this.props.sendByEnter}\r\n        onSubmit={this.onSubmit}\r\n        onTyping={this.onTyping}\r\n        onKeyDown={this.onKeyDown}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageEdit;\r\n"]}