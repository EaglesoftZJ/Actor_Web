{"version":3,"sources":["../../../../src/components/dialog/messages/Voice.react.js"],"names":["cache","Voice","props","humanTime","millis","minutes","Math","floor","seconds","toFixed","handleTimeUpdate","setState","currentTime","audio","duration","handlePlayClick","play","isPlaying","handlePauseClick","pause","handlePlayEnding","handleRewind","event","rewindRect","refs","rewind","getBoundingClientRect","rewindPosition","clientX","left","width","handleLoading","setCached","state","isLoaded","isCached","componentDidMount","fileUrl","createAudioElement","componentDidUpdate","componentWillUnmount","removeEventListener","Audio","volume","addEventListener","render","className","voiceClassName","current","total","progress","opacity","propTypes","string","number","isRequired"],"mappings":"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","file":"Voice.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classnames from 'classnames';\n\nlet cache = [];\n\n/**\n * Class that represents a component for display voice message content\n */\nclass Voice extends Component {\n  static propTypes = {\n    fileUrl: PropTypes.string,\n    duration: PropTypes.number.isRequired,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: this.isCached(),\n      isPlaying: false,\n      currentTime: 0,\n      duration: props.duration / 1000\n    };\n  }\n\n  componentDidMount() {\n    const { fileUrl } = this.props;\n\n    if (fileUrl) {\n      this.createAudioElement(fileUrl);\n    }\n  }\n\n  componentDidUpdate() {\n    const { fileUrl } = this.props;\n\n    if (fileUrl && !this.isCached()) {\n      this.createAudioElement(fileUrl);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.audio) {\n      this.audio.removeEventListener('loadeddata', this.handleLoading);\n      this.audio.removeEventListener('timeupdate', this.handleTimeUpdate);\n      this.audio.removeEventListener('ended', this.handlePlayEnding);\n      this.audio.removeEventListener('canplaythrough', this.handleLoading);\n    }\n  }\n\n  createAudioElement(fileUrl) {\n    this.audio = new Audio(fileUrl);\n    this.audio.volume = 1;\n    this.audio.addEventListener('loadeddata', this.handleLoading);\n    this.audio.addEventListener('timeupdate', this.handleTimeUpdate);\n    this.audio.addEventListener('ended', this.handlePlayEnding);\n    this.audio.addEventListener('canplaythrough', this.handleLoading);\n    this.setCached();\n  }\n\n  isCached() {\n    const { fileUrl } = this.props;\n    return cache[fileUrl] === true;\n  }\n\n  setCached() {\n    const { fileUrl } = this.props;\n    cache[fileUrl] = true;\n    this.setState({ isLoaded: cache[fileUrl] });\n  }\n\n  humanTime = (millis) => {\n    const minutes = Math.floor(millis / 60000);\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\n\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\n  };\n\n  handleTimeUpdate = () => {\n    this.setState({\n      currentTime: this.audio.currentTime,\n      duration: this.audio.duration\n    })\n  };\n\n  handlePlayClick = () => {\n    this.audio.play();\n    this.setState({ isPlaying: true })\n  };\n\n  handlePauseClick = () => {\n    this.audio.pause();\n    this.handlePlayEnding();\n  };\n\n  handlePlayEnding = () => {\n    this.setState({ isPlaying: false });\n  };\n\n  handleRewind = (event) => {\n    const rewindRect = findDOMNode(this.refs.rewind).getBoundingClientRect();\n    const rewindPosition = (event.clientX - rewindRect.left) / rewindRect.width;\n\n    this.audio.currentTime = this.audio.duration * rewindPosition;\n  };\n\n  handleLoading = () => this.setCached();\n\n  render() {\n    const { className } = this.props;\n    const { isPlaying, currentTime, duration, isLoaded } = this.state;\n    const voiceClassName = classnames(className, 'row');\n\n    const current = this.humanTime(currentTime * 1000);\n    const total = this.humanTime(duration * 1000);\n    const progress = (currentTime / duration) * 100;\n\n    return (\n      <div className={voiceClassName}>\n        <div className=\"voice row\">\n          <div className=\"voice__controls\">\n            {\n              !isLoaded\n                ? <i className=\"material-icons\" style={{ opacity: 0.3 }}>play_circle_filled</i>\n                : isPlaying\n                    ? <i className=\"material-icons\" onClick={this.handlePauseClick}>pause_circle_filled</i>\n                    : <i className=\"material-icons\" onClick={this.handlePlayClick}>play_circle_filled</i>\n            }\n          </div>\n          <div className=\"voice__body col-xs\">\n            <div className=\"row\">\n              <div className=\"col-xs text-left\">\n                <time className=\"voice__time voice__time--current\">{current}</time>\n              </div>\n              <div className=\"col-xs text-right\">\n                <time className=\"voice__time voice__time--total\">{total}</time>\n              </div>\n            </div>\n            {\n              isLoaded\n                ? <div className=\"voice__rewind\" onClick={this.handleRewind} ref=\"rewind\">\n                    <div className=\"played\" style={{ width: progress + '%' }}/>\n                  </div>\n                : <div className=\"voice__rewind voice__rewind--loading\"/>\n            }\n          </div>\n        </div>\n        <div className=\"col-xs\"/>\n      </div>\n    );\n  }\n}\n\nexport default Voice;\n"]}