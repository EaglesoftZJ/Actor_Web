{"version":3,"sources":["../../../../src/components/dialog/messages/Sticker.react.js"],"names":["cache","Sticker","props","state","isLoaded","isCached","calculateDementions","onLoad","bind","setCached","shouldComponentUpdate","setState","fileUrl","w","h","MAX_WIDTH","MAX_HEIGHT","width","height","renderPreloader","renderSticker","render","className","stickerClassName","propTypes","string","number","isRequired"],"mappings":"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","file":"Sticker.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\n\nimport Image from '../../common/Image.react';\n\nlet cache = {};\n\n/**\n * Class that represents a component for display sticker message content\n */\nclass Sticker extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    fileUrl: PropTypes.string,\n    h: PropTypes.number.isRequired,\n    w: PropTypes.number.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: this.isCached(),\n      ...this.calculateDementions()\n    }\n\n    this.onLoad = this.onLoad.bind(this);\n    this.isCached = this.isCached.bind(this);\n    this.setCached = this.setCached.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  onLoad() {\n    this.setCached();\n    if (!this.state.isLoaded) {\n      this.setState({ isLoaded: true });\n    }\n  }\n\n  isCached() {\n    return cache[this.props.fileUrl] === true;\n  }\n\n  setCached() {\n    cache[this.props.fileUrl] = true;\n  }\n\n  calculateDementions() {\n    const { w, h } = this.props;\n    const MAX_WIDTH = 200;\n    const MAX_HEIGHT = 200;\n\n    let width = w;\n    let height = h;\n\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height *= MAX_WIDTH / width;\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width *= MAX_HEIGHT / height;\n        height = MAX_HEIGHT;\n      }\n    }\n\n    return { width, height };\n  }\n\n  renderPreloader() {\n    const { isLoaded } = this.state;\n    if (isLoaded) return null;\n\n    return (\n      <div className=\"preloader\">\n        <div/><div/><div/><div/><div/>\n      </div>\n    );\n  }\n\n  renderSticker() {\n    const { fileUrl } = this.props;\n    if (!fileUrl) return null;\n\n    const { width, height } = this.state;\n\n    return (\n      <Image\n        src={fileUrl}\n        width={width}\n        height={height}\n        onLoad={this.onLoad}\n      />\n    )\n  }\n\n  render() {\n    const { className } = this.props;\n    const { isLoaded, width, height } = this.state;\n    const stickerClassName = classnames('sticker', {\n      'sticker--loaded': isLoaded\n    });\n\n    return (\n      <div className={className}>\n        <div className={stickerClassName} style={{ width, height }}>\n          {this.renderPreloader()}\n          {this.renderSticker()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sticker;\n"]}