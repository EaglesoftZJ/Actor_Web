{"version":3,"sources":["../../../../src/components/dialog/messages/Modern.react.js"],"names":["ColorTypes","HEX","NAMED","getColor","color","type","hex","name","Field","props","render","title","value","isShort","fieldClassName","propTypes","string","bool","Attach","paragraphStyle","titleUrl","text","fields","attachmentClassName","showParagraph","attachmentStyles","borderColor","backgroundColor","bgColor","attachmentFields","field","index","object","array","TextModern","attaches","className","modernClassName","modernStyles","modernAttachments","attachment"],"mappings":"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","file":"Modern.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nconst ColorTypes = {\n  HEX: 'hex',\n  NAMED: 'named'\n};\n\n/**\n * @param color\n * @returns {string | null} Color value\n */\nfunction getColor(color) {\n  if (color) {\n    switch (color.type) {\n      case ColorTypes.HEX:\n        return color.hex;\n      case ColorTypes.NAMED:\n        return color.name;\n      default:\n        return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Class that represents component for display modern text message attachment field\n * @param {String} title Field title\n * @param {String} value Field value\n * @param {Boolean} isShort Display short version of field\n */\nclass Field extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    value: PropTypes.string,\n    isShort: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, value, isShort } = this.props;\n\n    const fieldClassName = classnames('field', {\n      'field--short': isShort,\n      'col-xs-6': isShort,\n      'col-xs-12': !isShort\n    });\n\n    return (\n      <div className={fieldClassName}>\n        {title ? <div className=\"field__title\">{title}</div> : null}\n        {value ? <div className=\"field__value\">{value}</div> : null}\n      </div>\n    )\n  }\n}\n\n/**\n * Class that represents component for display modern text message attachments\n * @param {Array} fields Array of objects contains attachment fields\n * @param {Object} paragraphStyle Contains attachment styles\n * @param {String} text Attachment text\n * @param {String} title Attachment title\n * @param {String} titleUrl Attachment title url\n */\nclass Attach extends Component {\n  static propTypes = {\n    paragraphStyle: PropTypes.object,\n    text: PropTypes.string,\n    title: PropTypes.string,\n    titleUrl: PropTypes.string,\n    fields: PropTypes.array\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { paragraphStyle, titleUrl, title, text, fields } = this.props;\n\n    const attachmentClassName = classnames('attachment', {\n      'attachment--paragraph': paragraphStyle.showParagraph\n    });\n\n    const attachmentStyles = {\n      borderColor: getColor(paragraphStyle.color) || 'transparent',\n      backgroundColor: getColor(paragraphStyle.bgColor) || 'transparent'\n    };\n\n    const attachmentFields = map(fields, (field, index) => <Field key={index} {...field}/>);\n\n    return (\n      <div className={attachmentClassName} style={attachmentStyles}>\n        <div className=\"attachment__title\">\n          {\n            titleUrl\n              ? <a href={titleUrl}>{title}</a>\n              : title\n          }\n        </div>\n        {text ? text : null}\n        {attachmentFields ? <div className=\"attachment_fields row\">{attachmentFields}</div> : null}\n      </div>\n    );\n  }\n}\n\n/**\n * Class that represents component for display modern text messages content\n * @param {Array} attaches Array of objects contains modern message attached paragraphs\n * @param {Object} paragraphStyle Contains message styles\n * @param {String} text Message text\n * @param {String} className Component class name\n */\nclass TextModern extends Component {\n  static propTypes = {\n    attaches: PropTypes.array,\n    paragraphStyle: PropTypes.object,\n    text: PropTypes.string,\n    className: PropTypes.string\n  };\n\n  render() {\n    const { paragraphStyle, attaches, text, className } = this.props;\n    const modernClassName = classnames('modern', {\n      'modern--paragraph': paragraphStyle.showParagraph\n    });\n\n    const modernStyles = {\n      borderColor: getColor(paragraphStyle.color) || 'transparent',\n      backgroundColor: getColor(paragraphStyle.bgColor) || 'transparent'\n    };\n\n    const modernAttachments = map(attaches, (attachment, index) => <Attach key={index} {...attachment}/>);\n\n    return (\n      <div className={className}>\n        <div className={modernClassName} style={modernStyles}>\n          {text ? <p>{text}</p> : null}\n          {modernAttachments}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextModern;\n"]}