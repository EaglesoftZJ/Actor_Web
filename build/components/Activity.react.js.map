{"version":3,"sources":["../../src/components/Activity.react.js"],"names":["ActivitySection","getStores","calculateState","peer","getCurrentPeer","info","getState","isOpen","props","shouldComponentUpdate","bind","componentDidUpdate","setImmediate","window","dispatchEvent","Event","renderBody","state","type","USER","GROUP","render","create"],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;+eAdA;;;;IAgBMA,e;;;kBACGC,S,wBAAY;AACjB,WAAO,2EAAP;AACD,G;;kBAEMC,c,6BAAiB;AACtB,WAAO;AACLC,YAAM,sBAAYC,cAAZ,EADD;AAELC,YAAM,0BAAgBC,QAAhB,EAFD;AAGLC,cAAQ,wBAAcA,MAAd;AAHH,KAAP;AAKD,G;;AAED,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,qBAAL,GAA6B,kDAAsBC,IAAtB,OAA7B;AAHiB;AAIlB;;4BAEDC,kB,iCAAqB;AACnBC,iBAAa,YAAM;AACjBC,aAAOC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,QAAV,CAArB;AACD,KAFD;AAGD,G;;4BAEDC,U,yBAAa;AAAA,iBACY,KAAKC,KADjB;AAAA,QACHd,IADG,UACHA,IADG;AAAA,QACGE,IADH,UACGA,IADH;;;AAGX,YAAQF,KAAKe,IAAb;AACE,WAAK,6BAAUC,IAAf;AACE,eAAO,uDAAa,MAAMd,IAAnB,GAAP;AACF,WAAK,6BAAUe,KAAf;AACE,eAAO,wDAAc,OAAOf,IAArB,GAAP;AACF;AACE,eAAO,IAAP;AANJ;AAQD,G;;4BAEDgB,M,qBAAS;AAAA,kBACkB,KAAKJ,KADvB;AAAA,QACCd,IADD,WACCA,IADD;AAAA,QACOI,MADP,WACOA,MADP;;AAEP,QAAI,CAACA,MAAD,IAAW,CAACJ,IAAhB,EAAsB;AACpB,aAAO,2CAAS,WAAU,UAAnB,GAAP;AACD;;AAED,WACE;AAAA;AAAA,QAAS,WAAU,0BAAnB;AACG,WAAKa,UAAL;AADH,KADF;AAKD,G;;;;;kBAGY,iBAAUM,MAAV,CAAiBtB,eAAjB,C","file":"Activity.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport { Container } from 'flux/utils';\nimport { PeerTypes } from '../constants/ActorAppConstants';\n\nimport ActivityStore from '../stores/ActivityStore';\nimport DialogStore from '../stores/DialogStore';\nimport DialogInfoStore from '../stores/DialogInfoStore';\n\nimport UserProfile from './activity/UserProfile.react';\nimport GroupProfile from './activity/GroupProfile.react';\n\nclass ActivitySection extends Component {\n  static getStores() {\n    return [DialogStore, DialogInfoStore, ActivityStore];\n  }\n\n  static calculateState() {\n    return {\n      peer: DialogStore.getCurrentPeer(),\n      info: DialogInfoStore.getState(),\n      isOpen: ActivityStore.isOpen()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  componentDidUpdate() {\n    setImmediate(() => {\n      window.dispatchEvent(new Event('resize'));\n    });\n  }\n\n  renderBody() {\n    const { peer, info } = this.state;\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        return <UserProfile user={info} />;\n      case PeerTypes.GROUP:\n        return <GroupProfile group={info} />;\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { peer, isOpen } = this.state;\n    if (!isOpen || !peer) {\n      return <section className=\"activity\" />;\n    }\n\n    return (\n      <section className=\"activity activity--shown\">\n        {this.renderBody()}\n      </section>\n    );\n  }\n}\n\nexport default Container.create(ActivitySection);\n"]}