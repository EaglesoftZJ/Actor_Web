{"version":3,"sources":["../../../src/components/dev/LoggerRow.react.js"],"names":["LoggerRow","shouldComponentUpdate","nextProps","data","props","render","tag","type","message","className","INFO","ERROR","WARNING","DEBUG","propTypes","shape","string","isRequired","oneOf"],"mappings":";;;;AAIA;;;;AACA;;;;AAEA;;;;;;;;+eAPA;;;;IASMA,S;;;;;;;;;sBAcJC,qB,kCAAsBC,S,EAAW;AAC/B,WAAOA,UAAUC,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAArC;AACD,G;;sBAEDE,M,qBAAS;AAAA,sBACwB,KAAKD,KAAL,CAAWD,IADnC;AAAA,QACCG,GADD,eACCA,GADD;AAAA,QACMC,IADN,eACMA,IADN;AAAA,QACYC,OADZ,eACYA,OADZ;;;AAGP,QAAMC,YAAY,0BAAW,kCAAX,EAA+C;AAC/D,yBAAmBF,SAAS,+BAAYG,IADuB;AAE/D,0BAAoBH,SAAS,+BAAYI,KAFsB;AAG/D,4BAAsBJ,SAAS,+BAAYK,OAHoB;AAI/D,0BAAoBL,SAAS,+BAAYM;AAJsB,KAA/C,CAAlB;;AAOA,WACE;AAAA;AAAA,QAAK,WAAWJ,SAAhB;AACE;AAAA;AAAA,UAAM,WAAU,gBAAhB;AAAkCH;AAAlC,OADF;AAEE;AAAA;AAAA,UAAM,WAAU,oBAAhB;AAAsCE;AAAtC;AAFF,KADF;AAMD,G;;;;;AAlCGR,S,CACGc,S,GAAY;AACjBX,QAAM,iBAAUY,KAAV,CAAgB;AACpBT,SAAK,iBAAUU,MAAV,CAAiBC,UADF;AAEpBV,UAAM,iBAAUW,KAAV,CAAgB,CACpB,+BAAYR,IADQ,EAEpB,+BAAYC,KAFQ,EAGpB,+BAAYC,OAHQ,EAIpB,+BAAYC,KAJQ,CAAhB,EAKHI,UAPiB;AAQpBT,aAAS,iBAAUQ,MAAV,CAAiBC;AARN,GAAhB,EASHA;AAVc,C;kBAoCNjB,S","file":"LoggerRow.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classNames from 'classnames';\n\nimport { LoggerTypes } from '../../constants/ActorAppConstants';\n\nclass LoggerRow extends Component {\n  static propTypes = {\n    data: PropTypes.shape({\n      tag: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        LoggerTypes.INFO,\n        LoggerTypes.ERROR,\n        LoggerTypes.WARNING,\n        LoggerTypes.DEBUG\n      ]).isRequired,\n      message: PropTypes.string.isRequired\n    }).isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.data !== this.props.data;\n  }\n\n  render() {\n    const { tag, type, message } = this.props.data;\n\n    const className = classNames('logger__container__row log-entry', {\n      'log-entry--info': type === LoggerTypes.INFO,\n      'log-entry--error': type === LoggerTypes.ERROR,\n      'log-entry--warning': type === LoggerTypes.WARNING,\n      'log-entry--debug': type === LoggerTypes.DEBUG\n    });\n\n    return (\n      <div className={className}>\n        <span className=\"log-entry__tag\">{tag}</span>\n        <span className=\"log-entry__message\">{message}</span>\n      </div>\n    );\n  }\n}\n\nexport default LoggerRow;\n"]}