{"version":3,"sources":["../../src/components/Login.react.js"],"names":["Login","props","onLoginChange","event","preventDefault","changeLogin","target","value","onCodeChange","changeCode","onNameChange","changeName","onRequestCode","localStorage","clear","isLoggedIn","setLoggedOut","prmoise","Promise","resolve","reject","requestNickName","state","login","then","sendPassword","code","handleFocus","onSignupRequested","sendSignup","name","handleRestartAuthClick","restartAuth","handleSelectName","handleChangeRemember","changeRemember","checked","changeAuto","handleChangeAuto","toggleDropdown","isOpened","setState","document","addEventListener","closeDropdown","removeEventListener","step","LOGIN_WAIT","CODE_WAIT","isCodeRequested","refs","focus","isCodeSended","NAME_WAIT","start","SharedActor","get","appName","getStores","calculateState","getLogin","getCode","getName","getStep","remember","getRemember","auto","getAuto","nameList","getNameList","errors","getErrors","isLoginRequested","isSignupStarted","componentWillMount","isElectron","sendToElectron","componentDidMount","window","messenger","listenOnRender","data","console","log","info","changeNameList","requestAuto","key","componentDidUpdate","renderDropDown","size","map","item","index","bind","renderCheckbox","render","intl","context","requestFormClassName","signupFormClassName","dropClassName","spinner","messages","COMPLETED","signup","contextTypes","object","create","pure","withProps"],"mappings":"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","file":"Login.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport SharedContainer from '../utils/SharedContainer';\nimport { appName, AuthSteps } from '../constants/ActorAppConstants';\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\nimport ActorClient from '../utils/ActorClient';\n\nimport LoginActionCreators from '../actions/LoginActionCreators';\nimport DepartmentAcationCreators from '../actions/DepartmentActionCreators';\n\nimport LoginStore from '../stores/LoginStore';\n\nimport TextField from './common/TextField.react';\nimport Checkbox from './common/Checkbox.react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    LoginActionCreators.start();\n\n    const SharedActor = SharedContainer.get();\n    this.appName = SharedActor.appName ? SharedActor.appName : appName;\n  }\n\n  static getStores() {\n    return [LoginStore];\n  }\n\n  static calculateState() {\n    return {\n      login: LoginStore.getLogin(),\n      code: LoginStore.getCode(),\n      name: LoginStore.getName(),\n      step: LoginStore.getStep(),\n      remember: LoginStore.getRemember(),\n      auto: LoginStore.getAuto(),\n      nameList: LoginStore.getNameList(),\n      errors: LoginStore.getErrors(),\n      isCodeRequested: LoginStore.isCodeRequested(),\n      isCodeSended: LoginStore.isCodeSended(),\n      isLoginRequested: LoginStore.isLoginRequested(),\n      isSignupStarted: LoginStore.isSignupStarted(),\n      isOpened: false\n    }\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n  componentWillMount() {\n    if (ActorClient.isElectron()) {\n      ActorClient.sendToElectron('recodeInLogin');\n    } \n  }\n\n  componentDidMount() {\n  \n    this.handleFocus();\n    if (ActorClient.isElectron()) {   \n      window.messenger.listenOnRender('loginStore', (event, data) => {\n        console.log(\"what?\");\n        if (!data) {\n          return;\n        }\n        // this.setState('store', data.info);\n        LoginActionCreators.changeCode(data.info.code);\n        LoginActionCreators.changeLogin(data.info.login);\n        LoginActionCreators.changeRemember(data.info.remember);\n        LoginActionCreators.changeAuto(data.info.auto);\n        LoginActionCreators.changeNameList(data.nameList);\n        if (LoginStore.isLoggedIn()) {\n          LoginActionCreators.setLoggedOut({'keepAuto': true});\n        } else if(data.info.auto || data.info.requestAuto) {\n          console.log(\"on loggedin\");\n          ActorClient.sendToElectron('setLoginStore', {key: 'info.requestAuto', value: false});\n          this.onRequestCode();\n        }\n      });\n      ActorClient.sendToElectron('logged-in');\n      ActorClient.sendToElectron('active-focus');\n    }\n  }\n\n  componentDidUpdate() {\n    // this.handleFocus();\n    const { auto } = this.state;\n   \n  }\n\n  // From change handlers\n  onLoginChange = event => {\n    event.preventDefault();\n    LoginActionCreators.changeLogin(event.target.value);\n  };\n  onCodeChange = event => {\n    event.preventDefault();\n    LoginActionCreators.changeCode(event.target.value);\n  };\n  onNameChange = event => {\n    event.preventDefault();\n    LoginActionCreators.changeName(event.target.value);\n  };\n\n  // Form submit handlers\n  onRequestCode = event => {\n    event && event.preventDefault();\n    localStorage.clear();\n    if (LoginStore.isLoggedIn()) {\n      LoginActionCreators.setLoggedOut({'requestAuto': true});\n      return;\n    }\n    // console.log('localStorage', JSON.parse(JSON.stringify(localStorage)));\n    let prmoise = new Promise((resolve, reject) => {\n      LoginActionCreators.requestNickName(this.state.login, resolve, reject);\n    });\n    prmoise.then(() => {\n      let prmoise = new Promise((resolve, reject) => {\n        LoginActionCreators.sendPassword(this.state.code, resolve, reject);\n      });\n      prmoise.then(() => {}, () => {\n        this.handleFocus();\n      });\n    }, () => {\n      this.handleFocus();\n    });\n  };\n  onSignupRequested = event => {\n    event.preventDefault();\n    LoginActionCreators.sendSignup(this.state.name);\n  };\n\n  handleRestartAuthClick = event => {\n    event.preventDefault();\n    LoginActionCreators.restartAuth();\n  };\n\n  handleSelectName = (name, event) => {\n    event.preventDefault();\n    LoginActionCreators.changeLogin(name);\n    LoginActionCreators.changeCode('');\n  }\n\n  handleChangeRemember = (event) => {\n    LoginActionCreators.changeRemember(event.target.checked);\n    if (!event.target.checked) {\n      LoginActionCreators.changeAuto(event.target.checked);\n    }\n  }\n\n  handleChangeAuto = (event) => {\n    LoginActionCreators.changeAuto(event.target.checked);\n    if (event.target.checked) {\n      LoginActionCreators.changeRemember(event.target.checked);\n    }\n  }\n\n  toggleDropdown = event => {\n    event.preventDefault();\n    const { isOpened } = this.state;\n    if (!isOpened) {\n      this.setState({'isOpened': true});\n      document.addEventListener('click', this.closeDropdown);\n    } else {\n      this.closeDropdown();\n    }\n  }\n  closeDropdown = () => {\n    this.setState({'isOpened': false});\n    document.removeEventListener('click', this.closeDropdown);\n  }\n\n  handleFocus = () => {\n    const { step } = this.state;\n\n    switch (step) {\n      case AuthSteps.LOGIN_WAIT:\n      case AuthSteps.CODE_WAIT:\n        if (!this.state.isCodeRequested) {\n          this.refs.login.focus();\n        } else if (!this.state.isCodeSended) {\n          this.refs.code.focus();\n        }\n        break;\n      case AuthSteps.NAME_WAIT:\n        this.refs.name.focus();\n        break;\n      default:\n    }\n  };\n  renderDropDown() {\n    const { nameList } = this.state;\n    if (nameList && nameList.size === 0) return null;\n    return (\n      <div>\n      <i className=\"drop-icon material-icons\" onClick={this.toggleDropdown}>arrow_drop_down</i>\n      <ul className=\"dropdown__menu\">\n      { nameList.map((item, index) => {\n      return <li className=\"dropdown__menu__item\" onClick={this.handleSelectName.bind(this, item)} key={ index }>{ item }</li>}) }\n      </ul>\n      </div>\n    );\n  }\n  renderCheckbox() {\n    const { remember, auto } = this.state;\n    if (!ActorClient.isElectron()) {\n      return null;\n    }\n    return (\n      <div className=\"login-remember\">\n        <Checkbox label=\"记住用户名和密码\" id=\"remember\" name=\"remember\" value={ remember } onChange={ this.handleChangeRemember } />\n        <Checkbox label=\"自动登录\" id=\"autoLogin\" name=\"autoLogin\" value={ auto } onChange={ this.handleChangeAuto } />\n      </div>\n    );\n  }\n  render() {\n    const { step, errors, login, code, name, isOpened, remember, auto, isCodeRequested, isCodeSended, isSignupStarted, isLoginRequested } = this.state;\n    const { intl } = this.context;\n\n    console.log('remember', remember);\n\n    let requestFormClassName = classnames('login-new__forms__form', 'login-new__forms__form--request', {\n      'login-new__forms__form--active': step === AuthSteps.LOGIN_WAIT || step === AuthSteps.CODE_WAIT,\n      'login-new__forms__form--done': step !== AuthSteps.LOGIN_WAIT && step !== AuthSteps.CODE_WAIT\n    });\n    // let checkFormClassName = classnames('login-new__forms__form', 'login-new__forms__form--check', {\n    //   'login-new__forms__form--active': step === AuthSteps.CODE_WAIT && isCodeRequested,\n    //   'login-new__forms__form--done': step !== AuthSteps.CODE_WAIT && isCodeSended\n    // });\n    let signupFormClassName = classnames('login-new__forms__form', 'login-new__forms__form--signup', {\n      'login-new__forms__form--active': step === AuthSteps.NAME_WAIT\n    });\n\n    let dropClassName = classnames('dropdown', {\n      'dropdown--opened': isOpened\n    });\n\n    const spinner = (\n      <div className=\"spinner\">\n        <div/><div/><div/><div/><div/><div/>\n        <div/><div/><div/><div/><div/><div/>\n      </div>\n    );\n\n    return (\n      <div className=\"login-bg-box\">\n      <section className=\"login-new row center-xs middle-xs\">\n\n        {/* <div className=\"login-new__welcome col-xs row center-xs middle-xs\">\n          <img alt={`${this.appName} messenger`}\n               className=\"logo\"\n               src=\"assets/images/logo.png\"\n               srcSet=\"assets/images/logo@2x.png 2x\"/>\n\n          <article>\n            <h1 className=\"login-new__heading\">\n              <FormattedHTMLMessage id=\"login.welcome.header\" values={{ appName: this.appName }}/>\n            </h1>\n\n            <FormattedHTMLMessage id=\"login.welcome.text\" values={{ appName: this.appName }}/>\n          </article>\n\n          <footer>\n            <div className=\"pull-left\"><FormattedMessage id=\"login.welcome.copyright\" values={{ appName: this.appName }}/></div>\n            <div className=\"pull-right\">\n              <a href=\"//actorapp.ghost.io/desktop-apps\">Desktop</a>&nbsp;&nbsp;•&nbsp;&nbsp;\n              <a href=\"//actor.im/ios\">iPhone</a>&nbsp;&nbsp;•&nbsp;&nbsp;\n              <a href=\"//actor.im/android\">Android</a>\n            </div>\n          </footer>\n        </div> */}\n\n        <div className=\"login-new__forms row center-xs middle-xs\">\n        <img alt={`${this.appName} messenger`}\n               className=\"logo\"\n               src=\"assets/images/logo1.png\"\n               width=\"70\"/> \n          <h2 className=\"login-title\">\n            <FormattedMessage id=\"login.name\"/>\n            <FormattedMessage id=\"login.name_en\"/>\n          </h2>\n          <div>\n            <form className={requestFormClassName} onSubmit={this.onRequestCode}>\n              {/* <a className=\"wrong\" onClick={this.handleRestartAuthClick}><FormattedMessage id=\"login.wrong\"/></a>*/}\n              <div className={ dropClassName }>\n              <TextField className=\"login-input login-input-user\"\n                         disabled={isLoginRequested || step !== AuthSteps.LOGIN_WAIT && step !== AuthSteps.CODE_WAIT}\n                         errorText={errors.login}\n                         floatingLabel={intl.messages['login.user']}\n                         onChange={this.onLoginChange}\n                         placeholder={intl.messages['login.user']}\n                         ref=\"login\"\n                         value={login}/>\n                { this.renderDropDown() }\n              </div>\n              <TextField className=\"login-input login-input-password\"\n                         disabled={isLoginRequested || step !== AuthSteps.LOGIN_WAIT && step !== AuthSteps.CODE_WAIT}\n                         errorText={errors.code}\n                         floatingLabel={intl.messages['login.authPassword']}\n                         onChange={this.onCodeChange}\n                         placeholder={intl.messages['login.authPassword']}\n                         ref=\"code\"\n                         type=\"password\"\n                         value={code}/>\n              {/* <div className=\"login-remember\">\n                <div className={ selectedClassName }><input type=\"checkbox\" id=\"remember\" checked={ remember } onChange={ this.handleChangeRemember } /></div>\n                <label htmlFor=\"remember\" className=\"login-remember-msg\">记住用户名和密码</label>\n              </div> */}\n              { this.renderCheckbox() }\n              <footer className=\"text-center\">\n                <button className=\"button button--rised button--wide\"\n                        type=\"submit\"\n                        disabled={isLoginRequested}>\n                  <FormattedMessage id=\"button.login\"/>\n                  {isLoginRequested ? spinner : null}\n\n                </button>\n              </footer>\n            </form>\n\n            <form className={signupFormClassName} onSubmit={this.onSignupRequested}>\n              <TextField className=\"login-new__forms__form__input input__material--wide\"\n                         disabled={isSignupStarted || step === AuthSteps.COMPLETED}\n                         errorText={errors.signup}\n                         floatingLabel={intl.messages['login.yourName']}\n                         onChange={this.onNameChange}\n                         ref=\"name\"\n                         type=\"text\"\n                         value={name}/>\n              <footer className=\"text-center\">\n                <button className=\"button button--rised button--wide\"\n                        type=\"submit\"\n                        disabled={isSignupStarted}>\n                  <FormattedMessage id=\"button.signUp\"/>\n                  {isSignupStarted ? spinner : null}\n                </button>\n              </footer>\n            </form>\n          </div>\n        </div>\n      </section>\n      {/* <img src=\"../assets/images/bg_bottom.png\" className=\"login-bg-bottom\" width=\"100%\" /> */}\n      <div className=\"bottom-info\"><img src=\"../assets/images/logo2.png\" width=\"22\" height=\"25\" style={{'verticalAlign': 'middle'}} /> <span style={{'verticalAlign': 'middle'}}>浙江易舸软件有限公司</span></div>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(Login, { pure: false, withProps: true });\n"]}