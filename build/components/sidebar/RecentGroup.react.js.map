{"version":3,"sources":["../../../src/components/sidebar/RecentGroup.react.js"],"names":["RecentGroup","props","shouldComponentUpdate","bind","renderPlusButton","group","onPlusClick","renderGroupTitle","onTitleClick","titleMessage","tooltipMessage","renderGroupList","items","archive","currentPeer","onItemUpdate","length","renderEmptyHint","map","dialog","peer","peerKey","peerToString","isActive","equals","render","propTypes","string","isRequired","array","object","func"],"mappings":"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","file":"RecentGroup.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from 'rc-tooltip';\nimport PeerUtils from '../../utils/PeerUtils';\nimport RecentItem from './RecentItem.react';\n\nclass RecentGroup extends Component {\n  static propTypes = {\n    group: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    archive: PropTypes.object.isRequired,\n    currentPeer: PropTypes.object,\n    onTitleClick: PropTypes.func,\n    onPlusClick: PropTypes.func,\n    onItemUpdate: PropTypes.func.isRequired,\n    renderEmptyHint: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  renderPlusButton() {\n    const { group, onPlusClick } = this.props;\n    if (!onPlusClick) {\n      return null;\n    }\n\n    if (group === 'privates') {\n      return null;\n    }\n\n    return (\n      <Tooltip\n        placement=\"top\"\n        mouseEnterDelay={0.15}\n        mouseLeaveDelay={0}\n        overlay={<FormattedMessage id={`tooltip.recent.${group}Create`}/>}>\n        <i className=\"recent__group__plus-button material-icons pull-right\" onClick={onPlusClick}>\n          add_circle_outline\n        </i>\n      </Tooltip>\n    );\n  }\n\n  renderGroupTitle() {\n    const { group, onTitleClick } = this.props;\n\n    const titleMessage = <FormattedMessage id={`sidebar.recents.${group}`} />;\n    if (!onTitleClick) {\n      return (\n        <div className=\"recent__group__header\">\n          <div className=\"recent__group__title\">\n            {titleMessage}\n          </div>\n        </div>\n      );\n    }\n\n    const tooltipMessage = <FormattedMessage id={`tooltip.recent.${group}List`}/>;\n\n    return (\n      <div className=\"recent__group__header\">\n        <div className=\"recent__group__title recent__group__title--clickable\" onClick={onTitleClick}>\n          <Tooltip\n            placement=\"right\"\n            mouseEnterDelay={0.15}\n            mouseLeaveDelay={0}\n            overlay={tooltipMessage}\n          >\n            {titleMessage}\n          </Tooltip>\n        </div>\n        {this.renderPlusButton()}\n      </div>\n    );\n  }\n\n  renderGroupList() {\n    const { items, archive, currentPeer, onItemUpdate } = this.props;\n    if (!items.length) {\n      if (this.props.renderEmptyHint) {\n        return this.props.renderEmptyHint();\n      }\n\n      return null;\n    }\n\n    return items.map((dialog) => {\n      const peer = dialog.peer.peer;\n      const peerKey = PeerUtils.peerToString(peer);\n      const isActive = PeerUtils.equals(peer, currentPeer);\n\n      return (\n        <RecentItem\n          dialog={dialog}\n          archiveState={archive[peerKey]}\n          isActive={isActive}\n          onUpdate={onItemUpdate}\n          key={peerKey}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"recent__group\">\n        {this.renderGroupTitle()}\n        {this.renderGroupList()}\n      </div>\n    );\n  }\n}\n\nexport default RecentGroup;\n"]}