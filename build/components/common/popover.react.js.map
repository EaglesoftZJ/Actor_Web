{"version":3,"sources":["../../../src/components/common/popover.react.js"],"names":["Popover","componentDidMount","componentDidUpdate","isShow","props","resetPopoverPosition","componentWillReceiveProps","nextProps","state","left","top","node","popoverHeight","refs","popover","outerHeight","nodeTop","position","nodeLeft","nodeWidth","outerWidth","nodeHeight","toLeft","toTop","wTop","window","scrollTop","wBottom","height","setState","handleMouseMove","event","nativeEvent","stopImmediatePropagation","renderArrow","style","renderInfo","children","render","popoverClassName","propTypes","object","bool"],"mappings":"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","file":"popover.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes, Children } from 'react';\nimport { FormattedHTMLMessage } from 'react-intl';\nimport $ from 'jquery';\n\nimport classnames from 'classnames';\n\nclass Popover extends Component {\n  static propTypes = {\n    node: PropTypes.object,\n    isShow: PropTypes.bool\n  };\n  componentDidMount() {\n  }\n  componentDidUpdate() {\n    const { isShow } = this.props;\n    isShow && this.resetPopoverPosition();\n  }\n  componentWillReceiveProps (nextProps) {\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      left: 0,\n      top: 0\n    };\n  }\n\n  resetPopoverPosition() {\n    const { node } = this.props;\n    const { left, top } = this.state; \n    if (!node) return;\n    // this.setState({'left': 10, 'top': 10});\n    let popoverHeight = $(this.refs.popover).outerHeight();\n    let nodeTop = $(node).position().top;\n    let nodeLeft = $(node).position().left;\n    let nodeWidth = $(node).outerWidth(true);\n    let nodeHeight = $(node).outerHeight(true);\n    let toLeft = nodeLeft + nodeWidth + 10;\n    let toTop = nodeTop + nodeHeight - popoverHeight / 2 - nodeHeight / 2;\n    let wTop = $(window).scrollTop();\n    let wBottom = wTop + $(window).height();\n    if (left !== toLeft || top !== toTop) {\n      this.setState({'left': toLeft, 'top': toTop});\n    }\n  }\n\n  handleMouseMove(event) {\n    event.nativeEvent.stopImmediatePropagation();\n  }\n\n  renderArrow() {\n    const { node } = this.props;\n    let style = {\n      top: ($(this.refs.popover).outerHeight() / 2 - 10) + 'px' \n    };\n    return (\n      <div className=\"arrow\" style={style}></div>\n    )\n  }\n  renderInfo() {\n    const { children } = this.props;\n    if (!children) {\n      return <FormattedHTMLMessage id=\"modal.quickSearch.notHaveInfo\"/>\n    }\n    return children;\n  }\n\n  render() {\n    const { isShow } = this.props;\n    const { left, top } = this.state;\n    let popoverClassName = classnames('popover-con', {'hide': !isShow});\n   return (\n      <div ref=\"popover\" onMouseMove={this.handleMouseMove} className={popoverClassName} style={{left: left + 'px', top: top + 'px'}}>\n        { this.renderInfo() }\n        { this.renderArrow() }\n      </div>\n    );\n  }\n}\n\nexport default Popover;\n"]}