{"version":3,"sources":["../../../src/components/common/popover.react.js"],"names":["Popover","getStores","calculateState","left","top","componentDidMount","componentDidUpdate","isShow","props","resetPopoverPosition","componentWillReceiveProps","nextProps","node","nodeTop","position","nodeLeft","nodeWidth","width","nodeHeight","height","setState","handleMouseMove","event","nativeEvent","stopImmediatePropagation","renderArrow","state","style","renderInfo","children","render","popoverClassName","propTypes","bool","create"],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;+eAXA;;;;IAaMA,O;;;UAMGC,S,wBAAY;AACjB,WAAO,uBAAP;AACD,G;;UAEMC,c,6BAAiB;AACtB,WAAO;AACLC,YAAM,CADD;AAELC,WAAK;AAFA,KAAP;AAID,G;;oBAEDC,iB,gCAAoB;AAClB;AACD,G;;oBACDC,kB,iCAAqB;AAAA,QACXC,MADW,GACA,KAAKC,KADL,CACXD,MADW;;AAEnB,QAAIA,MAAJ,EAAY;AACV,WAAKE,oBAAL;AACD;AACF,G;;oBACDC,yB,sCAA2BC,S,EAAW;AACpC;AACA;AACA;AACA;AACA;AACD,G;;oBAEDF,oB,mCAAuB;AAAA,QACbG,IADa,GACJ,KAAKJ,KADD,CACbI,IADa;;AAErB,QAAI,CAACA,IAAL,EAAW;AACX;AACA,QAAIC,UAAU,sBAAED,IAAF,EAAQE,QAAR,GAAmBV,GAAjC;AACA,QAAIW,WAAW,sBAAEH,IAAF,EAAQE,QAAR,GAAmBX,IAAlC;AACA,QAAIa,YAAY,sBAAEJ,IAAF,EAAQK,KAAR,EAAhB;AACA,QAAIC,aAAa,sBAAEN,IAAF,EAAQO,MAAR,EAAjB;AACA,QAAIhB,OAAOY,WAAWC,SAAX,GAAuB,EAAlC;AACA,QAAIZ,MAAMS,UAAUK,UAAV,GAAuB,GAAjC;AACA,SAAKE,QAAL,CAAc,EAAC,QAAQjB,IAAT,EAAe,OAAOC,GAAtB,EAAd;AACD,G;;oBAEDiB,e,4BAAgBC,K,EAAO;AACrBA,UAAMC,WAAN,CAAkBC,wBAAlB;AACD,G;;AAED,mBAAYhB,KAAZ,EAAmB;AAAA;;AAAA,4CACjB,sBAAMA,KAAN,CADiB;AAElB;;oBAEDiB,W,0BAAc;AAAA,QACJb,IADI,GACK,KAAKJ,KADV,CACJI,IADI;AAAA,iBAEU,KAAKc,KAFf;AAAA,QAEJvB,IAFI,UAEJA,IAFI;AAAA,QAEEC,GAFF,UAEEA,GAFF;;AAGZ,QAAIuB,QAAQ;AACVvB,WAAM,KAAK,sBAAEQ,IAAF,EAAQO,MAAR,KAAmB,CAAzB,GAA8B;AADzB,KAAZ;AAGA,WACE,uCAAK,WAAU,OAAf,EAAuB,OAAOQ,KAA9B,GADF;AAGD,G;;oBACDC,U,yBAAa;AAAA,QACHC,QADG,GACU,KAAKrB,KADf,CACHqB,QADG;;AAEX,QAAI,CAACA,QAAL,EAAe;AACb,aAAO,iEAAsB,IAAG,+BAAzB,GAAP;AACD;AACD,WAAOA,QAAP;AACD,G;;oBAEDC,M,qBAAS;AAAA,QACCvB,MADD,GACY,KAAKC,KADjB,CACCD,MADD;AAAA,kBAEe,KAAKmB,KAFpB;AAAA,QAECvB,IAFD,WAECA,IAFD;AAAA,QAEOC,GAFP,WAEOA,GAFP;;AAGP,QAAI2B,mBAAmB,0BAAW,aAAX,EAA0B,EAAC,QAAQ,CAACxB,MAAV,EAA1B,CAAvB;AACD,WACG;AAAA;AAAA,QAAK,KAAI,SAAT,EAAmB,aAAa,KAAKc,eAArC,EAAsD,WAAWU,gBAAjE,EAAmF,OAAO,EAAC5B,MAAMA,OAAO,IAAd,EAAoBC,KAAKA,MAAM,IAA/B,EAA1F;AACI,WAAKwB,UAAL,EADJ;AAEI,WAAKH,WAAL;AAFJ,KADH;AAMA,G;;;;;AAnFGzB,O,CACGgC,S,GAAY;AACjBpB,QAAM,iBAAUA,IADC;AAEjBL,UAAQ,iBAAU0B;AAFD,C;kBAqFN,iBAAUC,MAAV,CAAiBlC,OAAjB,C","file":"popover.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes, Children } from 'react';\nimport { FormattedHTMLMessage } from 'react-intl';\nimport { Container } from 'flux/utils';\nimport $ from 'jquery';\n\nimport DialogStore from '../../stores/DialogStore';\n\nimport classnames from 'classnames';\n\nclass Popover extends Component {\n  static propTypes = {\n    node: PropTypes.node,\n    isShow: PropTypes.bool\n  };\n\n  static getStores() {\n    return [DialogStore];\n  }\n\n  static calculateState() {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  componentDidMount() {\n    // this.resetPopoverPosition();\n  }\n  componentDidUpdate() {\n    const { isShow } = this.props;\n    if (isShow) {\n      this.resetPopoverPosition();\n    }\n  }\n  componentWillReceiveProps (nextProps) {\n    // const { isShow } = this.props;\n    // console.log(nextProps);\n    // if (isShow !== nextProps.isShow && nextProps.isShow) {\n    //   this.resetPopoverPosition();\n    // }\n  }\n  \n  resetPopoverPosition() {\n    const { node } = this.props;\n    if (!node) return;\n    // this.setState({'left': 10, 'top': 10});\n    let nodeTop = $(node).position().top;\n    let nodeLeft = $(node).position().left;\n    let nodeWidth = $(node).width();\n    let nodeHeight = $(node).height();\n    let left = nodeLeft + nodeWidth + 10;\n    let top = nodeTop + nodeHeight - 100;\n    this.setState({'left': left, 'top': top});\n  }\n\n  handleMouseMove(event) {\n    event.nativeEvent.stopImmediatePropagation();\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderArrow() {\n    const { node } = this.props;\n    const { left, top } = this.state;\n    let style = {\n      top: (90 - $(node).height() / 2) + 'px' \n    };\n    return (\n      <div className=\"arrow\" style={style}></div>\n    )\n  }\n  renderInfo() {\n    const { children } = this.props;\n    if (!children) {\n      return <FormattedHTMLMessage id=\"modal.quickSearch.notHaveInfo\"/>\n    }\n    return children;\n  }\n\n  render() {\n    const { isShow } = this.props;\n    const { left, top } = this.state;\n    let popoverClassName = classnames('popover-con', {'hide': !isShow});\n   return (\n      <div ref=\"popover\" onMouseMove={this.handleMouseMove} className={popoverClassName} style={{left: left + 'px', top: top + 'px'}}>\n        { this.renderInfo() }\n        { this.renderArrow() }\n      </div>\n    );\n  }\n}\n\nexport default Container.create(Popover);\n"]}