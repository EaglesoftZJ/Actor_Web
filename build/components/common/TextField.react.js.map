{"version":3,"sources":["../../../src/components/common/TextField.react.js"],"names":["TextField","props","focus","input","ref","refs","setImmediate","handleChange","event","onChange","handleFocus","onFocus","setState","isFocused","handleBlur","onBlur","state","inputId","Math","random","toString","substr","render","className","floatingLabel","type","value","disabled","errorText","inputClassName","length","inputProps","id","propTypes","string","node","bool","func"],"mappings":"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","file":"TextField.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport classnames from 'classnames';\r\n\r\nclass TextField extends Component {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    floatingLabel: PropTypes.node,\r\n    type: PropTypes.string,\r\n    value: PropTypes.string,\r\n    ref: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    errorText: PropTypes.string,\r\n\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onBlur: PropTypes.func\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isFocused: false,\r\n      inputId: 'input-' + Math.random().toString(36).substr(2, 5)\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { className, floatingLabel, type, value, ref, disabled, errorText } = this.props;\r\n    const { isFocused, inputId } = this.state;\r\n\r\n    const inputClassName = classnames('input input__material', className, {\r\n      'input__material--focus': isFocused,\r\n      'input__material--filled': value && value.length > 0,\r\n      'input__material--disabled': disabled,\r\n      'input__material--with-error': errorText\r\n    });\r\n\r\n    const inputProps = {\r\n      type: type || 'text',\r\n      id: inputId,\r\n      onChange: this.handleChange,\r\n      onFocus: this.handleFocus,\r\n      onBlur: this.handleBlur,\r\n      value,\r\n      disabled,\r\n      ref: ref ? ref : 'input'\r\n    };\r\n\r\n    return (\r\n      <div className={inputClassName}>\r\n        {\r\n          floatingLabel\r\n            ? <label htmlFor={inputId} onMouseDown={this.focus}>{floatingLabel}</label>\r\n            : null\r\n        }\r\n        <input {...inputProps}/>\r\n        {\r\n          errorText\r\n            ? <span className=\"error\">{errorText}</span>\r\n            : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focus = () => {\r\n    const input = this.props.ref || this.refs.input\r\n    if (!input) {\r\n      return;\r\n    }\r\n\r\n    setImmediate(() => {\r\n      findDOMNode(input).focus();\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { onChange } = this.props;\r\n    onChange && onChange(event);\r\n  };\r\n\r\n  handleFocus = (event) => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ isFocused: true });\r\n    onFocus && onFocus(event);\r\n  };\r\n\r\n  handleBlur = (event) => {\r\n    const { onBlur } = this.props;\r\n    this.setState({ isFocused: false });\r\n    onBlur && onBlur(event);\r\n  };\r\n}\r\n\r\nexport default TextField;\r\n"]}