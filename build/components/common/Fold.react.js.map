{"version":3,"sources":["../../../src/components/common/Fold.react.js"],"names":["Fold","props","onClick","setState","isOpen","state","render","icon","iconClassName","title","iconElement","titleIconClassName","className","foldIcon","children","propTypes","oneOfType","arrayOf","node","string","element","isRequired"],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;+eALA;;;;IAOMA,I;;;AAYJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UAQnBC,OARmB,GAQT;AAAA,aAAM,MAAKC,QAAL,CAAc,EAAEC,QAAQ,CAAC,MAAKC,KAAL,CAAWD,MAAtB,EAAd,CAAN;AAAA,KARS;;AAGjB,UAAKC,KAAL,GAAa;AACXD,cAAQ;AADG,KAAb;AAHiB;AAMlB;;iBAIDE,M,qBAAS;AAAA,iBAC6C,KAAKL,KADlD;AAAA,QACCM,IADD,UACCA,IADD;AAAA,QACOC,aADP,UACOA,aADP;AAAA,QACsBC,KADtB,UACsBA,KADtB;AAAA,QAC6BC,WAD7B,UAC6BA,WAD7B;;AAEP,QAAMC,qBAAqB,0BAAW,qBAAX,EAAkCH,aAAlC,CAA3B;AACA,QAAMI,YAAY,0BAAW;AAC3B,cAAQ,IADmB;AAE3B,oBAAc,KAAKP,KAAL,CAAWD;AAFE,KAAX,CAAlB;;AAKA,QAAIS,iBAAJ;AACA,QAAIN,IAAJ,EAAU;AACRM,iBAAW;AAAA;AAAA,UAAG,WAAWF,kBAAd;AAAmCJ;AAAnC,OAAX;AACD;AACD,QAAIG,WAAJ,EAAiB;AACfG,iBAAWH,WAAX;AACD;;AAED,WACE;AAAA;AAAA,QAAK,WAAWE,SAAhB;AACE;AAAA;AAAA,UAAK,WAAU,aAAf,EAA6B,SAAS,KAAKV,OAA3C;AACGW,gBADH;AAEGJ,aAFH;AAGE;AAAA;AAAA,YAAG,WAAU,2CAAb;AAAA;AAAA;AAHF,OADF;AAME;AAAA;AAAA,UAAK,WAAU,eAAf;AACG,aAAKR,KAAL,CAAWa;AADd;AANF,KADF;AAYD,G;;;;;AAlDGd,I,CACGe,S,GAAY;AACjBD,YAAU,iBAAUE,SAAV,CAAoB,CAC5B,iBAAUC,OAAV,CAAkB,iBAAUC,IAA5B,CAD4B,EAE5B,iBAAUA,IAFkB,CAApB,CADO;AAKjBX,QAAM,iBAAUY,MALC;AAMjBX,iBAAe,iBAAUW,MANR;AAOjBT,eAAa,iBAAUU,OAPN;AAQjBX,SAAO,iBAAUS,IAAV,CAAeG;AARL,C;kBAoDNrB,I","file":"Fold.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nclass Fold extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ]),\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconElement: PropTypes.element,\n    title: PropTypes.node.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  onClick = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render() {\n    const { icon, iconClassName, title, iconElement } = this.props;\n    const titleIconClassName = classnames('material-icons icon', iconClassName);\n    const className = classnames({\n      'fold': true,\n      'fold--open': this.state.isOpen\n    });\n\n    let foldIcon;\n    if (icon) {\n      foldIcon = <i className={titleIconClassName}>{icon}</i>;\n    }\n    if (iconElement) {\n      foldIcon = iconElement;\n    }\n\n    return (\n      <div className={className}>\n        <div className=\"fold__title\" onClick={this.onClick}>\n          {foldIcon}\n          {title}\n          <i className=\"fold__indicator material-icons pull-right\">arrow_drop_down</i>\n        </div>\n        <div className=\"fold__content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fold;\n"]}