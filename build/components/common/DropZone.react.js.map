{"version":3,"sources":["../../../src/components/common/DropZone.react.js"],"names":["DropZone","props","windowDragging","zoneDragging","state","isActive","isHovered","onWindowDrop","bind","onWindowDragEnter","onWindowDragOver","onWindowDragLeave","onDrop","onDragEnter","onDragOver","onDragLeave","shouldComponentUpdate","nextProps","nextState","componentDidMount","listeners","listen","window","componentWillUnmount","forEach","listener","remove","event","preventDefault","stopPropagation","setState","clearTimeout","windowTimeout","setTimeout","onDropComplete","dataTransfer","files","zoneTimeout","effect","effectAllowed","dropEffect","e","render","className","children","propTypes","node","isRequired","func"],"mappings":"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","file":"DropZone.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport EventListener from 'fbjs/lib/EventListener';\nimport classnames from 'classnames';\n\nclass DropZone extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    onDropComplete: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.windowDragging = false;\n    this.zoneDragging = false;\n\n    this.state = {\n      isActive: false,\n      isHovered: false\n    };\n\n    this.onWindowDrop = this.onWindowDrop.bind(this);\n    this.onWindowDragEnter = this.onWindowDragEnter.bind(this);\n    this.onWindowDragOver = this.onWindowDragOver.bind(this);\n    this.onWindowDragLeave = this.onWindowDragLeave.bind(this);\n\n    this.onDrop = this.onDrop.bind(this);\n    this.onDragEnter = this.onDragEnter.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.isActive !== this.state.isActive ||\n           nextState.isHovered !== this.state.isHovered;\n  }\n\n  componentDidMount() {\n    this.listeners = [\n      EventListener.listen(window, 'drop', this.onWindowDrop),\n      EventListener.listen(window, 'dragenter', this.onWindowDragEnter),\n      EventListener.listen(window, 'dragover', this.onWindowDragOver),\n      EventListener.listen(window, 'dragleave', this.onWindowDragLeave)\n    ];\n  }\n\n  componentWillUnmount() {\n    this.listeners.forEach((listener) => {\n      listener.remove();\n    });\n\n    this.listeners = null;\n  }\n\n  onWindowDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.setState({ isActive: false, isHovered: false });\n  }\n\n  onWindowDragEnter() {\n    this.windowDragging = true;\n    clearTimeout(this.windowTimeout);\n\n    if (this.state.isActive) {\n      return;\n    }\n\n    this.setState({ isActive: true });\n  }\n\n  onWindowDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.windowDragging = true;\n    clearTimeout(this.windowTimeout);\n  }\n\n  onWindowDragLeave() {\n    this.windowDragging = false;\n    clearTimeout(this.windowTimeout);\n\n    this.windowTimeout = setTimeout(() => {\n      if (!this.windowDragging) {\n        this.setState({ isActive: false });\n      }\n    }, 60);\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.onDragLeave();\n    this.onWindowDragLeave();\n    this.props.onDropComplete(event.dataTransfer.files);\n  }\n\n  onDragEnter() {\n    this.zoneDragging = true;\n    this.windowDragging = true;\n    clearTimeout(this.zoneTimeout);\n    clearTimeout(this.windowTimeout);\n\n    if (this.state.isHovered) {\n      return;\n    }\n\n    this.setState({ isHovered: true });\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.zoneDragging = true;\n    this.windowDragging = true;\n    clearTimeout(this.zoneTimeout);\n    clearTimeout(this.windowTimeout);\n\n    // Makes it possible to drag files from chrome's download bar\n    // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n    try {\n      const effect = event.dataTransfer.effectAllowed;\n      if (effect === 'move' || effect === 'linkMove') {\n        event.dataTransfer.dropEffect = 'move';\n      } else {\n        event.dataTransfer.dropEffect = 'copy';\n      }\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  onDragLeave() {\n    this.zoneDragging = false;\n    clearTimeout(this.zoneTimeout);\n\n    this.zoneTimeout = setTimeout(() => {\n      if (!this.zoneDragging) {\n        this.setState({ isHovered: false });\n      }\n    }, 60);\n  }\n\n  render() {\n    const { isActive, isHovered } = this.state;\n\n    if (!isActive) {\n      return null;\n    }\n\n    const className = classnames('dropzone', {\n      'dropzone--hover': isHovered\n    });\n\n    return (\n      <div\n        className={className}\n        onDrop={this.onDrop}\n        onDragOver={this.onDragOver}\n        onDragEnter={this.onDragEnter}\n        onDragLeave={this.onDragLeave}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default DropZone;\n"]}