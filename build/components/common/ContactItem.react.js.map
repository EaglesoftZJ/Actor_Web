{"version":3,"sources":["../../../src/components/common/ContactItem.react.js"],"names":["ContactItem","props","shouldComponentUpdate","bind","handleClick","onClick","render","name","placeholder","avatar","children","className","contactClassName","__html","propTypes","uid","number","isRequired","string","func","node"],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;;;;;+eAVA;;;;IAYMA,W;;;AAcJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,qBAAL,GAA6B,kDAAsBC,IAAtB,OAA7B;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AAJiB;AAKlB;;wBAEDC,W,0BAAc;AAAA,QACJC,OADI,GACQ,KAAKJ,KADb,CACJI,OADI;;AAEZA,eAAWA,SAAX;AACD,G;;wBAEDC,M,qBAAS;AAAA,iBACoD,KAAKL,KADzD;AAAA,QACCM,IADD,UACCA,IADD;AAAA,QACOC,WADP,UACOA,WADP;AAAA,QACoBC,MADpB,UACoBA,MADpB;AAAA,QAC4BC,QAD5B,UAC4BA,QAD5B;AAAA,QACsCC,SADtC,UACsCA,SADtC;;AAEP,QAAMC,mBAAmB,0BAAW,uBAAX,EAAoCD,SAApC,CAAzB;;AAEA,WACE;AAAA;AAAA,QAAK,WAAWC,gBAAhB,EAAkC,SAAS,KAAKR,WAAhD;AACE;AAAA;AAAA,UAAK,WAAU,iBAAf;AACE;AACE,iBAAOK,MADT;AAEE,uBAAaD,WAFf;AAGE,gBAAK,OAHP;AAIE,iBAAOD;AAJT;AADF,OADF;AAUE;AAAA;AAAA,UAAK,WAAU,sBAAf;AACE,gDAAM,WAAU,OAAhB,EAAwB,yBAAyB,EAAEM,QAAQ,iCAAgBN,IAAhB,CAAV,EAAjD;AADF,OAVF;AAcE;AAAA;AAAA,UAAK,WAAU,mBAAf;AACGG;AADH;AAdF,KADF;AAoBD,G;;;;;AAlDGV,W,CACGc,S,GAAY;AACjBC,OAAK,iBAAUC,MAAV,CAAiBC,UADL;AAEjBV,QAAM,iBAAUW,MAAV,CAAiBD,UAFN;AAGjBT,eAAa,iBAAUU,MAAV,CAAiBD,UAHb;AAIjBR,UAAQ,iBAAUS,MAJD;;AAMjBP,aAAW,iBAAUO,MANJ;;AAQjBb,WAAS,iBAAUc,IARF;;AAUjBT,YAAU,iBAAUU;AAVH,C;kBAoDNpB,W","file":"ContactItem.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport AvatarItem from './AvatarItem.react';\n\nimport { escapeWithEmoji } from '../../utils/EmojiUtils';\n\nclass ContactItem extends Component {\n  static propTypes = {\n    uid: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n\n    className: PropTypes.string,\n\n    onClick: PropTypes.func,\n\n    children: PropTypes.node\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { onClick } = this.props;\n    onClick && onClick();\n  }\n\n  render() {\n    const { name, placeholder, avatar, children, className } = this.props;\n    const contactClassName = classnames('contact row middle-xs', className);\n\n    return (\n      <div className={contactClassName} onClick={this.handleClick}>\n        <div className=\"contact__avatar\">\n          <AvatarItem\n            image={avatar}\n            placeholder={placeholder}\n            size=\"small\"\n            title={name}\n          />\n        </div>\n\n        <div className=\"contact__body col-xs\">\n          <span className=\"title\" dangerouslySetInnerHTML={{ __html: escapeWithEmoji(name) }}/>\n        </div>\n\n        <div className=\"contact__controls\">\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactItem;\n"]}