{"version":3,"sources":["../../../src/components/common/MenuOverlay.react.js"],"names":["MenuOverlay","getStores","calculateState","message","getMessage","isMessageDropdownOpen","rid","isRecentContextOpen","targetRect","getTargetRect","contextPos","getContextPos","contextPeer","getPeer","profile","getProfile","props","render","state","currentPeer","getCurrentPeer","menuOverlayClassName","create","pure"],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;+eAbA;;;;IAeMA,W;;;cACGC,S,wBAAY;AACjB,WAAO,wEAAP;AACD,G;;cAEMC,c,6BAAiB;AACtB,QAAMC,UAAU,wBAAcC,UAAd,EAAhB;;AAEA,WAAO;AACLC,6BAAuB,wBAAcA,qBAAd,CAAoCF,QAAQG,GAA5C,CADlB;AAELC,2BAAqB,wBAAcA,mBAAd,EAFhB;AAGLC,kBAAY,wBAAcC,aAAd,EAHP;AAILC,kBAAY,wBAAcC,aAAd,EAJP;AAKLC,mBAAa,wBAAcC,OAAd,EALR;AAMLC,eAAS,uBAAaC,UAAb,EANJ;AAOLZ;AAPK,KAAP;AASD,G;;AAED,uBAAYa,KAAZ,EAAmB;AAAA;;AAAA,4CACjB,sBAAMA,KAAN,CADiB;AAElB;;wBAEDC,M,qBAAS;AAAA,iBACuG,KAAKC,KAD5G;AAAA,QACCb,qBADD,UACCA,qBADD;AAAA,QACwBE,mBADxB,UACwBA,mBADxB;AAAA,QAC6CJ,OAD7C,UAC6CA,OAD7C;AAAA,QACsDK,UADtD,UACsDA,UADtD;AAAA,QACkEI,WADlE,UACkEA,WADlE;AAAA,QAC+EF,UAD/E,UAC+EA,UAD/E;AAAA,QAC2FI,OAD3F,UAC2FA,OAD3F;;AAEP,QAAMK,cAAc,sBAAYC,cAAZ,EAApB;;AAEA,QAAMC,uBAAuB,0BAAW,cAAX,EAA2B;AACtD,8BAAwBhB,yBAAyBE;AADK,KAA3B,CAA7B;;AAIA,WACE;AAAA;AAAA,QAAK,WAAWc,oBAAhB;AAEIhB,8BACI,0DAAgB,SAASF,OAAzB;AACgB,oBAAYK,UAD5B;AAEgB,cAAMW,WAFtB;AAGgB,iBAASL,OAHzB;AAIgB,0BAJhB,GADJ,GAMI,IARR;AAWIP,4BACI,6DAAmB,MAAMK,WAAzB;AACmB,oBAAYF,UAD/B;AAEmB,0BAFnB,GADJ,GAII;AAfR,KADF;AAoBD,G;;;;;kBAGY,iBAAUY,MAAV,CAAiBtB,WAAjB,EAA8B,EAAEuB,MAAM,KAAR,EAA9B,C","file":"MenuOverlay.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\n\nimport MessageActions from './dropdown/MessageActions.react';\nimport RecentContextMenu from './dropdown/RecentContextMenu.react'\n\nimport DropdownStore from '../../stores/DropdownStore';\nimport DialogStore from '../../stores/DialogStore';\nimport ProfileStore from '../../stores/ProfileStore';\n\nclass MenuOverlay extends Component {\n  static getStores() {\n    return [DropdownStore, DialogStore, ProfileStore];\n  }\n\n  static calculateState() {\n    const message = DropdownStore.getMessage();\n\n    return {\n      isMessageDropdownOpen: DropdownStore.isMessageDropdownOpen(message.rid),\n      isRecentContextOpen: DropdownStore.isRecentContextOpen(),\n      targetRect: DropdownStore.getTargetRect(),\n      contextPos: DropdownStore.getContextPos(),\n      contextPeer: DropdownStore.getPeer(),\n      profile: ProfileStore.getProfile(),\n      message\n    };\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { isMessageDropdownOpen, isRecentContextOpen, message, targetRect, contextPeer, contextPos, profile } = this.state;\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    const menuOverlayClassName = classnames('menu-overlay', {\n      'menu-overlay--opened': isMessageDropdownOpen || isRecentContextOpen\n    });\n\n    return (\n      <div className={menuOverlayClassName}>\n        {\n          isMessageDropdownOpen\n            ? <MessageActions message={message}\n                              targetRect={targetRect}\n                              peer={currentPeer}\n                              profile={profile}\n                              hideOnScroll/>\n            : null\n        }\n        {\n          isRecentContextOpen\n            ? <RecentContextMenu peer={contextPeer}\n                                 contextPos={contextPos}\n                                 hideOnScroll/>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Container.create(MenuOverlay, { pure: false });\n"]}