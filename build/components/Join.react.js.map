{"version":3,"sources":["../../src/components/Join.react.js"],"names":["Join","getStores","calculateState","getState","props","joinGroupViaLink","params","token","renderStatus","state","status","error","PROCESSING","PENDING","SUCCESS","FAILURE","render","propTypes","shape","string","isRequired","create"],"mappings":";;;;AAIA;;;;AACA;;AAEA;;AACA;;;;AACA;;;;;;;;;;+eATA;;;;IAWMA,I;;;OAOGC,S,wBAAY;AACjB,WAAO,0BAAP;AACD,G;;OAEMC,c,6BAAiB;AACtB,WAAO,yBAAeC,QAAf,EAAP;AACD,G;;AAED,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,+BAAiBC,gBAAjB,CAAkCD,MAAME,MAAN,CAAaC,KAA/C;AAHiB;AAIlB;;iBAEDC,Y,2BAAe;AAAA,iBACoB,KAAKC,KADzB;AAAA,QACLC,MADK,UACLA,MADK;AAAA,QACGH,KADH,UACGA,KADH;AAAA,QACUI,KADV,UACUA,KADV;;AAEb,YAAQD,MAAR;AACE,WAAK,qCAAkBE,UAAvB;AACA,WAAK,qCAAkBC,OAAvB;AACE,eACE;AAAA;AAAA,YAAK,WAAU,eAAf;AAAA;AACcN,eADd;AAAA;AAAA,SADF;;AAMF,WAAK,qCAAkBO,OAAvB;AACE,eACE;AAAA;AAAA,YAAK,WAAU,sCAAf;AAAA;AAAA,SADF;;AAMF,WAAK,qCAAkBC,OAAvB;AACE,eACE;AAAA;AAAA,YAAK,WAAU,oCAAf;AACGJ;AADH,SADF;AAjBJ;AAuBD,G;;iBAEDK,M,qBAAS;AACP,WACE;AAAA;AAAA,QAAK,WAAU,iBAAf;AACG,WAAKR,YAAL;AADH,KADF;AAKD,G;;;;;AAtDGR,I,CACGiB,S,GAAY;AACjBX,UAAQ,iBAAUY,KAAV,CAAgB;AACtBX,WAAO,iBAAUY,MAAV,CAAiBC;AADF,GAAhB,EAELA;AAHc,C;kBAwDN,iBAAUC,MAAV,CAAiBrB,IAAjB,C","file":"Join.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { Container } from 'flux/utils';\r\n\r\nimport { AsyncActionStates } from '../constants/ActorAppConstants';\r\nimport JoinGroupStore from '../stores/JoinGroupStore';\r\nimport JoinGroupActions from '../actions/JoinGroupActions';\r\n\r\nclass Join extends Component {\r\n  static propTypes = {\r\n    params: PropTypes.shape({\r\n      token: PropTypes.string.isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  static getStores() {\r\n    return [JoinGroupStore];\r\n  }\r\n\r\n  static calculateState() {\r\n    return JoinGroupStore.getState();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    JoinGroupActions.joinGroupViaLink(props.params.token);\r\n  }\r\n\r\n  renderStatus() {\r\n    const { status, token, error } = this.state;\r\n    switch (status) {\r\n      case AsyncActionStates.PROCESSING:\r\n      case AsyncActionStates.PENDING:\r\n        return (\r\n          <div className=\"join__message\">\r\n            Joining to {token}...\r\n          </div>\r\n        );\r\n\r\n      case AsyncActionStates.SUCCESS:\r\n        return (\r\n          <div className=\"join__message join__message--success\">\r\n            Successfully joined to group!\r\n          </div>\r\n        );\r\n\r\n      case AsyncActionStates.FAILURE:\r\n        return (\r\n          <div className=\"join__message join__message--error\">\r\n            {error}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"join__container\">\r\n        {this.renderStatus()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container.create(Join);\r\n"]}