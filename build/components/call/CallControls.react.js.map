{"version":3,"sources":["../../../src/components/call/CallControls.react.js"],"names":["CallControls","render","props","isOutgoing","small","secondaryControls","mainControls","callState","CALLING","push","onAnswer","onEnd","IN_PROGRESS","CONNECTING","onFullscreen","isMuted","onMuteToggle","onVideo","onUserAdd","ENDED","onClose","propTypes","oneOf","isRequired","bool","func"],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAbA;;;;IAeMA,Y;;;;;;;;;yBAoBJC,M,qBAAS;AAAA,iBACuB,KAAKC,KAD5B;AAAA,QACCC,UADD,UACCA,UADD;AAAA,QACaC,KADb,UACaA,KADb;;;AAGP,QAAMC,oBAAoB,EAA1B;AACA,QAAMC,eAAeF,QAAQC,iBAAR,GAA4B,EAAjD;AACA,YAAQ,KAAKH,KAAL,CAAWK,SAAnB;AACE,WAAK,8BAAWC,OAAhB;AACE,YAAI,CAACL,UAAL,EAAiB;AACfG,uBAAaG,IAAb,CAAkB,wDAAc,OAAOL,KAArB,EAA4B,SAAS,KAAKF,KAAL,CAAWQ,QAAhD,EAA0D,KAAI,QAA9D,GAAlB;AACD;;AAEDJ,qBAAaG,IAAb,CACE,qDAAW,OAAOL,KAAlB,EAAyB,SAAS,KAAKF,KAAL,CAAWS,KAA7C,EAAoD,KAAI,KAAxD,GADF;AAGA;AACF,WAAK,8BAAWC,WAAhB;AACA,WAAK,8BAAWC,UAAhB;AACE,YAAI,CAACT,KAAL,EAAY;AACVC,4BAAkBI,IAAlB,CACE,4DAAkB,SAAS,KAAKP,KAAL,CAAWY,YAAtC,EAAoD,KAAI,YAAxD,GADF;AAGD;;AAEDT,0BAAkBI,IAAlB,CACE,sDAAY,OAAO,KAAKP,KAAL,CAAWa,OAA9B,EAAuC,UAAU,KAAKb,KAAL,CAAWc,YAA5D,EAA0E,KAAI,MAA9E,GADF;;AAIA,YAAI,CAACZ,KAAL,EAAY;AACVC,4BAAkBI,IAAlB,CACE,uDAAa,SAAS,KAAKP,KAAL,CAAWe,OAAjC,EAA0C,KAAI,OAA9C,GADF,EAEE,yDAAe,SAAS,KAAKf,KAAL,CAAWgB,SAAnC,EAA8C,KAAI,KAAlD,GAFF;AAID;;AAEDZ,qBAAaG,IAAb,CACE,qDAAW,OAAOL,KAAlB,EAAyB,SAAS,KAAKF,KAAL,CAAWS,KAA7C,EAAoD,KAAI,KAAxD,GADF;AAGA;AACF,WAAK,8BAAWQ,KAAhB;AACEb,qBAAaG,IAAb,CAAkB,uDAAa,SAAS,KAAKP,KAAL,CAAWkB,OAAjC,EAA0C,KAAI,OAA9C,GAAlB;AACA;AAnCJ;;AAsCA,QAAIhB,KAAJ,EAAW;AACT,aACE;AAAA;AAAA,UAAK,WAAU,gBAAf;AACE;AAAA;AAAA,YAAK,WAAU,kCAAf;AACGC;AADH;AADF,OADF;AAOD;;AAED,WACE;AAAA;AAAA,QAAK,WAAU,gBAAf;AACE;AAAA;AAAA,UAAK,WAAU,kCAAf;AACGA;AADH,OADF;AAIE;AAAA;AAAA,UAAK,WAAU,yBAAf;AACGC;AADH;AAJF,KADF;AAUD,G;;;;;AAnFGN,Y,CACGqB,S,GAAY;AACjBd,aAAW,iBAAUe,KAAV,CAAgB,CACzB,8BAAWd,OADc,EAEzB,8BAAWI,WAFc,EAGzB,8BAAWC,UAHc,EAIzB,8BAAWM,KAJc,CAAhB,EAKRI,UANc;AAOjBnB,SAAO,iBAAUoB,IAPA;AAQjBrB,cAAY,iBAAUqB,IAAV,CAAeD,UARV;AASjBR,WAAS,iBAAUS,IAAV,CAAeD,UATP;AAUjBZ,SAAO,iBAAUc,IAAV,CAAeF,UAVL;AAWjBb,YAAU,iBAAUe,IAAV,CAAeF,UAXR;AAYjBP,gBAAc,iBAAUS,IAAV,CAAeF,UAZZ;AAajBT,gBAAc,iBAAUW,IAAV,CAAeF,UAbZ;AAcjBL,aAAW,iBAAUO,IAAV,CAAeF,UAdT;AAejBN,WAAS,iBAAUQ,IAAV,CAAeF,UAfP;AAgBjBH,WAAS,iBAAUK,IAAV,CAAeF;AAhBP,C;kBAqFNvB,Y","file":"CallControls.react.js","sourcesContent":["/*\n* Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n*/\n\nimport React, { Component, PropTypes } from 'react';\nimport { CallStates } from '../../constants/ActorAppConstants';\n\nimport AnswerButton from './AnswerButton.react';\nimport EndButton from './EndButton.react';\nimport MuteButton from './MuteButton.react';\nimport CloseButton from './CloseButton.react';\nimport FullScreenButton from './FullScreenButton.react';\nimport VideoButton from './VideoButton.react';\nimport AddUserButton from './AddUserButton.react';\n\nclass CallControls extends Component {\n  static propTypes = {\n    callState: PropTypes.oneOf([\n      CallStates.CALLING,\n      CallStates.IN_PROGRESS,\n      CallStates.CONNECTING,\n      CallStates.ENDED\n    ]).isRequired,\n    small: PropTypes.bool,\n    isOutgoing: PropTypes.bool.isRequired,\n    isMuted: PropTypes.bool.isRequired,\n    onEnd: PropTypes.func.isRequired,\n    onAnswer: PropTypes.func.isRequired,\n    onMuteToggle: PropTypes.func.isRequired,\n    onFullscreen: PropTypes.func.isRequired,\n    onUserAdd: PropTypes.func.isRequired,\n    onVideo: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { isOutgoing, small } = this.props;\n\n    const secondaryControls = [];\n    const mainControls = small ? secondaryControls : [];\n    switch (this.props.callState) {\n      case CallStates.CALLING:\n        if (!isOutgoing) {\n          mainControls.push(<AnswerButton small={small} onClick={this.props.onAnswer} key=\"answer\" />);\n        }\n\n        mainControls.push(\n          <EndButton small={small} onClick={this.props.onEnd} key=\"end\" />\n        );\n        break;\n      case CallStates.IN_PROGRESS:\n      case CallStates.CONNECTING:\n        if (!small) {\n          secondaryControls.push(\n            <FullScreenButton onClick={this.props.onFullscreen} key=\"fullscreen\" />\n          );\n        }\n\n        secondaryControls.push(\n          <MuteButton value={this.props.isMuted} onToggle={this.props.onMuteToggle} key=\"mute\" />\n        );\n\n        if (!small) {\n          secondaryControls.push(\n            <VideoButton onClick={this.props.onVideo} key=\"video\" />,\n            <AddUserButton onClick={this.props.onUserAdd} key=\"add\" />\n          );\n        }\n\n        mainControls.push(\n          <EndButton small={small} onClick={this.props.onEnd} key=\"end\" />\n        );\n        break;\n      case CallStates.ENDED:\n        mainControls.push(<CloseButton onClick={this.props.onClose} key=\"close\" />);\n        break;\n    }\n\n    if (small) {\n      return (\n        <div className=\"call__controls\">\n          <div className=\"call__controls__icons row top-xs\">\n            {secondaryControls}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"call__controls\">\n        <div className=\"call__controls__icons row top-xs\">\n          {secondaryControls}\n        </div>\n        <div className=\"call__controls__buttons\">\n          {mainControls}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CallControls;\n"]}