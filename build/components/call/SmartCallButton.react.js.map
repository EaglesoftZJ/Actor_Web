{"version":3,"sources":["../../../src/components/call/SmartCallButton.react.js"],"names":["SmartCallButton","props","handleButtonClick","bind","call","onCallStart","onCallEnd","isCalling","renderButtonIcon","fontSize","renderButtonText","state","time","render","buttonClassName","propTypes","object","isRequired","func"],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;;;;;;;+eANA;;;;IAQMA,e;;;AAQJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAHiB;AAIlB;;4BAEDD,iB,gCAAoB;AAAA,iBACuB,KAAKD,KAD5B;AAAA,QACVG,IADU,UACVA,IADU;AAAA,QACJC,WADI,UACJA,WADI;AAAA,QACSC,SADT,UACSA,SADT;;;AAGlB,QAAI,CAACF,KAAKG,SAAV,EAAqB;AACnBF;AACD,KAFD,MAEO;AACLC;AACD;AACF,G;;4BAEDE,gB,+BAAmB;AACjB,WACE;AAAA;AAAA,QAAG,WAAU,gBAAb,EAA8B,OAAO,EAAEC,UAAU,EAAZ,EAArC;AAAA;AAAA,KADF;AAGD,G;;4BAEDC,gB,+BAAmB;AAAA,QACTN,IADS,GACA,KAAKH,KADL,CACTG,IADS;;;AAGjB,QAAI,CAACA,KAAKG,SAAV,EAAqB;AACnB,aAAO,IAAP;AACD;;AAED,WACE;AACE,0BAAkBH,KAAKO,KADzB;AAEE,cAAQ,EAAEC,MAAMR,KAAKQ,IAAb;AAFV,MADF;AAMD,G;;4BAEDC,M,qBAAS;AAAA,QACCT,IADD,GACU,KAAKH,KADf,CACCG,IADD;;;AAGP,QAAMU,kBAAkB,0BAAW,wCAAX,EAAqD;AAC3E,qCAA+BV,KAAKG;AADuC,KAArD,CAAxB;;AAIA,WACE;AAAA;AAAA,QAAQ,WAAWO,eAAnB,EAAoC,SAAS,KAAKZ,iBAAlD;AACG,WAAKM,gBAAL,EADH;AAEG,WAAKE,gBAAL;AAFH,KADF;AAMD,G;;;;;AA1DGV,e,CACGe,S,GAAY;AACjBX,QAAM,iBAAUY,MAAV,CAAiBC,UADN;;AAGjBZ,eAAa,iBAAUa,IAAV,CAAeD,UAHX;AAIjBX,aAAW,iBAAUY,IAAV,CAAeD;AAJT,C;kBA4DNjB,e","file":"SmartCallButton.react.js","sourcesContent":["/*\n* Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n*/\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\n\nclass SmartCallButton extends Component {\n  static propTypes = {\n    call: PropTypes.object.isRequired,\n\n    onCallStart: PropTypes.func.isRequired,\n    onCallEnd: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleButtonClick() {\n    const { call, onCallStart, onCallEnd } = this.props;\n\n    if (!call.isCalling) {\n      onCallStart();\n    } else {\n      onCallEnd();\n    }\n  }\n\n  renderButtonIcon() {\n    return (\n      <i className=\"material-icons\" style={{ fontSize: 22 }}>call</i>\n    );\n  }\n\n  renderButtonText() {\n    const { call } = this.props;\n\n    if (!call.isCalling) {\n      return null;\n    }\n\n    return (\n      <FormattedMessage\n        id={`call.state.${call.state}`}\n        values={{ time: call.time }}\n      />\n    );\n  }\n\n  render() {\n    const { call } = this.props;\n\n    const buttonClassName = classnames('button button--icon call__smart-button', {\n      'call__smart-button--in-call': call.isCalling\n    })\n\n    return (\n      <button className={buttonClassName} onClick={this.handleButtonClick}>\n        {this.renderButtonIcon()}\n        {this.renderButtonText()}\n      </button>\n    );\n  }\n}\n\nexport default SmartCallButton;\n"]}