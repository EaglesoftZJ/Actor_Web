{"version":3,"sources":["../../../src/components/activity/GroupProfile.react.js"],"names":["GroupProfile","getStores","calculateState","prevState","nextProps","gid","group","id","peer","getGroup","isNotificationsEnabled","integrationToken","getToken","message","getMessage","replace","props","handleNotificationChange","bind","handleTokenSelect","handleAvatarClick","event","state","changeNotificationsEnabled","target","checked","select","open","bigAvatar","renderMainInfo","placeholder","name","__html","renderAbout","about","renderToken","myId","getMyId","adminId","from","members","firstOrDefault","peerInfo","render","isMember","iconElement","propTypes","object","isRequired","create","withProps","pure"],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAzBA;;;;IA0BMA,Y;;;eAKGC,S,wBAAY;AACjB,WAAO,2EAAP;AACD,G;;eAEMC,c,2BAAeC,S,EAAWC,S,EAAW;AAC1C,QAAMC,MAAMD,UAAUE,KAAV,CAAgBC,EAA5B;AACA,QAAMC,OAAOH,MAAM,qBAAWI,QAAX,CAAoBJ,GAApB,CAAN,GAAiC,IAA9C;AACA,WAAO;AACLG,gBADK;AAEL;AACAE,8BAAwBF,OAAO,6BAAmBE,sBAAnB,CAA0CF,IAA1C,CAAP,GAAyD,IAH5E;AAILG,wBAAkB,qBAAWC,QAAX,EAJb;AAKLC,eAAS,sBAAYC,UAAZ,GAAyBC,OAAzB,CAAiC,SAAjC,EAA4C,KAA5C,EAAmDA,OAAnD,CAA2D,QAA3D,EAAqE,IAArE,EAA2EA,OAA3E,CAAmF,SAAnF,EAA8F,IAA9F;AALJ,KAAP;AAOD,G;;AAED,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BC,IAA9B,OAAhC;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,OAAzB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,OAAzB;AALiB;AAMlB;;yBAEDD,wB,qCAAyBI,K,EAAO;AAAA,QACtBb,IADsB,GACb,KAAKc,KADQ,CACtBd,IADsB;;AAE9B,0CAA4Be,0BAA5B,CAAuDf,IAAvD,EAA6Da,MAAMG,MAAN,CAAaC,OAA1E;AACD,G;;yBAEDN,iB,8BAAkBE,K,EAAO;AACvBA,UAAMG,MAAN,CAAaE,MAAb;AACD,G;;yBAEDN,iB,gCAAoB;AAClB,yBAASO,IAAT,CAAc,KAAKX,KAAL,CAAWV,KAAX,CAAiBsB,SAA/B;AACD,G;;yBAEDC,c,6BAAiB;AAAA,QACPvB,KADO,GACG,KAAKU,KADR,CACPV,KADO;AAEf;AACA;;;AAGA,WACE;AAAA;AAAA;AACE;AACE,mBAAU,iBADZ;AAEE,cAAK,OAFP;AAGE,eAAOA,MAAMsB,SAHf;AAIE,qBAAatB,MAAMwB,WAJrB;AAKE,eAAOxB,MAAMyB,IALf;AAME,iBAAS,KAAKX;AANhB,QADF;AAUE;AACE,mBAAU,4BADZ;AAEE,iCAAyB,EAAEY,QAAQ,iCAAgB1B,MAAMyB,IAAtB,CAAV;AAF3B;AAVF,KADF;AAuBD,G;;yBAEDE,W,0BAAc;AAAA,QACKC,KADL,GACiB,KAAKlB,KADtB,CACJV,KADI,CACK4B,KADL;;;AAGZ,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,WACE;AACE,iBAAU,kCADZ;AAEE,+BAAyB,EAAEF,QAAQ,iCAAgBE,KAAhB,EAAuBnB,OAAvB,CAA+B,KAA/B,EAAsC,OAAtC,CAAV;AAF3B,MADF;AAMD,G;;yBAEDoB,W,0BAAc;AAAA,QACJ7B,KADI,GACM,KAAKU,KADX,CACJV,KADI;AAAA,QAEJK,gBAFI,GAEiB,KAAKW,KAFtB,CAEJX,gBAFI;;AAGZ,QAAMyB,OAAO,oBAAUC,OAAV,EAAb;;AAEA,QAAIC,UAAU,CAAC,CAAf;AACAA,cAAU,eAAKC,IAAL,CAAUjC,MAAMkC,OAAhB,EAAyBC,cAAzB,CAAwC,oBAAxC,EAA6D,EAACC,UAAU,EAAElC,MAAM,EAACD,IAAI,CAAC,CAAN,EAAR,EAAX,EAA7D,EAA4FmC,QAA5F,CAAqGlC,IAArG,CAA0GD,EAApH;;AAEA,QAAI+B,YAAYF,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,WACE;AAAA;AAAA,QAAI,WAAU,qDAAd;AACE;AAAA;AAAA,UAAM,MAAK,OAAX,EAAmB,eAAc,YAAjC,EAA8C,OAAO,6DAAkB,IAAG,kBAArB,GAArD;AAEE;AAAA;AAAA,YAAK,WAAU,kBAAf;AACE;AAAA;AAAA;AAAG,yEAAkB,IAAG,sBAArB;AAAH,WADF;AAEE;AAAA;AAAA,cAAG,MAAK,iDAAR,EAA0D,QAAO,QAAjE;AAA0E,yEAAkB,IAAG,sBAArB;AAA1E;AAFF,SAFF;AAOE;AACE,qBAAU,UADZ;AAEE,mBAAS,KAAKjB,iBAFhB;AAGE,wBAHF;AAIE,eAAI,GAJN;AAKE,iBAAOR,gBALT;AAPF;AADF,KADF;AAkBD,G;;yBAEDgC,M,qBAAS;AAAA,QACCrC,KADD,GACW,KAAKU,KADhB,CACCV,KADD;AAAA,iBAEqC,KAAKgB,KAF1C;AAAA,QAECZ,sBAFD,UAECA,sBAFD;AAAA,QAEyBG,OAFzB,UAEyBA,OAFzB;;AAGP,QAAM+B,WAAW,sBAAYA,QAAZ,EAAjB;;AAEA,QAAMC,cACJ,mDAAS,WAAU,kBAAnB,EAAsC,OAAM,SAA5C,GADF;;AAIA,QAAI,CAACD,QAAL,EAAe;AACb,aACE;AAAA;AAAA,UAAK,WAAU,8BAAf;AACE;AAAA;AAAA,YAAI,WAAU,eAAd;AACE;AAAA;AAAA,cAAI,WAAU,yCAAd;AACG,iBAAKf,cAAL,EADH;AAEG,iBAAKI,WAAL;AAFH;AADF;AADF,OADF;AAUD;;AAED,WACE;AAAA;AAAA,QAAK,WAAU,8BAAf;AACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAI,WAAU,eAAd;AACE;AAAA;AAAA,cAAI,WAAU,yCAAd;AACG,iBAAKJ,cAAL,EADH;AAEG,iBAAKI,WAAL;AAFH,WADF;AAME;AAAA;AAAA,cAAI,WAAU,uDAAd;AACE,2EAAqB,wBAAwBvB,sBAA7C,EAAqE,sBAAsB,KAAKO,wBAAhG;AADF,WANF;AAUE;AAAA;AAAA,cAAI,WAAU,iDAAd;AACE;AAAA;AAAA,gBAAM,aAAa4B,WAAnB,EAAgC,OAAOhC,OAAvC;AACE,6EAAqB,SAASP,MAAMC,EAApC,EAAwC,SAASD,MAAMkC,OAAvD;AADF;AADF;AAVF;AADF;AADF,KADF;AAwBD,G;;;;;AAtKGxC,Y,CACG8C,S,GAAY;AACjBxC,SAAO,iBAAUyC,MAAV,CAAiBC;AADP,C;kBAwKN,iBAAUC,MAAV,CAAiBjD,YAAjB,EAA+B,EAAEkD,WAAW,IAAb,EAAmBC,MAAM,KAAzB,EAA/B,C","file":"GroupProfile.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { lightbox } from '../../utils/ImageUtils';\r\nimport { Container } from 'flux/utils';\r\nimport Scrollbar from '../common/Scrollbar.react';\r\n\r\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\r\n\r\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\r\n\r\nimport DialogStore from '../../stores/DialogStore';\r\nimport NotificationsStore from '../../stores/NotificationsStore';\r\nimport GroupStore from '../../stores/GroupStore';\r\nimport UserStore from '../../stores/UserStore';\r\nimport OnlineStore from '../../stores/OnlineStore';\r\n\r\nimport SvgIcon from '../common/SvgIcon.react';\r\nimport AvatarItem from '../common/AvatarItem.react';\r\nimport GroupProfileMembers from '../activity/GroupProfileMembers.react';\r\nimport Fold from '../common/Fold.react';\r\nimport ToggleNotifications from '../common/ToggleNotifications.react';\r\nimport linq from 'Linq';\r\nclass GroupProfile extends Component {\r\n  static propTypes = {\r\n    group: PropTypes.object.isRequired\r\n  };\r\n\r\n  static getStores() {\r\n    return [NotificationsStore, GroupStore, OnlineStore];\r\n  }\r\n\r\n  static calculateState(prevState, nextProps) {\r\n    const gid = nextProps.group.id;\r\n    const peer = gid ? GroupStore.getGroup(gid) : null;\r\n    return {\r\n      peer,\r\n      // should not require to pass a peer\r\n      isNotificationsEnabled: peer ? NotificationsStore.isNotificationsEnabled(peer) : true,\r\n      integrationToken: GroupStore.getToken(),\r\n      message: OnlineStore.getMessage().replace('members', '位成员').replace('online', '在线').replace('offline', '离线')\r\n    };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNotificationChange = this.handleNotificationChange.bind(this);\r\n    this.handleTokenSelect = this.handleTokenSelect.bind(this);\r\n    this.handleAvatarClick = this.handleAvatarClick.bind(this);\r\n  }\r\n\r\n  handleNotificationChange(event) {\r\n    const { peer } = this.state;\r\n    NotificationsActionCreators.changeNotificationsEnabled(peer, event.target.checked);\r\n  }\r\n\r\n  handleTokenSelect(event) {\r\n    event.target.select();\r\n  }\r\n\r\n  handleAvatarClick() {\r\n    lightbox.open(this.props.group.bigAvatar);\r\n  }\r\n\r\n  renderMainInfo() {\r\n    const { group } = this.props;\r\n    // const admin = UserStore.getUser(group.adminId);\r\n    //const admin = UserStore.getUser(878585165);\r\n    \r\n\r\n    return (\r\n      <header>\r\n        <AvatarItem\r\n          className=\"profile__avatar\"\r\n          size=\"large\"\r\n          image={group.bigAvatar}\r\n          placeholder={group.placeholder}\r\n          title={group.name}\r\n          onClick={this.handleAvatarClick}\r\n        />\r\n\r\n        <h3\r\n          className=\"group_profile__meta__title\"\r\n          dangerouslySetInnerHTML={{ __html: escapeWithEmoji(group.name) }}\r\n        />\r\n\r\n        {/* <div className=\"group_profile__meta__created\">\r\n          <FormattedMessage id=\"createdBy\"/>\r\n          &nbsp;\r\n          <span dangerouslySetInnerHTML={{ __html: escapeWithEmoji(admin.name) }}/>\r\n        </div> */}\r\n      </header>\r\n    );\r\n  }\r\n\r\n  renderAbout() {\r\n    const { group: { about } } = this.props;\r\n\r\n    if (!about) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"group_profile__meta__description\"\r\n        dangerouslySetInnerHTML={{ __html: escapeWithEmoji(about).replace(/\\n/g, '<br/>') }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderToken() {\r\n    const { group } = this.props;\r\n    const { integrationToken } = this.state;\r\n    const myId = UserStore.getMyId();\r\n\r\n    let adminId = -1;\r\n    adminId = linq.from(group.members).firstOrDefault('$.isAdmin === true',{peerInfo: { peer: {id: -1}}}).peerInfo.peer.id;\r\n\r\n    if (adminId !== myId) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li className=\"profile__list__item group_profile__integration no-p\">\r\n        <Fold icon=\"power\" iconClassName=\"icon--pink\" title={<FormattedMessage id=\"integrationToken\"/>}>\r\n\r\n          <div className=\"info info--light\">\r\n            <p><FormattedMessage id=\"integrationTokenHint\"/></p>\r\n            <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\"><FormattedMessage id=\"integrationTokenHelp\"/></a>\r\n          </div>\r\n\r\n          <textarea\r\n            className=\"textarea\"\r\n            onClick={this.handleTokenSelect}\r\n            readOnly\r\n            row=\"3\"\r\n            value={integrationToken}/>\r\n        </Fold>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { group } = this.props;\r\n    const { isNotificationsEnabled, message } = this.state;\r\n    const isMember = DialogStore.isMember();\r\n\r\n    const iconElement = (\r\n      <SvgIcon className=\"icon icon--green\" glyph=\"members\" />\r\n    );\r\n\r\n    if (!isMember) {\r\n      return (\r\n        <div className=\"activity__body group_profile\">\r\n          <ul className=\"profile__list\">\r\n            <li className=\"profile__list__item group_profile__meta\">\r\n              {this.renderMainInfo()}\r\n              {this.renderAbout()}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"activity__body group_profile\">\r\n        <Scrollbar>\r\n          <ul className=\"profile__list\">\r\n            <li className=\"profile__list__item group_profile__meta\">\r\n              {this.renderMainInfo()}\r\n              {this.renderAbout()}\r\n            </li>\r\n\r\n            <li className=\"profile__list__item group_profile__notifications no-p\">\r\n              <ToggleNotifications isNotificationsEnabled={isNotificationsEnabled} onNotificationChange={this.handleNotificationChange}/>\r\n            </li>\r\n\r\n            <li className=\"profile__list__item group_profile__members no-p\">\r\n              <Fold iconElement={iconElement} title={message}>\r\n                <GroupProfileMembers groupId={group.id} members={group.members}/>\r\n              </Fold>\r\n            </li>\r\n\r\n            {/* {this.renderToken()} */}\r\n          </ul>\r\n        </Scrollbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container.create(GroupProfile, { withProps: true, pure: false });\r\n"]}