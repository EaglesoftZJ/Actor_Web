{"version":3,"sources":["../../../../src/components/modals/profile/PictureChanger.react.js"],"names":["PictureChanger","props","handleChangeAvatarClick","bind","handlePictureInputChange","event","imageInput","refs","click","fromModal","onChange","reader","FileReader","imageForm","file","files","onload","show","target","result","reset","readAsDataURL","renderPictureChanger","bigAvatar","placeholder","name","small","renderPictureRemover","onRemove","render","pictureChangerClassName","propTypes","string","isRequired","bool","oneOf","PROFILE","CREATE_GROUP","EDIT_GROUP","func"],"mappings":"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","file":"PictureChanger.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { ModalTypes } from '../../../constants/ActorAppConstants';\nimport classnames from 'classnames';\n\nimport CropActionCreators from '../../../actions/CropActionCreators';\n\nimport AvatarItem from '../../common/AvatarItem.react';\n\nclass PictureChanger extends Component {\n  static propTypes = {\n    bigAvatar: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n\n    small: PropTypes.bool,\n\n    fromModal: PropTypes.oneOf([\n      ModalTypes.PROFILE,\n      ModalTypes.CREATE_GROUP,\n      ModalTypes.EDIT_GROUP\n    ]).isRequired,\n\n    onRemove: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeAvatarClick = this.handleChangeAvatarClick.bind(this);\n    this.handlePictureInputChange = this.handlePictureInputChange.bind(this);\n  }\n\n  handleChangeAvatarClick(event) {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    imageInput.click(event);\n  }\n\n  handlePictureInputChange() {\n    const { fromModal, onChange } = this.props;\n    const reader = new FileReader();\n    const imageForm = findDOMNode(this.refs.imageForm);\n    const file = findDOMNode(this.refs.imageInput).files[0];\n\n    reader.onload = (event) => {\n      CropActionCreators.show(event.target.result, fromModal, onChange);\n      imageForm.reset();\n    }\n    reader.readAsDataURL(file);\n  }\n\n  renderPictureChanger() {\n    const { bigAvatar, placeholder, name, small } = this.props;\n\n    return (\n      <div className=\"picture-changer__changer\">\n        <AvatarItem\n          className=\"picture-changer__avatar\"\n          image={bigAvatar}\n          placeholder={placeholder}\n          size={small ? 'big' : 'huge'}\n          title={name}\n        />\n\n        <a onClick={this.handleChangeAvatarClick}>\n          <FormattedMessage id=\"modal.profile.avatarChange\"/>\n        </a>\n\n      </div>\n    );\n  }\n\n  renderPictureRemover() {\n    const { bigAvatar } = this.props;\n    if (!bigAvatar) return null;\n\n    return (\n      <div className=\"picture-changer__controls\">\n        <a onClick={this.props.onRemove}>\n          <FormattedMessage id=\"modal.profile.avatarRemove\"/>\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    const pictureChangerClassName = classnames('picture-changer', {\n      'picture-changer--small': this.props.small\n    })\n\n    return (\n      <div className={pictureChangerClassName}>\n        {this.renderPictureChanger()}\n        {this.renderPictureRemover()}\n\n        <form className=\"hide\" ref=\"imageForm\">\n          <input onChange={this.handlePictureInputChange} ref=\"imageInput\" type=\"file\"/>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default PictureChanger;\n"]}