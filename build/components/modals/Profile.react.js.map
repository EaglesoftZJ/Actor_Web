{"version":3,"sources":["../../../src/components/modals/Profile.react.js"],"names":["Profile","getStores","calculateState","prevState","state","getState","profile","name","nick","about","errors","props","context","handleClose","bind","handleSave","handleNameChange","handleNickChange","handleAboutChange","handleAvatarChange","hide","editMyName","editMyNick","editMyAbout","event","setState","target","value","validateNick","intl","length","messages","test","croppedImage","console","log","changeMyAvatar","show","title","type","key","Date","getTime","handleAvatarRemove","removeMyAvatar","renderControls","renderName","renderNick","renderPhones","phones","map","phone","index","number","renderEmails","emails","email","renderAbout","render","PROFILE","contextTypes","object","create"],"mappings":"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","file":"Profile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\nimport { FormattedMessage } from 'react-intl';\nimport { ModalTypes } from '../../constants/ActorAppConstants';\n\nimport ProfileStore from '../../stores/ProfileStore';\n\nimport ProfileActionCreators from '../../actions/ProfileActionCreators';\nimport MessageAlertActionCreators from '../../actions/MessageAlertActionCreators';\n\nimport ModalCloseButton from './ModalCloseButton.react';\nimport TextField from '../common/TextField.react';\nimport PictureChanger from './profile/PictureChanger.react';\n\nclass Profile extends Component {\n  static getStores() {\n    return [ProfileStore];\n  }\n\n  static calculateState(prevState) {\n    const state = ProfileStore.getState();\n    return {\n      profile: state.profile,\n      name: prevState ? prevState.name : state.profile.name,\n      nick: prevState ? prevState.nick : state.profile.nick,\n      about: prevState ? prevState.about : state.profile.about,\n      errors: prevState ? prevState.errors : {}\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleNickChange = this.handleNickChange.bind(this);\n    this.handleAboutChange = this.handleAboutChange.bind(this);\n    this.handleAvatarChange = this.handleAvatarChange.bind(this);\n  }\n\n  handleClose() {\n    ProfileActionCreators.hide();\n  }\n\n  handleSave() {\n    const { nick, name, about, profile, errors } = this.state;\n\n    if (!errors.nick) {\n      if (name !== profile.name) ProfileActionCreators.editMyName(name);\n      if (nick !== profile.nick) ProfileActionCreators.editMyNick(nick);\n      if (about !== profile.about) ProfileActionCreators.editMyAbout(about);\n      this.handleClose();\n    }\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleNickChange(event) {\n    const nick = event.target.value;\n\n    this.setState({\n      nick,\n      errors: {\n        nick: this.validateNick(nick)\n      }\n    });\n  }\n\n  validateNick(nick) {\n    const { intl } = this.context;\n\n    if (nick.length < 5 || nick.length > 32) {\n      return intl.messages['modal.profile.errors.nick.length'];\n    }\n\n    if (!/^[0-9a-zA-Z_]+$/.test(nick)) {\n      return intl.messages['modal.profile.errors.nick.chars'];\n    }\n\n    return null;\n  }\n\n  handleAboutChange(event) {\n    this.setState({ about: event.target.value });\n  }\n\n  handleAvatarChange(croppedImage) {\n    console.log(123, croppedImage);\n    ProfileActionCreators.changeMyAvatar(croppedImage);\n    MessageAlertActionCreators.show({title: '头像修改成功', type: 'success', key: new Date().getTime()});\n    // .then(\n    //   () => {\n    //     MessageAlertActionCreators.show({title: '头像修改成功', type: 'success', key: new Date().getTime()})\n    //   },\n    //   () => {\n    //     MessageAlertActionCreators.show({title: '头像修改失败', type: 'error', key: new Date().getTime()})\n    //   }\n    // )\n  }\n\n  handleAvatarRemove() {\n    ProfileActionCreators.removeMyAvatar();\n    MessageAlertActionCreators.show({title: '头像删除成功', type: 'success', key: new Date().getTime()});\n  }\n\n  renderControls() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"controls\">\n        <button className=\"button\" onClick={this.handleClose}>\n          <FormattedMessage id=\"button.cancel\"/>\n        </button>\n        <button\n          className=\"button button--rised\"\n          disabled={errors.nick}\n          onClick={this.handleSave}>\n          <FormattedMessage id=\"button.save\"/>\n        </button>\n      </div>\n    );\n  }\n\n  renderName() {\n    const { name } = this.state;\n\n    return (\n      <div className=\"name\">\n        <TextField\n          className=\"input__material--wide\"\n          floatingLabel={<FormattedMessage id=\"modal.profile.name\"/>}\n          onChange={this.handleNameChange}\n          type=\"text\"\n          value={name}\n          disabled=\"true\"/>\n      </div>\n    );\n  }\n\n  renderNick() {\n    const { nick, errors } = this.state;\n\n    return (\n      <div className=\"nick\">\n        <TextField\n          className=\"input__material--wide\"\n          floatingLabel={<FormattedMessage id=\"modal.profile.nick\"/>}\n          errorText={errors.nick}\n          onChange={this.handleNickChange}\n          type=\"text\"\n          value={nick}\n          disabled=\"true\"/>\n      </div>\n    );\n  }\n\n  renderPhones() {\n    const { phones } = this.state.profile;\n    if (phones.length === 0) return null;\n\n    return phones.map((phone, index) => {\n      return (\n        <div className=\"phone\" key={`p${index}`}>\n          <TextField\n            className=\"input__material--wide\"\n            floatingLabel={<FormattedMessage id=\"modal.profile.phone\"/>}\n            disabled\n            type=\"tel\"\n            value={phone.number}/>\n        </div>\n      );\n    });\n  }\n\n  renderEmails() {\n    const { emails } = this.state.profile;\n    if (emails.length === 0) return null;\n\n    return emails.map((email, index) => {\n      return (\n        <div className=\"email\" key={`e${index}`}>\n          <TextField\n            className=\"input__material--wide\"\n            floatingLabel={<FormattedMessage id=\"modal.profile.email\"/>}\n            disabled\n            type=\"email\"\n            value={email.email}/>\n        </div>\n      );\n    });\n  }\n\n  renderAbout() {\n    const { about } = this.state;\n\n    return (\n      <div className=\"about\">\n        <label htmlFor=\"about\"><FormattedMessage id=\"modal.profile.about\"/></label>\n        <textarea\n          className=\"textarea\"\n          id=\"about\"\n          onChange={this.handleAboutChange}\n          value={about}/>\n      </div>\n    );\n  }\n\n  render() {\n    const { profile } = this.state;\n\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay modal-overlay--white\"\n        className=\"modal modal--fullscreen\"\n        onRequestClose={this.handleClose}\n        shouldCloseOnOverlayClick={false}\n        isOpen>\n\n        <ModalCloseButton onClick={this.handleClose}/>\n\n        <div className=\"profile\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n              <FormattedMessage id=\"modal.profile.title\" tagName=\"h1\"/>\n            </header>\n\n            <div className=\"modal__body row\">\n              <div className=\"col-xs\">\n                {this.renderName()}\n                {this.renderNick()}\n                {this.renderPhones()}\n                {this.renderEmails()}\n                {/* {this.renderAbout()} */}\n              </div>\n\n              <PictureChanger {...profile}\n                fromModal={ModalTypes.PROFILE}\n                onRemove={this.handleAvatarRemove}\n                onChange={this.handleAvatarChange}/>\n            </div>\n\n            <footer className=\"modal__footer\">\n              {this.renderControls()}\n            </footer>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(Profile);\n"]}