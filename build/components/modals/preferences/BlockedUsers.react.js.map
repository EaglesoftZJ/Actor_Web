{"version":3,"sources":["../../../../src/components/modals/preferences/BlockedUsers.react.js"],"names":["BlockedUsers","getStores","calculateState","getState","props","context","handleQueryChange","bind","handleUnblock","componentWillMount","loadUsers","event","setQuery","target","value","uid","unblockUser","getUsers","state","users","query","filter","user","score","name","renderUsers","length","filtredUsers","map","id","placeholder","avatar","renderSearch","intl","messages","render","contextTypes","object","create"],"mappings":"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","file":"BlockedUsers.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport fuzzaldrin from 'fuzzaldrin';\nimport { FormattedMessage } from 'react-intl';\n\nimport BlockedUsersActionCreators from '../../../actions/BlockedUsersActionCreators';\n\nimport BlockedUsersStore from '../../../stores/BlockedUsersStore';\n\nimport ContactItem from '../../common/ContactItem.react';\n\nclass BlockedUsers extends Component {\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores() {\n    return [BlockedUsersStore];\n  }\n\n  static calculateState() {\n    return BlockedUsersStore.getState();\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n    this.handleUnblock = this.handleUnblock.bind(this);\n  }\n\n  componentWillMount() {\n    BlockedUsersActionCreators.loadUsers();\n  }\n\n  handleQueryChange(event) {\n    BlockedUsersActionCreators.setQuery(event.target.value);\n  }\n\n  handleUnblock(uid) {\n    BlockedUsersActionCreators.unblockUser(uid, true);\n  }\n\n  getUsers() {\n    const { users, query } = this.state;\n\n    if (!query || query === '') return users;\n\n    return users.filter((user) => {\n      const score = fuzzaldrin.score(user.name, query);\n      return score > 0;\n    });\n  }\n\n  renderUsers() {\n    const { users } = this.state;\n\n    if (!users.length) {\n      return (\n        <div className=\"contacts__list__item contacts__list__item--empty text-center\">\n          <FormattedMessage id=\"preferences.blocked.notExists\"/>\n        </div>\n      );\n    }\n\n    const filtredUsers = this.getUsers();\n\n    if (!filtredUsers.length) {\n      return (\n        <div className=\"contacts__list__item contacts__list__item--empty text-center\">\n          <FormattedMessage id=\"preferences.blocked.notFound\"/>\n        </div>\n      );\n    }\n\n    return filtredUsers.map((user) => {\n      return (\n        <ContactItem\n          uid={user.id}\n          name={user.name}\n          placeholder={user.placeholder}\n          avatar={user.avatar}\n          key={user.id}\n        >\n          <button className=\"button button--lightblue\" onClick={() => this.handleUnblock(user.id)}>\n            <FormattedMessage id=\"preferences.blocked.unblock\"/>\n          </button>\n        </ContactItem>\n      );\n    });\n  }\n\n  renderSearch() {\n    const { intl } = this.context;\n    const { query } = this.state;\n\n    return (\n      <div className=\"small-search\">\n        <i className=\"material-icons\">search</i>\n        <input\n          className=\"input\"\n          type=\"search\"\n          value={query}\n          placeholder={intl.messages['preferences.blocked.search']}\n          onChange={this.handleQueryChange}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"preferences__tabs__content blocked-users\">\n        <ul>\n          <li>\n            <i className=\"icon material-icons\">block</i>\n            <FormattedMessage id=\"preferences.blocked.title\" tagName=\"h4\"/>\n            {this.renderSearch()}\n            {this.renderUsers()}\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(BlockedUsers);\n"]}