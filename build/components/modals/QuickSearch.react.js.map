{"version":3,"sources":["../../../src/components/modals/QuickSearch.react.js"],"names":["RESULT_ITEM_HEIGHT","scrollIndex","QuickSearch","getStores","calculateState","list","getState","selectedIndex","props","context","setFocus","bind","handleClose","handleSearch","handleDialogSelect","handleKeyDown","handleScroll","componentDidMount","setListeners","componentWillUnmount","cleanListeners","listeners","listen","document","forEach","listener","remove","setImmediate","refs","query","focus","hide","event","setState","target","value","peer","peerStr","peerToString","push","state","results","getResults","visibleItems","index","keyCode","ENTER","stopPropagation","preventDefault","peerInfo","ARROW_UP","length","ARROW_DOWN","TAB","top","scrollTop","Console","log","filter","result","score","title","userName","renderResults","map","resultClassName","avatar","placeholder","renderHeader","cursor","renderSearchInput","intl","messages","render","contextTypes","object","isRequired","create","pure"],"mappings":"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","file":"QuickSearch.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\nimport EventListener from 'fbjs/lib/EventListener';\nimport fuzzaldrin from 'fuzzaldrin';\nimport Modal from 'react-modal';\nimport classnames from 'classnames';\nimport history from '../../utils/history';\nimport PeerUtils from '../../utils/PeerUtils';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport QuickSearchActionCreators from '../../actions/QuickSearchActionCreators';\n\nimport QuickSearchStore from '../../stores/QuickSearchStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\n\nconst RESULT_ITEM_HEIGHT = 44;\nlet scrollIndex = 0;\n\nclass QuickSearch extends Component {\n  static getStores() {\n    return [QuickSearchStore];\n  }\n\n  static calculateState() {\n    return {\n      list: QuickSearchStore.getState(),\n      selectedIndex: 0\n    }\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object.isRequired\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.setFocus = this.setFocus.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleDialogSelect = this.handleDialogSelect.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFocus();\n    this.setListeners();\n  }\n\n  componentWillUnmount() {\n    this.cleanListeners();\n  }\n\n  setListeners() {\n    this.cleanListeners();\n    this.listeners = [\n      EventListener.listen(document, 'keydown', this.handleKeyDown)\n    ];\n  }\n\n  cleanListeners() {\n    if (this.listeners) {\n      this.listeners.forEach((listener) => listener.remove());\n      this.listeners = null;\n    }\n  }\n\n  setFocus() {\n    setImmediate(() => findDOMNode(this.refs.query).focus());\n  }\n\n  handleClose() {\n    QuickSearchActionCreators.hide();\n  }\n\n  handleSearch(event) {\n    this.setState({ query: event.target.value });\n  }\n\n  handleDialogSelect(peer) {\n    const peerStr = PeerUtils.peerToString(peer);\n    history.push(`/im/${peerStr}`);\n    this.handleClose();\n  }\n\n  handleKeyDown(event) {\n    const { selectedIndex } = this.state;\n    const results = this.getResults();\n    const visibleItems = 8;\n    let index = selectedIndex;\n\n    switch (event.keyCode) {\n      case KeyCodes.ENTER:\n        event.stopPropagation();\n        event.preventDefault();\n        this.handleDialogSelect(results[selectedIndex].peerInfo.peer);\n        break;\n\n      case KeyCodes.ARROW_UP:\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (index > 0) {\n          index -= 1;\n        } else if (index === 0) {\n          index = results.length - 1;\n        }\n\n        if (scrollIndex > index) {\n          scrollIndex = index;\n        } else if (index === results.length - 1) {\n          scrollIndex = results.length - visibleItems;\n        }\n\n        this.handleScroll(scrollIndex * RESULT_ITEM_HEIGHT);\n        this.setState({ selectedIndex: index });\n        break;\n      case KeyCodes.ARROW_DOWN:\n      case KeyCodes.TAB:\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (index < results.length - 1) {\n          index += 1;\n        } else if (index === results.length - 1) {\n          index = 0;\n        }\n\n        if (index + 1 > scrollIndex + visibleItems) {\n          scrollIndex = index + 1 - visibleItems;\n        } else if (index === 0) {\n          scrollIndex = 0;\n        }\n\n        this.handleScroll(scrollIndex * RESULT_ITEM_HEIGHT);\n        this.setState({ selectedIndex: index });\n        break;\n\n      default:\n    }\n  }\n\n  handleScroll(top) {\n    findDOMNode(this.refs.results).scrollTop = top;\n\n    Console.log('scroll--------');\n  }\n\n  getResults() {\n    const { list, query } = this.state;\n    if (!query || query === '') return list;\n\n    return list.filter((result) => {\n      return fuzzaldrin.score(result.peerInfo.title, query) > 0 ||\n             fuzzaldrin.score(result.peerInfo.userName, query) > 0;\n    });\n  }\n\n  renderResults() {\n    const { selectedIndex, query } = this.state;\n    const results = this.getResults();\n\n    if (!results.length) {\n      return (\n        <li className=\"results__item results__item--suggestion row\">\n          <FormattedHTMLMessage id=\"modal.quickSearch.notFound\" values={{ query }}/>\n          <button className=\"button button--rised hide\">Create new dialog {query}</button>\n        </li>\n      )\n    }\n\n    return results.map((result, index) => {\n      const resultClassName = classnames('results__item row', {\n        'results__item--active': selectedIndex === index\n      });\n\n      return (\n        <li\n          className={resultClassName} key={`r${index}`}\n          onClick={() => this.handleDialogSelect(result.peerInfo.peer)}\n          onMouseOver={() => this.setState({ selectedIndex: index })}>\n          <AvatarItem\n            className=\"quick-search__avatar\"\n            size=\"small\"\n            image={result.peerInfo.avatar}\n            placeholder={result.peerInfo.placeholder}\n            title={result.peerInfo.title}\n          />\n          <div className=\"title col-xs\">\n            <div className=\"hint pull-right\"><FormattedMessage id=\"modal.quickSearch.openDialog\"/></div>\n            {result.peerInfo.title}\n          </div>\n        </li>\n      );\n    });\n  }\n\n  renderHeader() {\n    return (\n      <header className=\"header\">\n        <div className=\"pull-left\"><FormattedMessage id=\"modal.quickSearch.title\"/></div>\n        <div className=\"pull-right\" style={{cursor: 'Pointer'}}><strong onClick={() => this.handleClose()}>关闭</strong></div>\n      </header>\n    );\n  }\n\n  renderSearchInput() {\n    const { query } = this.state;\n    const { intl } = this.context;\n\n    return (\n      <div className=\"large-search\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder={intl.messages['modal.quickSearch.placeholder']}\n          onChange={this.handleSearch}\n          value={query}\n          ref=\"query\"/>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay\"\n        className=\"modal\"\n        onRequestClose={this.handleClose}\n        isOpen>\n\n        <div className=\"quick-search\">\n          <div className=\"modal__content\">\n\n            {this.renderHeader()}\n\n            {this.renderSearchInput()}\n\n            <ul className=\"results\" ref=\"results\">\n              {this.renderResults()}\n            </ul>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(QuickSearch, { pure: false });\n"]}