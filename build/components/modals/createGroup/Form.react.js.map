{"version":3,"sources":["../../../../src/components/modals/createGroup/Form.react.js"],"names":["CreateGroupForm","getStores","calculateState","res","getState","dw_data","from","where","orderBy","toArray","bm_data","yh_data","peer","getCurrentPeer","props","context","state","selectedDw","selectedDwmc","selectedBm","selectedBmmc","szk","error","nameError","shouldScroll","dwAll","onContactToggle","bind","handleNameChange","handleSubmit","handleSearchChange","componentDidMount","refs","name","focus","componentDidUpdate","handleUpdate","console","log","setTimeout","select_con","scrollTop","setState","getContacts","search","results","slice","filter","key","renderAll","contacts","length","handleName","renderContacts","map","contact","i","type","selectedUserIds","members","isSelected","isMember","set","Set","select","has","IGIMID","arr","item","icon","xm","zwmc","itemClassName","userIds","forEach","add","delete","event","preventDefault","target","value","trimmedName","trim","toJS","renderDwSelectSize","renderSelect","result","push","handleDelete","bmmc","dwmc","renderGroupNameInput","renderAddUsersButton","step","handleClose","CREATION_STARTED","renderUserSearchInput","intl","messages","renderSelectedUsersCount","numMembers","size","renderCreateGroupButton","handleSelectDw","obj","handleSelectBm","handleShowAll","render","onSelectDw","onSelectBm","onShowAll","scrollBox","department_con","className","top","contextTypes","object","PropTypes","string","array","func","fuc","create","pure"],"mappings":"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","file":"Form.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage } from 'react-intl';\nimport fuzzaldrin from 'fuzzaldrin';\nimport classnames from 'classnames';\nimport { CreateGroupSteps } from '../../../constants/ActorAppConstants';\n\nimport CreateGroupActionCreators from '../../../actions/CreateGroupActionCreators';\n\nimport DepartmentStore from '../../../stores/DepartmentStore';\nimport DialogStore from '../../../stores/DialogStore';\n\nimport DepartmentMenu from '../departmentMenu/DepartmentMenu.react';\nimport ContactItem from '../../common/ContactItem.react';\nimport TextField from '../../common/TextField.react';\nimport Tab from '../../common/Tab.react';\nimport $ from 'jquery';\nimport linq from 'Linq';\n\nclass CreateGroupForm extends Component {\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n  static PropTypes = {\n    type: PropTypes.string,\n    name: PropTypes.string,\n    search: PropTypes.string,\n    step: PropTypes.string,\n    members: PropTypes.array,\n    selectedUserIds: PropTypes.object,\n    onContactToggle: PropTypes.func,\n    handleNameChange: PropTypes.func,\n    handleSearchChange: PropTypes.fuc,\n    handleSubmit: PropTypes.fuc,\n    handleDelete: PropTypes.fuc\n  }\n\n  static getStores() {\n    return [DepartmentStore];\n  }\n\n  static calculateState() {\n    let res = DepartmentStore.getState();\n    return {\n      dw_data: linq.from(res.dw_data).where('$.id!==\"dw017\"').orderBy('$.wzh').toArray(),\n      bm_data: res.bm_data,\n      yh_data: res.yh_data,\n      peer: DialogStore.getCurrentPeer()\n    };\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    \n    this.state = {\n      selectedDw: '',\n      selectedDwmc: '',\n      selectedBm: '',\n      selectedBmmc: '',\n      szk: '',\n      error: '',\n      nameError: '',\n      shouldScroll: false,\n      dwAll: false,\n    }\n    \n    this.onContactToggle = this.onContactToggle.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.refs.name.focus();\n  }\n  componentDidUpdate() {\n    this.handleUpdate();\n  }\n\n  handleUpdate() {\n    const { shouldScroll } = this.state;\n    console.log('shouldScroll', shouldScroll);\n    if (shouldScroll) {\n      setTimeout(() => {\n        $(this.refs.select_con).scrollTop(10000);\n        this.setState({shouldScroll: false});\n      }, 100);\n    }\n  }\n\n  getContacts() {\n    const { yh_data, selectedBm, selectedDw, szk, dwAll } = this.state;\n    const { search } = this.props;\n    let results = null;\n    if (!dwAll) {\n      results = linq.from(yh_data).where('$.bmid.trim() == \"' + selectedBm + '\" && $.dwid.trim() == \"' + selectedDw + '\"&& $.szk == \"' + szk +'\"').orderBy('$.wzh').toArray();\n    } else {\n      results = linq.from(yh_data).where('$.dwid.trim() == \"' + selectedDw + '\"&& $.szk == \"' + szk +'\"').orderBy('$.wzh').toArray();\n    }\n\n    if (!search) {\n      return results;\n    }\n\n    if (search === \"*\") {\n      return yh_data.slice(0, 300);\n    }\n    \n    return fuzzaldrin.filter(yh_data, search, {\n      key: 'xm'\n    });\n  }\n\n  renderAll() {\n    const contacts = this.getContacts();\n    if (!contacts.length) {\n      return  (\n        <div className=\"contacts__list__item contacts__list__item--empty text-center\">\n          <FormattedMessage id=\"invite.notFound\"/>\n        </div>\n      );\n    }\n    return this.handleName('all', contacts);\n  }\n\n  renderContacts() {\n    const contacts = this.getContacts();\n    if (!contacts.length) {\n      return null;\n    }\n    return contacts.map((contact, i) => this.handleName('item', contact));\n  }\n\n  handleName(type, contact) {\n    const { selectedUserIds, members } = this.props;\n    // console.log(selectedUserIds, 'selectedUserIds');\n    var isSelected = false;\n    var isMember = false;\n    var contacts = null;\n    var set = null;\n    if (members) {\n      set = new Set(linq.from(members).select('$.peerInfo.peer.id.toString()').toArray());\n    }\n    if (type === 'item') {\n      isSelected = selectedUserIds.has(contact.IGIMID);\n      isMember = set && set.has(contact.IGIMID);\n      contacts = [contact];\n    } else {\n      var arr = contact.filter((item) => {\n        return !selectedUserIds.has(item.IGIMID) && !(set && set.has(item.IGIMID));\n      })\n      isSelected = arr.length > 0 ? false : true;\n      contacts = contact;\n    }\n    \n    const icon = isSelected || isMember ? 'check_box' : 'check_box_outline_blank';\n  \n    var name = type === 'item' ? contact.xm + (contact.zwmc ? ` (${contact.zwmc})` : '') : '全选';\n    var key = type === 'item' ? contact.IGIMID : 'all';\n    var itemClassName = classnames('group-name-item', icon, {'disabled': isMember});\n\n    return (\n      <div className={ itemClassName } key={ key } onClick={() => this.onContactToggle(type, contacts, set, !isSelected)}>\n        <a className=\"material-icons\">\n          {icon}\n        </a>\n        <span title={ name }>{ name }</span>\n      </div>\n    );\n  }\n\n  onContactToggle(type, contacts, set, isSelected) {\n    const { selectedUserIds, onContactToggle } = this.props;\n    var userIds = selectedUserIds;\n    contacts.forEach((item) => {\n      if (!set || !set.has(item.IGIMID)) {\n        userIds = isSelected ? userIds.add(item.IGIMID) : userIds.delete(item.IGIMID);\n      } \n    });\n    isSelected && this.setState({'shouldScroll': true});\n    onContactToggle && onContactToggle(userIds);\n  }\n\n  handleNameChange(event) {\n    event.preventDefault();\n    const { handleNameChange } = this.props;\n    handleNameChange && handleNameChange(event.target.value);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const { name, selectedUserIds, handleSubmit } = this.props;\n    const { peer } = this.state;\n    const trimmedName = name.trim();\n    console.log('123123123');\n\n    if (trimmedName.length > 0) {\n      handleSubmit && handleSubmit(selectedUserIds.toJS(), name, peer);\n    } else {\n      this.refs.name.focus();\n      this.setState({ error: ' ', nameError: 'error' });\n    }\n  }\n\n  renderDwSelectSize() {\n    const { selectedUserIds } = this.props;\n    const contacts = this.getContacts();\n    var results = contacts.filter((contact, i) => {\n      return selectedUserIds.has(contact.IGIMID);\n    });\n    return results.length;\n  }\n\n  renderSelect() {\n    const { yh_data } = this.state;\n    const { selectedUserIds } = this.props;\n    var results = [];\n    selectedUserIds.forEach((item) => {\n      var result = linq.from(yh_data).where(`$.IGIMID == \"${item}\"`).toArray();\n      result.length > 0 && results.push(result[0]);\n    });\n    return results.map((item) => {\n      return (\n        <div key={ item.IGIMID } className=\"group-name-select-tag\">\n          <a href=\"javascript:;\" target=\"_self\" className=\"material-icons delete\" onClick={this.handleDelete.bind(this, item)}>clear</a>\n          <div className=\"name\">{item.xm} <span style={{'fontSize': 12 + 'px', 'fontWeight': 'normal'}}>{ item.bmmc }</span></div>\n          <div className=\"info\" title={ item.dwmc + ' ' + item.bmmc }>{ item.dwmc }</div>\n        </div>\n      )\n    })\n  }\n  renderGroupNameInput() {\n    const { error, nameError } = this.state;\n    const { name, handleNameChange } = this.props;\n    return (\n      <TextField\n        className=\"input__material--wide\"\n        floatingLabel={<FormattedMessage id={nameError ? 'modal.createGroup.groupName_error' : 'modal.createGroup.groupName'}/>}\n        ref=\"name\"\n        errorText={error}\n        onChange={this.handleNameChange}\n        value={name}\n        disabled={!handleNameChange} />\n    );\n  }\n\n  handleSearchChange(event) {\n    const { handleSearchChange } = this.props;\n    handleSearchChange && handleSearchChange(event.target.value)\n  }\n\n  handleDelete(item) {\n    const { selectedUserIds, handleDelete } = this.props;\n    handleDelete && handleDelete(selectedUserIds.delete(item.IGIMID));\n  }\n\n\n  renderAddUsersButton() {\n    const { step, handleClose } = this.props;\n    return (\n      <div className=\"button-group\">\n        <button className=\"button button--plain--primary\" onClick={this.handleSubmit} disabled={step === CreateGroupSteps.CREATION_STARTED}>\n          <FormattedMessage id=\"button.ok\"/>\n        </button>\n        <button className=\"button button--plain--cancel\" onClick={ handleClose }>\n          <FormattedMessage id=\"button.cancel\"/>\n        </button>\n      </div>\n    );\n  }\n\n  renderUserSearchInput() {\n    const { search } = this.props;\n    const { intl } = this.context;\n\n    return (\n      <div className=\"small-search\">\n        <i className=\"material-icons\">search</i>\n        <input\n          className=\"input\"\n          onChange={this.handleSearchChange}\n          placeholder={intl.messages['invite.search']}\n          type=\"search\"\n          value={search}/>\n      </div>\n    );\n  }\n\n  renderSelectedUsersCount() {\n    const { selectedUserIds } = this.props;\n    return (\n      <div className=\"count\">\n        <FormattedMessage id=\"members\" values={{ numMembers: selectedUserIds.size }}/>\n      </div>\n    );\n  }\n\n  renderCreateGroupButton() {\n    const { step } = this.props;\n\n    if (step !== CreateGroupSteps.CREATION_STARTED) {\n      return (\n        <button className=\"button button--lightblue\" onClick={this.handleSubmit}>\n          <FormattedMessage id=\"button.createGroup\"/>\n        </button>\n      )\n    }\n\n    return (\n      <button className=\"button button--lightblue\" disabled>\n        <FormattedMessage id=\"button.createGroup\"/>\n      </button>\n    );\n  }\n  handleSelectDw(obj) {\n    this.setState({...obj, dwAll: false});\n  }\n\n  handleSelectBm(obj) {\n    this.setState({...obj, dwAll: false});\n  }\n\n  handleShowAll(obj) {\n    this.setState({...obj, dwAll: true});\n  }\n\n  render() {\n    const { dw_data, bm_data, selectedDwmc, selectedBmmc } = this.state;\n    const { step, search, selectedUserIds } = this.props;\n    var result = this.getContacts();\n    var props = {\n      dw_data,\n      bm_data,\n      onSelectDw: this.handleSelectDw.bind(this),\n      onSelectBm: this.handleSelectBm.bind(this),\n      onShowAll: this.handleShowAll.bind(this),\n      scrollBox: this.refs.department_con\n    }\n    var className = classnames('group-name-col group-name-department', {\n      'department-forbid': search\n    })\n    return (\n      <form className=\"group-name\">\n        <div className=\"modal__body\">\n          <div className=\"input-group\">\n            {this.renderGroupNameInput()}\n            {this.renderUserSearchInput()}\n          </div>\n          <div className=\"form-body\">\n          <div className={className} ref=\"department\">\n            <div className=\"info\">{ selectedDwmc ? selectedDwmc : '组织结构' } { selectedBmmc ? '> ' + selectedBmmc : ''}</div>\n            <div className=\"con\" ref=\"department_con\">\n              <DepartmentMenu {...props}></DepartmentMenu>\n              <div className=\"department-forbid-mc\" style={{top: this.refs.department_con ? $(this.refs.department_con).scrollTop() : 0}}></div>\n            </div>\n          </div>\n          <div className=\"group-name-col group-name-people\">\n            <div className=\"info\"> { this.renderDwSelectSize() } / {result.length}</div>\n            <div className=\"con\">\n              <div className=\"group-name-people-all\">\n                  { this.renderAll() }\n              </div>\n              <div className=\"group-name-people-list\">\n                { this.renderContacts() }\n              </div>\n            </div>\n          </div>\n\n          <div className=\"group-name-col group-name-select\" ref=\"select\">\n              <div className=\"info\">共选择{selectedUserIds.size}人</div>\n              <div className=\"con\" ref=\"select_con\">\n                { this.renderSelect() }\n              </div>\n          </div>\n        </div>\n        </div>\n\n        <footer className=\"modal__footer text-right\">\n          {this.renderAddUsersButton()}\n        </footer>\n      </form>\n    );\n  }\n}\n\nexport default Container.create(CreateGroupForm, { pure: false });\n"]}