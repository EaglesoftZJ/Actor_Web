{"version":3,"sources":["../../src/actions/DialogActionCreators.js"],"names":["DialogActionCreators","setDialogs","dialogs","DIALOGS_CHANGED","selectDialogPeerUser","uid","getUid","console","warn","push","peerToString","getUserPeer","selectDialogPeer","peer","currentPeer","getCurrentPeer","saveDraft","UNBIND_DIALOG_PEER","onConversationClosed","removeBindings","BIND_DIALOG_PEER","onConversationOpen","loadDraft","bindings","bindMessages","setMessages","bindTyping","setTyping","type","USER","bindUser","id","setDialogInfo","bindUserOnline","setUserOnline","GROUP","bindGroup","bindGroupOnline","setGroupOnline","getIntegrationToken","setBindings","onDialogsEnd","onChatEnd","leaveGroup","gid","request","GROUP_LEAVE","success","GROUP_LEAVE_SUCCESS","failure","GROUP_LEAVE_ERROR","deleteGroup","GROUP_DELETE","GROUP_DELETE_SUCCESS","GROUP_DELETE_ERROR","deleteChat","CHAT_DELETE","CHAT_DELETE_SUCCESS","CHAT_DELETE_ERROR","toLeaveGroup","then","bind","toDeleteChat","clearChat","GROUP_CLEAR","GROUP_CLEAR_SUCCESS","GROUP_CLEAR_ERROR","hideChat","GROUP_HIDE","GROUP_HIDE_SUCCESS","GROUP_HIDE_ERROR","blockUser","debug","loadMoreMessages","isAllRendered","MESSAGES_LOAD_MORE"],"mappings":"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","file":"DialogActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport history from '../utils/history';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport ActionCreators from './ActionCreators';\nimport MessageActionCreators from './MessageActionCreators';\nimport TypingActionCreators from './TypingActionCreators';\nimport DialogInfoActionCreators from './DialogInfoActionCreators';\nimport OnlineActionCreators from './OnlineActionCreators';\nimport GroupProfileActionCreators from './GroupProfileActionCreators';\nimport DraftActionCreators from './DraftActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport MessageStore from '../stores/MessageStore';\n\nclass DialogActionCreators extends ActionCreators {\n  setDialogs(dialogs) {\n    dispatch(ActionTypes.DIALOGS_CHANGED, { dialogs });\n  }\n\n  selectDialogPeerUser(uid) {\n    if (uid === ActorClient.getUid()) {\n      console.warn('You can\\'t chat with yourself');\n    } else {\n      history.push(`/im/${PeerUtils.peerToString(ActorClient.getUserPeer(uid))}`);\n    }\n  }\n\n  selectDialogPeer(peer) {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    if (currentPeer) {\n      DraftActionCreators.saveDraft(currentPeer);\n      dispatch(ActionTypes.UNBIND_DIALOG_PEER, { peer: currentPeer });\n      ActorClient.onConversationClosed(currentPeer);\n\n      this.removeBindings('peer');\n    }\n\n    if (!peer) {\n      return;\n    }\n\n    dispatch(ActionTypes.BIND_DIALOG_PEER, { peer });\n    ActorClient.onConversationOpen(peer);\n    DraftActionCreators.loadDraft(peer);\n\n    const bindings = [\n      ActorClient.bindMessages(peer, MessageActionCreators.setMessages),\n      ActorClient.bindTyping(peer, TypingActionCreators.setTyping)\n    ];\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        bindings.push(\n          ActorClient.bindUser(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindUserOnline(peer.id, OnlineActionCreators.setUserOnline)\n          // ActorClient.bindUserOnline(221653468, function({ ...args }) {\n          //   console.log(args);\n          // })\n        );\n        break;\n      case PeerTypes.GROUP:\n        bindings.push(\n          ActorClient.bindGroup(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindGroupOnline(peer.id, OnlineActionCreators.setGroupOnline)\n        );\n        GroupProfileActionCreators.getIntegrationToken(peer.id);\n        break;\n    }\n    this.setBindings('peer', bindings);\n  }\n\n  onDialogsEnd() {\n    ActorClient.onDialogsEnd();\n  }\n\n  onChatEnd(peer) {\n    ActorClient.onChatEnd(peer);\n  }\n\n  leaveGroup(gid) {\n    return dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n  }\n\n  deleteGroup(gid) {\n    return dispatchAsync(ActorClient.deleteGroup(gid), {\n      request: ActionTypes.GROUP_DELETE,\n      success: ActionTypes.GROUP_DELETE_SUCCESS,\n      failure: ActionTypes.GROUP_DELETE_ERROR\n    }, { gid });\n  }\n\n  deleteChat(peer) {\n    return dispatchAsync(ActorClient.deleteChat(peer), {\n      request: ActionTypes.CHAT_DELETE,\n      success: ActionTypes.CHAT_DELETE_SUCCESS,\n      failure: ActionTypes.CHAT_DELETE_ERROR\n    }, { peer });\n  }\n  toLeaveGroup(peer) {\n    const gid = peer.id;\n    this.leaveGroup(gid).then(\n      this.deleteChat.bind(this, peer)\n    );\n  }\n  toDeleteChat(peer) {\n    const gid = peer.id;\n    switch (peer.type) {\n      case PeerTypes.USER:\n        this.deleteChat(peer);\n        break;\n      case PeerTypes.GROUP:\n        this.deleteGroup(gid);\n        break;\n      default:\n    }\n  }\n\n  clearChat(peer) {\n    dispatchAsync(ActorClient.clearChat(peer), {\n      request: ActionTypes.GROUP_CLEAR,\n      success: ActionTypes.GROUP_CLEAR_SUCCESS,\n      failure: ActionTypes.GROUP_CLEAR_ERROR\n    }, { peer });\n  }\n\n  hideChat(peer) {\n    dispatchAsync(ActorClient.hideChat(peer), {\n      request: ActionTypes.GROUP_HIDE,\n      success: ActionTypes.GROUP_HIDE_SUCCESS,\n      failure: ActionTypes.GROUP_HIDE_ERROR\n    }, { peer });\n  }\n\n  blockUser(id) {\n    console.debug('Block user %s', id);\n  }\n\n  loadMoreMessages(peer) {\n    if (MessageStore.isAllRendered()) {\n      this.onChatEnd(peer);\n    } else {\n      dispatch(ActionTypes.MESSAGES_LOAD_MORE);\n    }\n  }\n}\n\nexport default new DialogActionCreators();\n"]}