{"version":3,"sources":["../../src/actions/DialogActionCreators.js"],"names":["DialogActionCreators","deleteDialog","id","keys","dialogs","getDialogs","arr","i","length","indexOf","key","from","shorts","except","peer","toArray","setDialogs","DIALOGS_CHANGED","selectDialogPeerUser","uid","getUid","console","warn","push","peerToString","getUserPeer","selectStorePeerUser","getStorePeer","selectDialogPeer","currentPeer","getCurrentPeer","saveDraft","UNBIND_DIALOG_PEER","onConversationClosed","removeBindings","BIND_DIALOG_PEER","onConversationOpen","loadDraft","bindings","bindMessages","setMessages","bindTyping","setTyping","type","USER","bindUser","setDialogInfo","bindUserOnline","setUserOnline","GROUP","bindGroup","bindGroupOnline","setGroupOnline","getIntegrationToken","setBindings","onDialogsEnd","onChatEnd","leaveGroup","gid","request","GROUP_LEAVE","success","GROUP_LEAVE_SUCCESS","failure","GROUP_LEAVE_ERROR","deleteGroup","GROUP_DELETE","GROUP_DELETE_SUCCESS","GROUP_DELETE_ERROR","deleteChat","CHAT_DELETE","CHAT_DELETE_SUCCESS","CHAT_DELETE_ERROR","toLeaveGroup","then","bind","toDeleteChat","clearChat","GROUP_CLEAR","GROUP_CLEAR_SUCCESS","GROUP_CLEAR_ERROR","hideChat","GROUP_HIDE","GROUP_HIDE_SUCCESS","GROUP_HIDE_ERROR","blockUser","debug","loadMoreMessages","isAllRendered","MESSAGES_LOAD_MORE"],"mappings":"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","file":"DialogActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport history from '../utils/history';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport ActionCreators from './ActionCreators';\nimport MessageActionCreators from './MessageActionCreators';\nimport TypingActionCreators from './TypingActionCreators';\nimport DialogInfoActionCreators from './DialogInfoActionCreators';\nimport OnlineActionCreators from './OnlineActionCreators';\nimport GroupProfileActionCreators from './GroupProfileActionCreators';\nimport DraftActionCreators from './DraftActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport MessageStore from '../stores/MessageStore';\nimport linq from 'linq';\n\nclass DialogActionCreators extends ActionCreators {\n  deleteDialog(id, keys) {\n    // 删除根据id删除dialog\n    var dialogs = DialogStore.getDialogs();\n    var arr = null;\n    for (var i = 0; i < dialogs.length; i++) {\n      if (!keys || keys && keys.indexOf(dialogs[i].key) !== -1) {\n        arr = linq.from(dialogs[i].shorts).except([{peer: {peer: {id: id}}}], '$.peer.peer.id').toArray();\n        dialogs[i].shorts = arr;\n      }\n    }\n    this.setDialogs(dialogs);\n  }\n  \n  setDialogs(dialogs) {\n    dispatch(ActionTypes.DIALOGS_CHANGED, { dialogs });\n  }\n\n  selectDialogPeerUser(uid) {\n    if (uid === ActorClient.getUid()) {\n      console.warn('You can\\'t chat with yourself');\n    } else {\n      history.push(`/im/${PeerUtils.peerToString(ActorClient.getUserPeer(uid))}`);\n    }\n  }\n\n  selectStorePeerUser() {\n    \n    history.push(`/im/${PeerUtils.peerToString(DialogStore.getStorePeer())}`);\n  \n  }\n\n  \n\n  selectDialogPeer(peer) {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    if (currentPeer) {\n      DraftActionCreators.saveDraft(currentPeer);\n      dispatch(ActionTypes.UNBIND_DIALOG_PEER, { peer: currentPeer });\n      ActorClient.onConversationClosed(currentPeer);\n\n      this.removeBindings('peer');\n    }\n\n    if (!peer) {\n      return;\n    }\n\n    dispatch(ActionTypes.BIND_DIALOG_PEER, { peer });\n    ActorClient.onConversationOpen(peer);\n    DraftActionCreators.loadDraft(peer);\n\n    const bindings = [\n      ActorClient.bindMessages(peer, MessageActionCreators.setMessages),\n      ActorClient.bindTyping(peer, TypingActionCreators.setTyping)\n    ];\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        bindings.push(\n          ActorClient.bindUser(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindUserOnline(peer.id, OnlineActionCreators.setUserOnline)\n          // ActorClient.bindUserOnline(221653468, function({ ...args }) {\n          //   console.log(args);\n          // })\n        );\n        break;\n      case PeerTypes.GROUP:\n        bindings.push(\n          ActorClient.bindGroup(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindGroupOnline(peer.id, OnlineActionCreators.setGroupOnline)\n        );\n        GroupProfileActionCreators.getIntegrationToken(peer.id);\n        break;\n    }\n    this.setBindings('peer', bindings);\n  }\n\n  onDialogsEnd() {\n    ActorClient.onDialogsEnd();\n  }\n\n  onChatEnd(peer) {\n    ActorClient.onChatEnd(peer);\n  }\n\n  leaveGroup(gid) {\n    return dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n  }\n\n  deleteGroup(gid) {\n    return dispatchAsync(ActorClient.deleteGroup(gid), {\n      request: ActionTypes.GROUP_DELETE,\n      success: ActionTypes.GROUP_DELETE_SUCCESS,\n      failure: ActionTypes.GROUP_DELETE_ERROR\n    }, { gid });\n  }\n\n  deleteChat(peer) {\n    return dispatchAsync(ActorClient.deleteChat(peer), {\n      request: ActionTypes.CHAT_DELETE,\n      success: ActionTypes.CHAT_DELETE_SUCCESS,\n      failure: ActionTypes.CHAT_DELETE_ERROR\n    }, { peer });\n  }\n  toLeaveGroup(peer) {\n    const gid = peer.id;\n    this.leaveGroup(gid).then(\n      this.deleteChat.bind(this, peer)\n    );\n  }\n  toDeleteChat(peer) {\n    const gid = peer.id;\n    switch (peer.type) {\n      case PeerTypes.USER:\n        this.deleteChat(peer);\n        break;\n      case PeerTypes.GROUP:\n        this.deleteGroup(gid);\n        break;\n      default:\n    }\n  }\n\n  clearChat(peer) {\n    dispatchAsync(ActorClient.clearChat(peer), {\n      request: ActionTypes.GROUP_CLEAR,\n      success: ActionTypes.GROUP_CLEAR_SUCCESS,\n      failure: ActionTypes.GROUP_CLEAR_ERROR\n    }, { peer });\n  }\n\n  hideChat(peer) {\n    dispatchAsync(ActorClient.hideChat(peer), {\n      request: ActionTypes.GROUP_HIDE,\n      success: ActionTypes.GROUP_HIDE_SUCCESS,\n      failure: ActionTypes.GROUP_HIDE_ERROR\n    }, { peer });\n  }\n\n  blockUser(id) {\n    console.debug('Block user %s', id);\n  }\n\n  loadMoreMessages(peer) {\n    if (MessageStore.isAllRendered()) {\n      this.onChatEnd(peer);\n    } else {\n      dispatch(ActionTypes.MESSAGES_LOAD_MORE);\n    }\n  }\n}\n\nexport default new DialogActionCreators();\n"]}