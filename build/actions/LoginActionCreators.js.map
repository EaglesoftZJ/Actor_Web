{"version":3,"sources":["../../src/actions/LoginActionCreators.js"],"names":["LoginActionCreators","start","AUTH_START","changeLogin","login","AUTH_CHANGE_LOGIN","changeCode","code","AUTH_CHANGE_CODE","changeName","name","AUTH_CHANGE_NAME","startSignup","AUTH_SIGNUP_START","restartAuth","AUTH_RESTART","requestCode","phone","promise","test","requestCodeEmail","requestSms","request","AUTH_CODE_REQUEST","success","AUTH_CODE_REQUEST_SUCCESS","failure","AUTH_CODE_REQUEST_FAILURE","requestNickName","nickname","AUTH_USER_REQUEST","AUTH_USER_REQUEST_SUCCESS","AUTH_USER_REQUEST_FAILURE","sendCode","AUTH_CODE_SEND","AUTH_CODE_SEND_SUCCESS","AUTH_CODE_SEND_FAILURE","then","state","setLoggedIn","redirect","console","error","sendPassword","password","AUTH_PASSWORD_SEND","AUTH_PASSWORD_SEND_SUCCESS","AUTH_PASSWORD_SEND_FAILURE","sendSignup","signUpPromise","signUp","AUTH_SIGNUP","AUTH_SIGNUP_SUCCESS","AUTH_SIGNUP_FAILURE","opts","delegate","get","actions","location","nextPathname","replace","setBindings","bindUser","getUid","setProfile","bindGroupDialogs","setDialogs","bindContacts","setContacts","bindSearch","setQuickSearchList","bindTempGlobalCounter","setFavicon","bindEventBus","broadcastEvent","bindStickers","setStickers","AUTH_SET_LOGGED_IN","postOAWebservice","url","data","setRes","res","setLoggedOut","removeBindings","AUTH_SET_LOGGED_OUT"],"mappings":"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","file":"LoginActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\nimport history from '../utils/history';\nimport DelegateContainer from '../utils/DelegateContainer';\nimport LocationContainer from '../utils/LocationContainer';\n\nimport ActionCreators from './ActionCreators';\nimport JoinGroupActions from './JoinGroupActions';\nimport ProfileActionCreators from './ProfileActionCreators';\nimport DialogActionCreators from './DialogActionCreators';\nimport ContactActionCreators from './ContactActionCreators';\nimport QuickSearchActionCreators from './QuickSearchActionCreators';\nimport FaviconActionCreators from './FaviconActionCreators';\nimport EventBusActionCreators from './EventBusActionCreators';\nimport StickersActionCreators from './StickersActionCreators';\nimport DepartmentActionCreators from './DepartmentActionCreators';\n\nclass LoginActionCreators extends ActionCreators {\n  start() {\n    dispatch(ActionTypes.AUTH_START);\n  }\n\n  changeLogin(login) {\n    dispatch(ActionTypes.AUTH_CHANGE_LOGIN, { login });\n  }\n\n  changeCode(code) {\n    dispatch(ActionTypes.AUTH_CHANGE_CODE, { code });\n  }\n\n  changeName(name) {\n    dispatch(ActionTypes.AUTH_CHANGE_NAME, { name });\n  }\n\n  startSignup() {\n    dispatch(ActionTypes.AUTH_SIGNUP_START);\n  }\n\n  restartAuth() {\n    dispatch(ActionTypes.AUTH_RESTART);\n  }\n\n  requestCode(phone) {\n    let promise;\n    if (/@/.test(phone)) {\n      promise = ActorClient.requestCodeEmail(phone);\n    } else {\n      promise = ActorClient.requestSms(phone);\n    }\n\n    dispatchAsync(promise, {\n      request: ActionTypes.AUTH_CODE_REQUEST,\n      success: ActionTypes.AUTH_CODE_REQUEST_SUCCESS,\n      failure: ActionTypes.AUTH_CODE_REQUEST_FAILURE\n    }, { phone });\n  }\n\n  requestSms(phone) {\n    dispatchAsync(ActorClient.requestSms(phone), {\n      request: ActionTypes.AUTH_CODE_REQUEST,\n      success: ActionTypes.AUTH_CODE_REQUEST_SUCCESS,\n      failure: ActionTypes.AUTH_CODE_REQUEST_FAILURE\n    }, { phone });\n  }\n\n  requestNickName(nickname) {\n    dispatchAsync(ActorClient.requestNickName(nickname), {\n      request: ActionTypes.AUTH_USER_REQUEST,\n      success: ActionTypes.AUTH_USER_REQUEST_SUCCESS,\n      failure: ActionTypes.AUTH_USER_REQUEST_FAILURE\n    }, { nickname });\n  }\n\n  sendCode(code) {\n    dispatchAsync(ActorClient.sendCode(code), {\n      request: ActionTypes.AUTH_CODE_SEND,\n      success: ActionTypes.AUTH_CODE_SEND_SUCCESS,\n      failure: ActionTypes.AUTH_CODE_SEND_FAILURE\n    }, {\n      code\n    }).then((state) => {\n      switch (state) {\n        case 'signup':\n          this.startSignup();\n          break;\n        case 'logged_in':\n          this.setLoggedIn({ redirect: true });\n          break;\n        default:\n          console.error('Unsupported state', state);\n      }\n    });\n  }\n\n  sendPassword(password) {\n    dispatchAsync(ActorClient.sendPassword(password), {\n      request: ActionTypes.AUTH_PASSWORD_SEND,\n      success: ActionTypes.AUTH_PASSWORD_SEND_SUCCESS,\n      failure: ActionTypes.AUTH_PASSWORD_SEND_FAILURE\n    }, {\n      password\n    }).then((state) => {\n      switch (state) {\n        case 'signup':\n          this.startSignup();\n          break;\n        case 'logged_in':\n          this.setLoggedIn({ redirect: true });\n          break;\n        default:\n          console.error('Unsupported state', state);\n      }\n    });\n  }\n\n  sendSignup(name) {\n    const signUpPromise = () => dispatchAsync(ActorClient.signUp(name), {\n      request: ActionTypes.AUTH_SIGNUP,\n      success: ActionTypes.AUTH_SIGNUP_SUCCESS,\n      failure: ActionTypes.AUTH_SIGNUP_FAILURE\n    }, { name });\n\n    const setLoggedIn = () => this.setLoggedIn({ redirect: true });\n\n    signUpPromise()\n      .then(setLoggedIn)\n  }\n\n\n\n  setLoggedIn(opts = {}) {\n    const delegate = DelegateContainer.get();\n\n    if (delegate.actions.setLoggedIn) {\n      return delegate.actions.setLoggedIn(opts);\n    }\n\n    if (opts.redirect) {\n      const location = LocationContainer.get();\n      const nextPathname = location.state ? location.state.nextPathname : '/';\n\n      history.replace(nextPathname);\n    }\n\n    this.setBindings('main', [\n      ActorClient.bindUser(ActorClient.getUid(), ProfileActionCreators.setProfile),\n      ActorClient.bindGroupDialogs(DialogActionCreators.setDialogs),\n      ActorClient.bindContacts(ContactActionCreators.setContacts),\n      ActorClient.bindSearch(QuickSearchActionCreators.setQuickSearchList),\n      ActorClient.bindTempGlobalCounter(FaviconActionCreators.setFavicon),\n      ActorClient.bindEventBus(EventBusActionCreators.broadcastEvent),\n      ActorClient.bindStickers(StickersActionCreators.setStickers)\n    ]);\n\n    dispatch(ActionTypes.AUTH_SET_LOGGED_IN);\n\n    ActorClient.postOAWebservice({\n      url: 'http://g.portzhoushan.com/MoaService/MoaService.asmx/GetAllUserFullData',\n      data: 'k=eagleSoftWebService',\n      success: res => {\n        DepartmentActionCreators.setRes({res});\n      \n      }\n    });\n\n    // JoinGroupActions.joinAfterLogin();\n  }\n\n  setLoggedOut() {\n    const delegate = DelegateContainer.get();\n\n    if (delegate.actions.setLoggedOut) {\n      return delegate.actions.setLoggedOut();\n    }\n\n    this.removeBindings('main');\n\n    dispatch(ActionTypes.AUTH_SET_LOGGED_OUT);\n  }\n}\n\nexport default new LoginActionCreators();\n"]}