{"version":3,"sources":["../../src/actions/PingyinSearchActionCreators.js"],"names":["interval","getGroup","uid","callback","console","log","spapdata","method","ajax","url","type","data","beforeSend","request","setRequestHeader","success","res","nodeName","JSON","parse","find","html","show","DEPARTMENT_SHOW","toggleAutoFocus","hide","DEPARTMENT_HIDE","setPingyinSearchList","list","clearInterval","setInterval","getProfile","id","getSearch","groups","obj","from","where","toArray","item","peerInfo","title","peer","push","letterStore","make","pingYing","pingyin","letter","substring","toLowerCase","indexOf","key","test","length","i","group","avatar","placeholder","name","sort","a","b","PINGYIN_SEARCH_CHANGED"],"mappings":"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","file":"PingyinSearchActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\nimport ProfileStore from '../stores/ProfileStore';\nimport ActorClient from '../utils/ActorClient';\nimport makepy from 'makepy';\nimport linq from 'Linq';\nimport $ from 'jquery';\n\n\nvar interval = null;\n\nfunction getGroup(uid, callback) {\n  console.log('getRroup uid', uid);\n  var spapdata = `<v:Envelope xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:d=\"http://www.w3.org/2001/XMLSchema\" xmlns:c=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:v=\"http://schemas.xmlsoap.org/soap/envelope/\">\n                    <v:Header />\n                    <v:Body>\n                        <n0:queryGroup id=\"o0\" c:root=\"1\" xmlns:n0=\"http://eaglesoft\">\n                            <id i:type=\"d:string\">${ uid }</id>\n                        </n0:queryGroup>\n                    </v:Body>\n                </v:Envelope>`;\n  var method = 'queryGroup';  \n  $.ajax({\n      url: 'http://61.175.100.14:8012/ActorServices-Maven/services/ActorService',\n      type: 'post',\n      data: spapdata,\n      beforeSend(request) {\n          console.log('beforeSend', request);\n          request.setRequestHeader('Content-Type', 'text/xml;charset=UTF-8');\n          request.setRequestHeader('SOAPActrin', 'http://eaglesoft/' + method);\n      },\n      success: (res) => {\n        if (res && res.nodeName) {\n          callback(JSON.parse($(res).find('return').html()))\n        }\n      }\n  });\n}\n\nexport default {\n  show() {\n    dispatch(ActionTypes.DEPARTMENT_SHOW);\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.DEPARTMENT_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n  \n  setPingyinSearchList(list) {\n    clearInterval(interval);\n    interval = setInterval(() => {\n      if (ProfileStore.getProfile()) {\n        getGroup(ProfileStore.getProfile().id, getSearch);\n        clearInterval(interval);\n      }\n    }, 100);\n\n    function getSearch(groups) {\n      let obj = {'群组': []};\n      // 过滤系统管理员\n      list = linq.from(list).where('$.peerInfo.title.indexOf(\"系统管理员\") == -1').toArray();\n      for (let item of list) {\n        if (!item.peerInfo.title) continue;\n        if (item.peerInfo.peer.type === 'group') {\n          obj['群组'].push(item);\n          continue;\n        }\n        let letterStore = [];\n        for (let pingyin of makepy.make.pingYing(item.peerInfo.title)) {\n          let letter = pingyin.substring(0, 1).toLowerCase();\n          if (letterStore.indexOf(letter) !== -1) {\n            continue;\n          } else {\n            letterStore.push(letter);\n          }\n          let key = '';\n          key = /[a-z]/.test(letter) ? letter : '#';\n          if (!obj[key]) {\n            obj[key] = [];\n          } \n          obj[key].push(item);\n        }\n      }\n      if (groups && groups.length > obj['群组'].length ) {\n        obj['群组'] = [];\n        for (var i = 0; i < groups.length; i++ ) {\n          var group = ActorClient.getGroup(groups[i].id);\n          console.log('getGroup123', group);\n          if(group) {\n            obj['群组'].push({\n              peerInfo: {\n                avatar: group.avatar,\n                placeholder: group.placeholder,\n                title: group.name,\n                peer: {\n                  id: group.id,\n                  type: 'group',\n                  key: 'g' + group.id\n                }\n              }\n            })\n          }\n        }\n        \n      }\n      for (let key in obj) {\n        obj[key].sort((a, b) => {\n          if (a.peerInfo.title > b.peerInfo.title) {\n            return 1;\n          } else if (a.peerInfo.title > b.peerInfo.title) {\n            return 0;\n          } else {\n            return -1;\n          }\n        })\n      }\n      dispatch(ActionTypes.PINGYIN_SEARCH_CHANGED, { obj });\n    }  \n  }\n};\n"]}