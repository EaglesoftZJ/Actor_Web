{"version":3,"sources":["../../src/actions/PingyinSearchActionCreators.js"],"names":["show","DEPARTMENT_SHOW","toggleAutoFocus","hide","DEPARTMENT_HIDE","setPingyinSearchList","list","obj","from","where","toArray","item","peerInfo","title","peer","type","push","letterStore","make","pingYing","pingyin","letter","substring","toLowerCase","indexOf","key","test","sort","a","b","PINGYIN_SEARCH_CHANGED"],"mappings":";;;;AAIA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACbA,MADa,kBACN;AACL,sCAAS,+BAAYC,eAArB;AACA,oCAAsBC,eAAtB,CAAsC,KAAtC;AACD,GAJY;AAMbC,MANa,kBAMN;AACL,sCAAS,+BAAYC,eAArB;AACA,oCAAsBF,eAAtB,CAAsC,IAAtC;AACD,GATY;AAWbG,sBAXa,gCAWQC,IAXR,EAWc;AACzB,QAAIC,MAAM,EAAC,MAAM,EAAP,EAAV;AACA;AACAD,WAAO,eAAKE,IAAL,CAAUF,IAAV,EAAgBG,KAAhB,CAAsB,yCAAtB,EAAiEC,OAAjE,EAAP;AACA,yBAAiBJ,IAAjB,kHAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAAdK,IAAc;;AACrB,UAAI,CAACA,KAAKC,QAAL,CAAcC,KAAnB,EAA0B;AAC1B,UAAIF,KAAKC,QAAL,CAAcE,IAAd,CAAmBC,IAAnB,KAA4B,OAAhC,EAAyC;AACvCR,YAAI,IAAJ,EAAUS,IAAV,CAAeL,IAAf;AACA;AACD;AACD,UAAIM,cAAc,EAAlB;AACA,4BAAoB,iBAAOC,IAAP,CAAYC,QAAZ,CAAqBR,KAAKC,QAAL,CAAcC,KAAnC,CAApB,yHAA+D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAtDO,OAAsD;;AAC7D,YAAIC,SAASD,QAAQE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,WAAxB,EAAb;AACA,YAAIN,YAAYO,OAAZ,CAAoBH,MAApB,MAAgC,CAAC,CAArC,EAAwC;AACtC;AACD,SAFD,MAEO;AACLJ,sBAAYD,IAAZ,CAAiBK,MAAjB;AACD;AACD,YAAII,OAAM,EAAV;AACAA,eAAM,QAAQC,IAAR,CAAaL,MAAb,IAAuBA,MAAvB,GAAgC,GAAtC;AACA,YAAI,CAACd,IAAIkB,IAAJ,CAAL,EAAe;AACblB,cAAIkB,IAAJ,IAAW,EAAX;AACD;AACDlB,YAAIkB,IAAJ,EAAST,IAAT,CAAcL,IAAd;AACD;AACF;AACD,SAAK,IAAIc,GAAT,IAAgBlB,GAAhB,EAAqB;AACnBA,UAAIkB,GAAJ,EAASE,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,YAAID,EAAEhB,QAAF,CAAWC,KAAX,GAAmBgB,EAAEjB,QAAF,CAAWC,KAAlC,EAAyC;AACvC,iBAAO,CAAP;AACD,SAFD,MAEO,IAAIe,EAAEhB,QAAF,CAAWC,KAAX,GAAmBgB,EAAEjB,QAAF,CAAWC,KAAlC,EAAyC;AAC9C,iBAAO,CAAP;AACD,SAFM,MAEA;AACL,iBAAO,CAAC,CAAR;AACD;AACF,OARD;AASD;AACD,sCAAS,+BAAYiB,sBAArB,EAA6C,EAAEvB,QAAF,EAA7C;AACD;AAjDY,C,EAVf","file":"PingyinSearchActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\nimport makepy from 'makepy';\nimport linq from 'linq';\n\nexport default {\n  show() {\n    dispatch(ActionTypes.DEPARTMENT_SHOW);\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.DEPARTMENT_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n  \n  setPingyinSearchList(list) {\n    let obj = {'群组': []};\n    // 过滤系统管理员\n    list = linq.from(list).where('$.peerInfo.title.indexOf(\"系统管理员\") == -1').toArray();\n    for (let item of list) {\n      if (!item.peerInfo.title) continue;\n      if (item.peerInfo.peer.type === 'group') {\n        obj['群组'].push(item);\n        continue;\n      }\n      let letterStore = [];\n      for (let pingyin of makepy.make.pingYing(item.peerInfo.title)) {\n        let letter = pingyin.substring(0, 1).toLowerCase();\n        if (letterStore.indexOf(letter) !== -1) {\n          continue;\n        } else {\n          letterStore.push(letter);\n        }\n        let key = '';\n        key = /[a-z]/.test(letter) ? letter : '#';\n        if (!obj[key]) {\n          obj[key] = [];\n        } \n        obj[key].push(item);\n      }\n    }\n    for (let key in obj) {\n      obj[key].sort((a, b) => {\n        if (a.peerInfo.title > b.peerInfo.title) {\n          return 1;\n        } else if (a.peerInfo.title > b.peerInfo.title) {\n          return 0;\n        } else {\n          return -1;\n        }\n      })\n    }\n    dispatch(ActionTypes.PINGYIN_SEARCH_CHANGED, { obj });\n  }\n};\n"]}