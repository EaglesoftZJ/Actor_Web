{"version":3,"sources":["../../src/actions/PreferencesActionCreators.js"],"names":["show","PREFERENCES_MODAL_SHOW","loadSessions","toggleAutoFocus","hide","PREFERENCES_MODAL_HIDE","save","preferences","isSendByEnterEnabled","isSoundEffectsEnabled","isGroupsNotificationsEnabled","isOnlyMentionNotifications","isShowNotificationsTextEnabled","isAnimationAutoPlayEnabled","changeSendByEnter","changeSoundEffectsEnabled","changeGroupNotificationsEnabled","changeIsOnlyMentionNotifications","changeIsShowNotificationTextEnabled","changeAnimationAutoPlayEnabled","PREFERENCES_SAVE","changeTab","tab","PREFERENCES_CHANGE_TAB","request","PREFERENCES_SESSION_LOAD","success","PREFERENCES_SESSION_LOAD_SUCCESS","failure","PREFERENCES_SESSION_LOAD_ERROR","terminateSession","id","PREFERENCES_SESSION_TERMINATE","PREFERENCES_SESSION_TERMINATE_SUCCESS","PREFERENCES_SESSION_TERMINATE_ERROR","then","terminateAllSessions","PREFERENCES_SESSION_TERMINATE_ALL","PREFERENCES_SESSION_TERMINATE_ALL_SUCCESS","PREFERENCES_SESSION_TERMINATE_ALL_ERROR"],"mappings":";;;;AAIA;;AACA;;AACA;;;;AACA;;;;;;AAPA;;;;kBASe;AACbA,MADa,kBACN;AACL,sCAAS,+BAAYC,sBAArB;AACA,SAAKC,YAAL;AACA,oCAAsBC,eAAtB,CAAsC,KAAtC;AACD,GALY;AAObC,MAPa,kBAON;AACL,sCAAS,+BAAYC,sBAArB;AACA,oCAAsBF,eAAtB,CAAsC,IAAtC;AACD,GAVY;AAYbG,MAZa,gBAYRC,WAZQ,EAYK;AAAA,QAEdC,oBAFc,GAQZD,WARY,CAEdC,oBAFc;AAAA,QAGdC,qBAHc,GAQZF,WARY,CAGdE,qBAHc;AAAA,QAIdC,4BAJc,GAQZH,WARY,CAIdG,4BAJc;AAAA,QAKdC,0BALc,GAQZJ,WARY,CAKdI,0BALc;AAAA,QAMdC,8BANc,GAQZL,WARY,CAMdK,8BANc;AAAA,QAOdC,0BAPc,GAQZN,WARY,CAOdM,0BAPc;;;AAUhB,0BAAYC,iBAAZ,CAA8BN,oBAA9B;AACA,0BAAYO,yBAAZ,CAAsCN,qBAAtC;AACA,0BAAYO,+BAAZ,CAA4CN,4BAA5C;AACA,0BAAYO,gCAAZ,CAA6CN,0BAA7C;AACA,0BAAYO,mCAAZ,CAAgDN,8BAAhD;AACA,0BAAYO,8BAAZ,CAA2CN,0BAA3C;;AAEA,sCAAS,+BAAYO,gBAArB,EAAuC,EAAEb,wBAAF,EAAvC;AACD,GA9BY;AAgCbc,WAhCa,qBAgCHC,GAhCG,EAgCE;AACb,sCAAS,+BAAYC,sBAArB,EAA6C,EAAED,QAAF,EAA7C;AACD,GAlCY;AAoCbpB,cApCa,0BAoCE;AACb,2CAAc,sBAAYA,YAAZ,EAAd,EAA0C;AACxCsB,eAAS,+BAAYC,wBADmB;AAExCC,eAAS,+BAAYC,gCAFmB;AAGxCC,eAAS,+BAAYC;AAHmB,KAA1C;AAKD,GA1CY;AA4CbC,kBA5Ca,4BA4CIC,EA5CJ,EA4CQ;AAAA;;AACnB,2CAAc,sBAAYD,gBAAZ,CAA6BC,EAA7B,CAAd,EAAgD;AAC9CP,eAAS,+BAAYQ,6BADyB;AAE9CN,eAAS,+BAAYO,qCAFyB;AAG9CL,eAAS,+BAAYM;AAHyB,KAAhD,EAIG,EAAEH,MAAF,EAJH,EAIWI,IAJX;AAKE;AACA;AAAA,aAAM,MAAKjC,YAAL,EAAN;AAAA,KANF;AAQD,GArDY;AAuDbkC,sBAvDa,kCAuDU;AAAA;;AACrB,2CAAc,sBAAYA,oBAAZ,EAAd,EAAkD;AAChDZ,eAAS,+BAAYa,iCAD2B;AAEhDX,eAAS,+BAAYY,yCAF2B;AAGhDV,eAAS,+BAAYW;AAH2B,KAAlD,EAIGJ,IAJH;AAKE;AACA;AAAA,aAAM,OAAKjC,YAAL,EAAN;AAAA,KANF;AAQD;AAhEY,C","file":"PreferencesActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nexport default {\n  show() {\n    dispatch(ActionTypes.PREFERENCES_MODAL_SHOW);\n    this.loadSessions();\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.PREFERENCES_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  save(preferences) {\n    const {\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      isAnimationAutoPlayEnabled\n    } = preferences;\n\n    ActorClient.changeSendByEnter(isSendByEnterEnabled);\n    ActorClient.changeSoundEffectsEnabled(isSoundEffectsEnabled);\n    ActorClient.changeGroupNotificationsEnabled(isGroupsNotificationsEnabled);\n    ActorClient.changeIsOnlyMentionNotifications(isOnlyMentionNotifications);\n    ActorClient.changeIsShowNotificationTextEnabled(isShowNotificationsTextEnabled);\n    ActorClient.changeAnimationAutoPlayEnabled(isAnimationAutoPlayEnabled);\n\n    dispatch(ActionTypes.PREFERENCES_SAVE, { preferences });\n  },\n\n  changeTab(tab) {\n    dispatch(ActionTypes.PREFERENCES_CHANGE_TAB, { tab });\n  },\n\n  loadSessions() {\n    dispatchAsync(ActorClient.loadSessions(), {\n      request: ActionTypes.PREFERENCES_SESSION_LOAD,\n      success: ActionTypes.PREFERENCES_SESSION_LOAD_SUCCESS,\n      failure: ActionTypes.PREFERENCES_SESSION_LOAD_ERROR\n    });\n  },\n\n  terminateSession(id) {\n    dispatchAsync(ActorClient.terminateSession(id), {\n      request: ActionTypes.PREFERENCES_SESSION_TERMINATE,\n      success: ActionTypes.PREFERENCES_SESSION_TERMINATE_SUCCESS,\n      failure: ActionTypes.PREFERENCES_SESSION_TERMINATE_ERROR\n    }, { id }).then(\n      // Reload active session list\n      () => this.loadSessions()\n    );\n  },\n\n  terminateAllSessions() {\n    dispatchAsync(ActorClient.terminateAllSessions(), {\n      request: ActionTypes.PREFERENCES_SESSION_TERMINATE_ALL,\n      success: ActionTypes.PREFERENCES_SESSION_TERMINATE_ALL_SUCCESS,\n      failure: ActionTypes.PREFERENCES_SESSION_TERMINATE_ALL_ERROR\n    }).then(\n      // Reload active session list\n      () => this.loadSessions()\n    );\n  }\n};\n"]}