{"version":3,"sources":["../../src/utils/Message.js"],"names":["message","Message","props","state","msg","show","showMessage","div","time","setState","document","body","removeChild","render","PropTypes","defaultProps","component","createElement","className","style","appendChild"],"mappings":";;;kBA0CwBA,O;;AA1CxB;;;;AACA;;AACA;;;;AACA;;;;;;;;;;IAEMC,O;;;AAOF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,qDACf,sBAAMA,KAAN,CADe;;AAEf,cAAKC,KAAL,GAAa;AACTC,iBAAI,EADK;AAETC,kBAAM;AAFG,SAAb;AAFe;AAMlB;;sBAEDC,W,wBAAYF,G,EAAKG,G,EAAK;AAAA;;AAAA,YACVC,IADU,GACD,KAAKN,KADJ,CACVM,IADU;;AAElB,aAAKC,QAAL,CAAc,EAACL,QAAD,EAAMC,MAAM,IAAZ,EAAd;AACA,gCAAW,YAAM;AACb,mBAAKI,QAAL,CAAc,EAACJ,MAAM,KAAP,EAAd;AACAK,qBAASC,IAAT,CAAcC,WAAd,CAA0BL,GAA1B;AACH,SAHD,EAGGC,IAHH;AAIH,K;;sBAGDK,M,qBAAS;AAAA,qBACiB,KAAKV,KADtB;AAAA,YACGE,IADH,UACGA,IADH;AAAA,YACSD,GADT,UACSA,GADT;;AAEL,eACI;AAAA;AAAA,cAAS,gBAAe,MAAxB,EAA+B,WAAU,KAAzC;AACMC,mBAAO;AAAA;AAAA,kBAAK,WAAU,cAAf;AAAgCD;AAAhC,aAAP,GAAqD;AAD3D,SADJ;AAKH,K;;;;;AAhCCH,O,CACKa,S,GAAY;AACf;AADe,C;AADjBb,O,CAIKc,Y,GAAe;AAClBP,UAAM;AADY,C;;;AA+B1B,IAAIQ,YAAY,EAAhB;;AAEe,SAAShB,OAAT,CAAiBI,GAAjB,EAAsB;AAC7B,QAAIG,MAAMG,SAASO,aAAT,CAAuB,KAAvB,CAAV;AACAV,QAAIW,SAAJ,GAAgB,kBAAhB;AACAX,QAAIY,KAAJ;AACAT,aAASC,IAAT,CAAcS,WAAd,CAA0Bb,GAA1B;AACAS,gBAAY,sBAAO,0BAAcf,OAAd,CAAP,EAA+BM,GAA/B,CAAZ;AACA,4BAAW,YAAM;AACbS,kBAAUV,WAAV,CAAsBF,GAAtB,EAA2BG,GAA3B;AACH,KAFD,EAEG,EAFH;;AAQJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","file":"Message.js","sourcesContent":["import React, {Component, PropTypes, createElement} from 'react';\nimport { render, findDOMNode, unmountComponentAtNode } from 'react-dom';\nimport Animate from 'rc-animate';\nimport { setTimeout } from 'timers';\n\nclass Message extends Component {\n    static PropTypes = {\n        // msg:  PropTypes.string\n    }\n    static defaultProps = {\n        time: 500\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg:'',\n            show: false\n        }\n    }\n\n    showMessage(msg, div) {\n        const { time } = this.props;\n        this.setState({msg, show: true});\n        setTimeout(() => {\n            this.setState({show: false});\n            document.body.removeChild(div);\n        }, time);\n    }\n\n\n    render() {\n        const { show, msg } = this.state;\n        return (            \n            <Animate transitionName=\"fade\" component=\"div\" >\n                { show ? <div className=\"Message-info\">{ msg }</div> : null }\n            </Animate>\n        );\n    }\n}\n\nvar component = '';\n\nexport default function message(msg) {\n        var div = document.createElement('div');\n        div.className = 'flytchat-message';\n        div.style = `position: absolute;z-index:99999;top: 0;left:50%;background: red;`;\n        document.body.appendChild(div);\n        component = render(createElement(Message), div);\n        setTimeout(() => {\n            component.showMessage(msg, div);\n        }, 10);\n\n\n\n\n\n    // var clean = () => {\n    //     unmountComponentAtNode(wrapper);\n    //     document.body.removeChild(wrapper);\n    //     // setImmediate(() => wrapper.remove());\n    //     wrapper = null;\n    // }\n    // if (type === 'show') {\n    //     wrapper && clean();\n    //     wrapper = document.createElement('div');\n    //     wrapper.className = 'loading-wrapper';\n    //     document.body.appendChild(wrapper);\n    //     component = render(createElement(DataLoading, {progress, total}), wrapper);\n    // } else if (wrapper && type === 'hide') {\n    //     // document.body.removeChild(wrapper);\n    //     clean();\n    // } else if (type === 'info') {\n    //     component.props.progress = progress;\n    //     component.props.total = total;\n    // }\n}"]}