{"version":3,"sources":["../../src/utils/DataLoading.js"],"names":["loading","DataLoading","props","render","progress","total","PropTypes","number","wrapper","component","type","clean","document","body","removeChild","createElement","className","appendChild"],"mappings":";;;kBA2BwBA,O;;AA3BxB;;;;AACA;;;;;;;;;;IAEMC,W;;;AAMF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gDACf,sBAAMA,KAAN,CADe;AAElB;;0BAEDC,M,qBAAS;AAAA,qBACuB,KAAKD,KAD5B;AAAA,YACGE,QADH,UACGA,QADH;AAAA,YACaC,KADb,UACaA,KADb;;AAEL,eACI;AAAA;AAAA,cAAK,WAAU,KAAf;AACI,mDAAK,WAAU,QAAf,GADJ;AAEMD,uBAAW;AAAA;AAAA,kBAAK,WAAU,UAAf;AAA2BA,wBAA3B;AAAA;AAAwCC;AAAxC,aAAX,GAAkE;AAFxE,SADJ;AAMH,K;;;;;AAlBCJ,W,CACKK,S,GAAY;AACfF,cAAW,iBAAUG,MADN;AAEfF,WAAO,iBAAUE;AAFF,C;;;AAoBvB,IAAIC,UAAU,IAAd;AACA,IAAIC,YAAY,EAAhB;;AAEe,SAAST,OAAT,CAAiBU,IAAjB,EAAuBN,QAAvB,EAAiCC,KAAjC,EAAwC;AACnD,QAAIM,QAAQ,SAARA,KAAQ,GAAM;AACd,8CAAuBH,OAAvB;AACAI,iBAASC,IAAT,CAAcC,WAAd,CAA0BN,OAA1B;AACA;AACAA,kBAAU,IAAV;AACH,KALD;AAMA,QAAIE,SAAS,MAAb,EAAqB;AACjBF,mBAAWG,OAAX;AACAH,kBAAUI,SAASG,aAAT,CAAuB,KAAvB,CAAV;AACAP,gBAAQQ,SAAR,GAAoB,iBAApB;AACAJ,iBAASC,IAAT,CAAcI,WAAd,CAA0BT,OAA1B;AACAC,oBAAY,sBAAO,0BAAcR,WAAd,EAA2B,EAACG,kBAAD,EAAWC,YAAX,EAA3B,CAAP,EAAsDG,OAAtD,CAAZ;AACH,KAND,MAMO,IAAIA,WAAWE,SAAS,MAAxB,EAAgC;AACnC;AACAC;AACH,KAHM,MAGA,IAAID,SAAS,MAAb,EAAqB;AACxBD,kBAAUP,KAAV,CAAgBE,QAAhB,GAA2BA,QAA3B;AACAK,kBAAUP,KAAV,CAAgBG,KAAhB,GAAwBA,KAAxB;AACH;AACJ","file":"DataLoading.js","sourcesContent":["import React, {Component, PropTypes, createElement} from 'react';\nimport { render, findDOMNode, unmountComponentAtNode } from 'react-dom';\n\nclass DataLoading extends Component {\n    static PropTypes = {\n        progress:  PropTypes.number,\n        total: PropTypes.number\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { progress, total } = this.props;\n        return (\n            <div className=\"box\">\n                <div className=\"loader\"></div>\n                { progress ? <div className=\"progress\">{progress} / {total}</div> : null }\n            </div>\n        )\n    }\n}\n\nvar wrapper = null;\nvar component = '';\n\nexport default function loading(type, progress, total) {\n    var clean = () => {\n        unmountComponentAtNode(wrapper);\n        document.body.removeChild(wrapper);\n        // setImmediate(() => wrapper.remove());\n        wrapper = null;\n    }\n    if (type === 'show') {\n        wrapper && clean();\n        wrapper = document.createElement('div');\n        wrapper.className = 'loading-wrapper';\n        document.body.appendChild(wrapper);\n        component = render(createElement(DataLoading, {progress, total}), wrapper);\n    } else if (wrapper && type === 'hide') {\n        // document.body.removeChild(wrapper);\n        clean();\n    } else if (type === 'info') {\n        component.props.progress = progress;\n        component.props.total = total;\n    }\n}"]}