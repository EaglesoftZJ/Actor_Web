{"version":3,"sources":["../../src/stores/QuickSearchStore.js"],"names":["QuickSearchStore","getInitialState","reduce","state","action","type","QUICK_SEARCH_CHANGED","from","list","orderBy","toArray"],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;+eAPA;;;;IASMA,gB;;;;;;;;;6BACJC,e,8BAAkB;AAChB,WAAO,EAAP;AACD,G;;6BAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,oBAAjB;AACE,eAAO,eAAKC,IAAL,CAAUH,OAAOI,IAAjB,EAAuBC,OAAvB,CAA+B,qBAA/B,EAAsDC,OAAtD,EAAP;AACF;AACE,eAAOP,KAAP;AAJJ;AAMD,G;;;;;kBAGY,IAAIH,gBAAJ,8B","file":"QuickSearchStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport linq from 'Linq';\n\nclass QuickSearchStore extends ReduceStore {\n  getInitialState() {\n    return []\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.QUICK_SEARCH_CHANGED:\n        return linq.from(action.list).orderBy('$.peerInfo.userName').toArray();\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new QuickSearchStore(Dispatcher);\n"]}