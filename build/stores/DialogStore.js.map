{"version":3,"sources":["../../src/stores/DialogStore.js"],"names":["newDailogObj","oldDailogObj","DialogStore","getInitialState","peer","storePeer","dialogs","getDialogs","getState","getCurrentPeer","getStorePeer","isMember","type","GROUP","group","getGroup","id","members","length","isFavorite","favoriteDialogs","key","shorts","dialog","reduce","state","action","DIALOGS_CHANGED","arr","sort","i","oldData","from","where","toArray","oldArr","j","oldDialog","counter","updateTime","Date","getTime","a","b","concat","console","log","isElectron","sendToElectron","value","minimizeMsg","DIALOGS_STORE_CHANGED","BIND_DIALOG_PEER","UNBIND_DIALOG_PEER","isAdmin","myID","getUid","adminId","select"],"mappings":";;;;;;AAIA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;+eATA;;;;AAWA,IAAIA,eAAe,EAAnB;AAAA,IACIC,eAAe,EADnB;;IAIMC,W;;;;;;;;;wBACJC,e,8BAAkB;AAChB,WAAO;AACLC,YAAM,IADD;AAELC,iBAAW,IAFN;AAGLC,eAAS;AAHJ,KAAP;AAKD,G;;wBAEDC,U,yBAAa;AAAA,oBACS,KAAKC,QAAL,EADT;AAAA,QACHF,OADG,aACHA,OADG;;AAEX,WAAOA,OAAP;AACD,G;;wBAEDG,c,6BAAiB;AAAA,qBACE,KAAKD,QAAL,EADF;AAAA,QACPJ,IADO,cACPA,IADO;;AAEf,WAAOA,IAAP;AACD,G;;wBAEDM,Y,2BAAe;AAAA,qBACS,KAAKF,QAAL,EADT;AAAA,QACLH,SADK,cACLA,SADK;;AAEb,WAAOA,SAAP;AACD,G;;wBAEDM,Q,uBAAW;AACT,QAAMP,OAAO,KAAKK,cAAL,EAAb;AACA,QAAIL,QAAQA,KAAKQ,IAAL,KAAc,6BAAUC,KAApC,EAA2C;AACzC,UAAMC,QAAQ,sBAAYC,QAAZ,CAAqBX,KAAKY,EAA1B,CAAd;AACA,aAAOF,SAASA,MAAMG,OAAN,CAAcC,MAAd,KAAyB,CAAzC;AACD;;AAED,WAAO,IAAP;AACD,G;;wBAEDC,U,uBAAWH,E,EAAI;AACb,QAAMI,kBAAkB,kBAAK,KAAKb,UAAL,EAAL,EAAwB,EAAEc,KAAK,YAAP,EAAxB,CAAxB;AACA,QAAI,CAACD,eAAL,EAAsB,OAAO,KAAP;;AAEtB,WAAO,kBAAKA,gBAAgBE,MAArB,EAA6B,UAACC,MAAD;AAAA,aAAYA,OAAOnB,IAAP,CAAYA,IAAZ,CAAiBY,EAAjB,KAAwBA,EAApC;AAAA,KAA7B,CAAP;AACD,G;;wBAEDQ,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOd,IAAf;AACE,WAAK,+BAAYe,eAAjB;AACE;AACA,YAAIC,MAAM,EAAV;AACA,YAAI,CAACF,OAAOpB,OAAP,CAAe,CAAf,CAAD,IAAsB,CAACoB,OAAOpB,OAAP,CAAe,CAAf,EAAkBuB,IAA7C,EAAmD;AACjD,eAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,OAAOpB,OAAP,CAAeY,MAAnC,EAA2CY,GAA3C,EAAgD;AAC9C,gBAAIC,UAAU,eAAKC,IAAL,CAAUP,MAAMnB,OAAhB,EAAyB2B,KAAzB,iBAA4CP,OAAOpB,OAAP,CAAewB,CAAf,EAAkBT,GAA9D,SAAsEa,OAAtE,GAAgF,CAAhF,CAAd;AACA,gBAAIC,SAAS,EAAb;AACA,gBAAIJ,OAAJ,EAAa;AACXI,uBAASJ,QAAQT,MAAjB;AACD;AACD,iBAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAIV,OAAOpB,OAAP,CAAewB,CAAf,EAAkBR,MAAlB,CAAyBJ,MAA7C,EAAqDkB,GAArD,EAA0D;AACxD,kBAAIb,SAASG,OAAOpB,OAAP,CAAewB,CAAf,EAAkBR,MAAlB,CAAyBc,CAAzB,CAAb;AACA,kBAAIf,MAAME,OAAOnB,IAAP,CAAYA,IAAZ,CAAiBiB,GAA3B;AACA,kBAAIgB,YAAY,eAAKL,IAAL,CAAUG,MAAV,EAAkBF,KAAlB,2BAA+CZ,GAA/C,SAAuDa,OAAvD,GAAiE,CAAjE,CAAhB;AACA,kBAAIG,aAAaA,UAAUC,OAAV,GAAoBf,OAAOe,OAAxC,IAAmD,CAACD,SAAxD,EAAmE;AACjEd,uBAAOgB,UAAP,GAAoB,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACD,eAFD,MAEO;AACLlB,uBAAOgB,UAAP,GAAoBF,UAAUE,UAA9B;AACD;AACF;AACDb,mBAAOpB,OAAP,CAAewB,CAAf,EAAkBR,MAAlB,CAAyBO,IAAzB,CAA8B,UAACa,CAAD,EAAIC,CAAJ,EAAU;AACtC,qBAAOA,EAAEJ,UAAF,GAAeG,EAAEH,UAAxB;AACD,aAFD;AAGAb,mBAAOpB,OAAP,CAAewB,CAAf,EAAkBD,IAAlB,GAAyB,IAAzB;AACAD,kBAAMA,IAAIgB,MAAJ,CAAWlB,OAAOpB,OAAP,CAAewB,CAAf,EAAkBR,MAA7B,CAAN;AACD;AACF;AACDM,cAAM,eAAKI,IAAL,CAAUJ,GAAV,EAAeK,KAAf,CAAqB,eAArB,EAAsCC,OAAtC,GAAgDL,IAAhD,CAAqD,UAACa,CAAD,EAAIC,CAAJ,EAAU;AACnE,iBAAOA,EAAEJ,UAAF,GAAeG,EAAEH,UAAxB;AACD,SAFK,CAAN;;AAIAM,gBAAQC,GAAR,CAAY,KAAZ,EAAmBlB,GAAnB;;AAEA,YAAI,sBAAYmB,UAAZ,EAAJ,EAA8B;AAC5B,gCAAYC,cAAZ,CAA2B,gBAA3B,EAA6C,EAAC3B,KAAK,SAAN,EAAiB4B,OAAOvB,OAAOpB,OAA/B,EAA7C;AACA,gCAAY0C,cAAZ,CAA2B,cAA3B,EAA2C,EAACE,aAAatB,GAAd,EAA3C;AACD;AACD,4BACKH,KADL;AAEEnB,mBAASoB,OAAOpB;AAFlB;AAIF,WAAK,+BAAY6C,qBAAjB;AACEN,gBAAQC,GAAR,CAAY,uBAAZ;AACA,4BACKrB,KADL;AAGF,WAAK,+BAAY2B,gBAAjB;AACE,4BACK3B,KADL;AAEErB,gBAAMsB,OAAOtB,IAFf;AAGEC,qBAAWqB,OAAOtB;AAHpB;;AAMF,WAAK,+BAAYiD,kBAAjB;AACE,4BACK5B,KADL;AAEErB,gBAAM;AAFR;;AAKF;AACE,eAAOqB,KAAP;AA7DJ;AA+DD,G;;wBACD6B,O,sBAAU;AACR,QAAI,KAAK9C,QAAL,GAAgBJ,IAAhB,CAAqBQ,IAArB,KAA8B,6BAAUC,KAA5C,EAAmD;AACjD,UAAM0C,OAAO,sBAAYC,MAAZ,EAAb;AACA,UAAMvC,UAAU,sBAAYF,QAAZ,CAAqB,KAAKP,QAAL,GAAgBJ,IAAhB,CAAqBY,EAA1C,EAA8CC,OAA9D;AACA,UAAIwC,UAAU,eAAKzB,IAAL,CAAUf,OAAV,EAAmBgB,KAAnB,CAAyB,mBAAzB,EAA8CyB,MAA9C,CAAqD,oBAArD,EAA2ExB,OAA3E,GAAqF,CAArF,CAAd;AACA,aAAOuB,YAAYF,IAAnB;AACD;AACD,WAAO,IAAP;AACD,G;;;;;kBAGY,IAAIrD,WAAJ,8B","file":"DialogStore.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { find, some } from 'lodash';\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport linq from 'Linq';\n\nvar newDailogObj = {},\n    oldDailogObj = {};\n    \n\nclass DialogStore extends ReduceStore {\n  getInitialState() {\n    return {\n      peer: null,\n      storePeer: null,\n      dialogs: []\n    };\n  }\n\n  getDialogs() {\n    const { dialogs } = this.getState();\n    return dialogs;\n  }\n\n  getCurrentPeer() {\n    const { peer } = this.getState();\n    return peer;\n  }\n\n  getStorePeer() {\n    const { storePeer } = this.getState();\n    return storePeer;\n  }\n\n  isMember() {\n    const peer = this.getCurrentPeer();\n    if (peer && peer.type === PeerTypes.GROUP) {\n      const group = ActorClient.getGroup(peer.id);\n      return group && group.members.length !== 0;\n    }\n\n    return true;\n  }\n\n  isFavorite(id) {\n    const favoriteDialogs = find(this.getDialogs(), { key: 'favourites' });\n    if (!favoriteDialogs) return false;\n\n    return some(favoriteDialogs.shorts, (dialog) => dialog.peer.peer.id === id);\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.DIALOGS_CHANGED:\n        // web端左侧对话框列表排序处理，客户端消息推送处理\n        var arr = [];\n        if (!action.dialogs[0] || !action.dialogs[0].sort) {\n          for (var i = 0; i < action.dialogs.length; i++) {\n            var oldData = linq.from(state.dialogs).where(`$.key == '${action.dialogs[i].key}'`).toArray()[0];\n            var oldArr = [];\n            if (oldData) {\n              oldArr = oldData.shorts;\n            }\n            for (var j = 0; j < action.dialogs[i].shorts.length; j++) {\n              var dialog = action.dialogs[i].shorts[j];\n              var key = dialog.peer.peer.key;\n              var oldDialog = linq.from(oldArr).where(`$.peer.peer.key == '${key}'`).toArray()[0];\n              if (oldDialog && oldDialog.counter < dialog.counter || !oldDialog) {\n                dialog.updateTime = new Date().getTime();\n              } else {\n                dialog.updateTime = oldDialog.updateTime;\n              }\n            }\n            action.dialogs[i].shorts.sort((a, b) => {\n              return b.updateTime - a.updateTime;\n            });\n            action.dialogs[i].sort = true;\n            arr = arr.concat(action.dialogs[i].shorts);\n          }\n        }\n        arr = linq.from(arr).where('$.counter > 0').toArray().sort((a, b) => {\n          return b.updateTime - a.updateTime;\n        });\n\n        console.log('arr', arr);\n        \n        if (ActorClient.isElectron()) {\n          ActorClient.sendToElectron('setDialogStore', {key: 'dialogs', value: action.dialogs});\n          ActorClient.sendToElectron('new-messages', {minimizeMsg: arr});\n        }\n        return {\n          ...state,\n          dialogs: action.dialogs\n        };\n      case ActionTypes.DIALOGS_STORE_CHANGED:\n        console.log('DIALOGS_STORE_CHANGED');\n        return {\n          ...state\n        }\n      case ActionTypes.BIND_DIALOG_PEER:\n        return {\n          ...state,\n          peer: action.peer,\n          storePeer: action.peer\n        };\n\n      case ActionTypes.UNBIND_DIALOG_PEER:\n        return {\n          ...state,\n          peer: null\n        };\n\n      default:\n        return state;\n    }\n  }\n  isAdmin() {\n    if (this.getState().peer.type === PeerTypes.GROUP) {\n      const myID = ActorClient.getUid();\n      const members = ActorClient.getGroup(this.getState().peer.id).members;\n      var adminId = linq.from(members).where('$.isAdmin == true').select('$.peerInfo.peer.id').toArray()[0];\n      return adminId === myID;\n    }\n    return true;\n  }\n}\n\nexport default new DialogStore(Dispatcher);\n"]}