{"version":3,"sources":["../../src/stores/DialogStore.js"],"names":["DialogStore","getInitialState","peer","dialogs","getDialogs","getState","getCurrentPeer","isMember","type","GROUP","group","getGroup","id","members","length","isFavorite","favoriteDialogs","key","shorts","dialog","reduce","state","action","DIALOGS_CHANGED","BIND_DIALOG_PEER","UNBIND_DIALOG_PEER","isAdmin","myID","getUid","adminId","from","where","select","toArray"],"mappings":";;;;;;AAIA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;+eATA;;;;IAWMA,W;;;;;;;;;wBACJC,e,8BAAkB;AAChB,WAAO;AACLC,YAAM,IADD;AAELC,eAAS;AAFJ,KAAP;AAID,G;;wBAEDC,U,yBAAa;AAAA,oBACS,KAAKC,QAAL,EADT;AAAA,QACHF,OADG,aACHA,OADG;;AAEX,WAAOA,OAAP;AACD,G;;wBAEDG,c,6BAAiB;AAAA,qBACE,KAAKD,QAAL,EADF;AAAA,QACPH,IADO,cACPA,IADO;;AAEf,WAAOA,IAAP;AACD,G;;wBAEDK,Q,uBAAW;AACT,QAAML,OAAO,KAAKI,cAAL,EAAb;AACA,QAAIJ,QAAQA,KAAKM,IAAL,KAAc,6BAAUC,KAApC,EAA2C;AACzC,UAAMC,QAAQ,sBAAYC,QAAZ,CAAqBT,KAAKU,EAA1B,CAAd;AACA,aAAOF,SAASA,MAAMG,OAAN,CAAcC,MAAd,KAAyB,CAAzC;AACD;;AAED,WAAO,IAAP;AACD,G;;wBAEDC,U,uBAAWH,E,EAAI;AACb,QAAMI,kBAAkB,kBAAK,KAAKZ,UAAL,EAAL,EAAwB,EAAEa,KAAK,YAAP,EAAxB,CAAxB;AACA,QAAI,CAACD,eAAL,EAAsB,OAAO,KAAP;;AAEtB,WAAO,kBAAKA,gBAAgBE,MAArB,EAA6B,UAACC,MAAD;AAAA,aAAYA,OAAOjB,IAAP,CAAYA,IAAZ,CAAiBU,EAAjB,KAAwBA,EAApC;AAAA,KAA7B,CAAP;AACD,G;;wBAEDQ,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOd,IAAf;AACE,WAAK,+BAAYe,eAAjB;AACE,4BACKF,KADL;AAEElB,mBAASmB,OAAOnB;AAFlB;;AAKF,WAAK,+BAAYqB,gBAAjB;AACE,4BACKH,KADL;AAEEnB,gBAAMoB,OAAOpB;AAFf;;AAKF,WAAK,+BAAYuB,kBAAjB;AACE,4BACKJ,KADL;AAEEnB,gBAAM;AAFR;;AAKF;AACE,eAAOmB,KAAP;AApBJ;AAsBD,G;;wBACDK,O,sBAAU;AACR,QAAI,KAAKrB,QAAL,GAAgBH,IAAhB,CAAqBM,IAArB,KAA8B,6BAAUC,KAA5C,EAAmD;AACjD,UAAMkB,OAAO,sBAAYC,MAAZ,EAAb;AACA,UAAMf,UAAU,sBAAYF,QAAZ,CAAqB,KAAKN,QAAL,GAAgBH,IAAhB,CAAqBU,EAA1C,EAA8CC,OAA9D;AACA,UAAIgB,UAAU,eAAKC,IAAL,CAAUjB,OAAV,EAAmBkB,KAAnB,CAAyB,mBAAzB,EAA8CC,MAA9C,CAAqD,oBAArD,EAA2EC,OAA3E,GAAqF,CAArF,CAAd;AACA,aAAOJ,YAAYF,IAAnB;AACD;AACD,WAAO,IAAP;AACD,G;;;;;kBAGY,IAAI3B,WAAJ,8B","file":"DialogStore.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { find, some } from 'lodash';\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport linq from 'Linq';\n\nclass DialogStore extends ReduceStore {\n  getInitialState() {\n    return {\n      peer: null,\n      dialogs: []\n    };\n  }\n\n  getDialogs() {\n    const { dialogs } = this.getState();\n    return dialogs;\n  }\n\n  getCurrentPeer() {\n    const { peer } = this.getState();\n    return peer;\n  }\n\n  isMember() {\n    const peer = this.getCurrentPeer();\n    if (peer && peer.type === PeerTypes.GROUP) {\n      const group = ActorClient.getGroup(peer.id);\n      return group && group.members.length !== 0;\n    }\n\n    return true;\n  }\n\n  isFavorite(id) {\n    const favoriteDialogs = find(this.getDialogs(), { key: 'favourites' });\n    if (!favoriteDialogs) return false;\n\n    return some(favoriteDialogs.shorts, (dialog) => dialog.peer.peer.id === id);\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.DIALOGS_CHANGED:\n        return {\n          ...state,\n          dialogs: action.dialogs\n        };\n\n      case ActionTypes.BIND_DIALOG_PEER:\n        return {\n          ...state,\n          peer: action.peer\n        };\n\n      case ActionTypes.UNBIND_DIALOG_PEER:\n        return {\n          ...state,\n          peer: null\n        };\n\n      default:\n        return state;\n    }\n  }\n  isAdmin() {\n    if (this.getState().peer.type === PeerTypes.GROUP) {\n      const myID = ActorClient.getUid();\n      const members = ActorClient.getGroup(this.getState().peer.id).members;\n      var adminId = linq.from(members).where('$.isAdmin == true').select('$.peerInfo.peer.id').toArray()[0];\n      return adminId === myID;\n    }\n    return true;\n  }\n}\n\nexport default new DialogStore(Dispatcher);\n"]}