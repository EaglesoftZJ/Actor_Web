{"version":3,"sources":["../../src/stores/DownloadStore.js"],"names":["DownloadStore","getInitialState","list","getList","getState","reduce","state","action","type","DOWNLOAD_CHANGE"],"mappings":";;;;;;AAKA;;AACA;;;;AACA;;AACA;;;;;;;;;;;AAPA;;;;IAUMA,a;;;;;;;;;0BACJC,e,8BAAkB;AAChB,WAAO;AACLC,YAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADD,KAAP;AAGD,G;;0BAEDC,O,sBAAU;AAAA,oBACS,KAAKC,QAAL,EADT;AAAA,QACAF,IADA,aACAA,IADA;;AAER,WAAOA,IAAP;AACD,G;;0BAEDG,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,eAAjB;AACE,4BACKH,KADL;AAEEJ,gBAAMK,OAAOL;AAFf;AAIA;AACF;AACE,eAAOI,KAAP;AARJ;AAUD,G;;;;;kBAGY,IAAIN,aAAJ,8B","file":"DownloadStore.js","sourcesContent":["\n/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport linq from 'Linq';\n    \n\nclass DownloadStore extends ReduceStore {\n  getInitialState() {\n    return {\n      list: [1, 2, 3]\n    };\n  }\n\n  getList() {\n    const { list } = this.getState();\n    return list;\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.DOWNLOAD_CHANGE:\n        return {\n          ...state,\n          list: action.list\n        };\n        break;\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new DownloadStore(Dispatcher);\n"]}