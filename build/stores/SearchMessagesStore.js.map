{"version":3,"sources":["../../src/stores/SearchMessagesStore.js"],"names":["SearchMessagesStore","getInitialState","query","results","error","isOpen","isSearching","reduce","state","action","type","SEARCH_MESSAGES_SHOW","BIND_DIALOG_PEER","SEARCH_MESSAGES_HIDE","SEARCH_MESSAGES_SET_QUERY","SEARCH_TEXT_SUCCESS","response","SEARCH_TEXT_ERROR","getState","isExpanded","getQuery","getAllResults"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;;;;;+eANA;;;;IAQMA,mB;;;;;;;;;gCACJC,e,8BAAkB;AAChB,WAAO;AACLC,aAAO,EADF;AAELC,eAAS,EAFJ;AAGLC,aAAO,IAHF;AAILC,cAAQ,KAJH;AAKLC,mBAAa;AALR,KAAP;AAOD,G;;gCAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,oBAAjB;AACE,4BACKH,KADL;AAEEH,kBAAQ;AAFV;;AAKF,WAAK,+BAAYO,gBAAjB;AACA,WAAK,+BAAYC,oBAAjB;AACE,eAAO,KAAKZ,eAAL,EAAP;;AAEF,WAAK,+BAAYa,yBAAjB;AACE,4BACKN,KADL;AAEEN,iBAAOO,OAAOP,KAFhB;AAGEG,kBAAQ,IAHV;AAIEC,uBAAa;AAJf;;AAOF,WAAK,+BAAYS,mBAAjB;AACE,4BACKP,KADL;AAEEL,mBAASM,OAAOP,KAAP,GAAeO,OAAOO,QAAtB,GAAiC,EAF5C;AAGEZ,iBAAO,IAHT;AAIEE,uBAAa;AAJf;;AAOF,WAAK,+BAAYW,iBAAjB;AACE,4BACKT,KADL;AAEEJ,iBAAOK,OAAOL,KAFhB;AAGEE,uBAAa;AAHf;;AAMF;AACE,eAAOE,KAAP;AAnCJ;AAqCD,G;;gCAEDH,M,qBAAS;AACP,WAAO,KAAKa,QAAL,GAAgBb,MAAvB;AACD,G;;gCAEDC,W,0BAAc;AACZ,WAAO,KAAKY,QAAL,GAAgBZ,WAAvB;AACD,G;;gCAEDa,U,yBAAa;AACX,WAAO,KAAKD,QAAL,GAAgBC,UAAvB;AACD,G;;gCAEDC,Q,uBAAW;AACT,WAAO,KAAKF,QAAL,GAAgBhB,KAAvB;AACD,G;;gCAEDmB,a,4BAAgB;AACd,WAAO,KAAKH,QAAL,GAAgBf,OAAvB;AACD,G;;;;;kBAGY,IAAIH,mBAAJ,8B","file":"SearchMessagesStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass SearchMessagesStore extends ReduceStore {\n  getInitialState() {\n    return {\n      query: '',\n      results: [],\n      error: null,\n      isOpen: false,\n      isSearching: false\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.SEARCH_MESSAGES_SHOW:\n        return {\n          ...state,\n          isOpen: true\n        };\n\n      case ActionTypes.BIND_DIALOG_PEER:\n      case ActionTypes.SEARCH_MESSAGES_HIDE:\n        return this.getInitialState();\n\n      case ActionTypes.SEARCH_MESSAGES_SET_QUERY:\n        return {\n          ...state,\n          query: action.query,\n          isOpen: true,\n          isSearching: true\n        };\n\n      case ActionTypes.SEARCH_TEXT_SUCCESS:\n        return {\n          ...state,\n          results: action.query ? action.response : [],\n          error: null,\n          isSearching: false\n        };\n\n      case ActionTypes.SEARCH_TEXT_ERROR:\n        return {\n          ...state,\n          error: action.error,\n          isSearching: false\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  isOpen() {\n    return this.getState().isOpen;\n  }\n\n  isSearching() {\n    return this.getState().isSearching;\n  }\n\n  isExpanded() {\n    return this.getState().isExpanded;\n  }\n\n  getQuery() {\n    return this.getState().query;\n  }\n\n  getAllResults() {\n    return this.getState().results;\n  }\n}\n\nexport default new SearchMessagesStore(Dispatcher);\n"]}