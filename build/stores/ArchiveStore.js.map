{"version":3,"sources":["../../src/stores/ArchiveStore.js"],"names":["ArchiveStore","dispatcher","isLoading","dialogs","archiveChatState","_isAllLoaded","_isInitialLoadingComplete","isArchiveLoading","isAllLoaded","isInitialLoadingComplete","getDialogs","getArchiveChatState","__onDispatch","action","type","ARCHIVE_ADD","peer","key","PROCESSING","__emitChange","ARCHIVE_ADD_SUCCESS","ARCHIVE_ADD_ERROR","FAILURE","ARCHIVE_LOAD","ARCHIVE_LOAD_SUCCESS","response","ARCHIVE_LOAD_MORE","ARCHIVE_LOAD_MORE_SUCCESS","length","push","apply"],"mappings":";;;;AAIA;;AACA;;;;AACA;;;;;;;;+eANA;;;;IAQMA,Y;;;AACJ,wBAAYC,UAAZ,EAAwB;AAAA;;AAAA,iDACtB,kBAAMA,UAAN,CADsB;;AAGtB,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,YAAL,GAAoB,KAApB;AACA,UAAKC,yBAAL,GAAiC,KAAjC;AAPsB;AAQvB;;yBAEDC,gB,+BAAmB;AACjB,WAAO,KAAKL,SAAZ;AACD,G;;yBAEDM,W,0BAAc;AACZ,WAAO,KAAKH,YAAZ;AACD,G;;yBAEDI,wB,uCAA2B;AACzB,WAAO,KAAKH,yBAAZ;AACD,G;;yBAEDI,U,yBAAa;AACX,WAAO,KAAKP,OAAZ;AACD,G;;yBAEDQ,mB,kCAAsB;AACpB,WAAO,KAAKP,gBAAZ;AACD,G;;yBAGDQ,Y,yBAAaC,M,EAAQ;AACnB,YAAOA,OAAOC,IAAd;AACE,WAAK,+BAAYC,WAAjB;AACE,aAAKX,gBAAL,CAAsBS,OAAOG,IAAP,CAAYC,GAAlC,IAAyC,qCAAkBC,UAA3D;AACA,aAAKC,YAAL;AACA;AACF,WAAK,+BAAYC,mBAAjB;AACE,eAAO,KAAKhB,gBAAL,CAAsBS,OAAOG,IAAP,CAAYC,GAAlC,CAAP;AACA,aAAKE,YAAL;AACA;AACF,WAAK,+BAAYE,iBAAjB;AACE,aAAKjB,gBAAL,CAAsBS,OAAOG,IAAP,CAAYC,GAAlC,IAAyC,qCAAkBK,OAA3D;AACA,aAAKH,YAAL;AACA;;AAEF,WAAK,+BAAYI,YAAjB;AACE,aAAKrB,SAAL,GAAiB,IAAjB;AACA,aAAKG,YAAL,GAAoB,KAApB;AACA,aAAKC,yBAAL,GAAiC,KAAjC;AACA,aAAKa,YAAL;AACA;;AAEF,WAAK,+BAAYK,oBAAjB;AACE,aAAKtB,SAAL,GAAiB,KAAjB;AACA,aAAKI,yBAAL,GAAiC,IAAjC;AACA,aAAKH,OAAL,GAAeU,OAAOY,QAAtB;AACA,aAAKN,YAAL;AACA;;AAEF,WAAK,+BAAYO,iBAAjB;AACE,aAAKxB,SAAL,GAAiB,IAAjB;AACA,aAAKiB,YAAL;AACA;;AAEF,WAAK,+BAAYQ,yBAAjB;AACE,aAAKzB,SAAL,GAAiB,KAAjB;AACA,aAAKG,YAAL,GAAoBQ,OAAOY,QAAP,CAAgBG,MAAhB,KAA2B,CAA/C;AACA,aAAKzB,OAAL,CAAa0B,IAAb,CAAkBC,KAAlB,CAAwB,KAAK3B,OAA7B,EAAsCU,OAAOY,QAA7C;AACA,aAAKN,YAAL;AACA;;AAEF;AAxCF;AA0CD,G;;;;;kBAGY,IAAInB,YAAJ,8B","file":"ArchiveStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AsyncActionStates } from '../constants/ActorAppConstants';\n\nclass ArchiveStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n\n    this.isLoading = true;\n    this.dialogs = [];\n    this.archiveChatState = {};\n    this._isAllLoaded = false;\n    this._isInitialLoadingComplete = false;\n  }\n\n  isArchiveLoading() {\n    return this.isLoading;\n  }\n\n  isAllLoaded() {\n    return this._isAllLoaded;\n  }\n\n  isInitialLoadingComplete() {\n    return this._isInitialLoadingComplete;\n  }\n\n  getDialogs() {\n    return this.dialogs;\n  }\n\n  getArchiveChatState() {\n    return this.archiveChatState;\n  }\n\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.ARCHIVE_ADD:\n        this.archiveChatState[action.peer.key] = AsyncActionStates.PROCESSING;\n        this.__emitChange();\n        break;\n      case ActionTypes.ARCHIVE_ADD_SUCCESS:\n        delete this.archiveChatState[action.peer.key];\n        this.__emitChange();\n        break;\n      case ActionTypes.ARCHIVE_ADD_ERROR:\n        this.archiveChatState[action.peer.key] = AsyncActionStates.FAILURE;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD:\n        this.isLoading = true;\n        this._isAllLoaded = false;\n        this._isInitialLoadingComplete = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD_SUCCESS:\n        this.isLoading = false;\n        this._isInitialLoadingComplete = true;\n        this.dialogs = action.response;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD_MORE:\n        this.isLoading = true;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD_MORE_SUCCESS:\n        this.isLoading = false;\n        this._isAllLoaded = action.response.length === 0;\n        this.dialogs.push.apply(this.dialogs, action.response);\n        this.__emitChange();\n        break;\n\n      default:\n    }\n  }\n}\n\nexport default new ArchiveStore(Dispatcher);\n"]}