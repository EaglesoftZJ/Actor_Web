{"version":3,"sources":["../../src/stores/PreferencesStore.js"],"names":["PreferencesStore","getInitialState","sessions","currentTab","GENERAL","terminateState","reduce","state","action","type","PREFERENCES_SESSION_LOAD_SUCCESS","response","PREFERENCES_MODAL_HIDE","PREFERENCES_CHANGE_TAB","tab","PREFERENCES_SESSION_TERMINATE","id","PROCESSING","PREFERENCES_SESSION_TERMINATE_SUCCESS","PREFERENCES_SESSION_TERMINATE_ERROR","FAILURE","isSendByEnterEnabled","isGroupsNotificationsEnabled","isOnlyMentionNotifications","isSoundEffectsEnabled","isShowNotificationsTextEnabled","isAnimationAutoPlayEnabled","getSessions","getState","getCurrentTab","getTerminateState"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AAEA;;;;;;;;;;+eARA;;;;IAUMA,gB;;;;;;;;;6BACJC,e,8BAAkB;AAChB,WAAO;AACLC,gBAAU,EADL;AAELC,kBAAY,uCAAoBC,OAF3B;AAGLC,sBAAgB;AAHX,KAAP;AAKD,G;;6BAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAOA,OAAOC,IAAd;AACE,WAAK,+BAAYC,gCAAjB;AACE,4BACKH,KADL;AAEEL,oBAAUM,OAAOG;AAFnB;AAIF,WAAK,+BAAYC,sBAAjB;AACE,eAAO,KAAKX,eAAL,EAAP;;AAEF,WAAK,+BAAYY,sBAAjB;AACE,4BACKN,KADL;AAEEJ,sBAAYK,OAAOM;AAFrB;;AAKF,WAAK,+BAAYC,6BAAjB;AACER,cAAMF,cAAN,CAAqBG,OAAOQ,EAA5B,IAAkC,qCAAkBC,UAApD;AACA,eAAOV,KAAP;AACF,WAAK,+BAAYW,qCAAjB;AACE,eAAOX,MAAMF,cAAN,CAAqBG,OAAOQ,EAA5B,CAAP;AACA,eAAOT,KAAP;AACF,WAAK,+BAAYY,mCAAjB;AACEZ,cAAMF,cAAN,CAAqBG,OAAOQ,EAA5B,IAAkC,qCAAkBI,OAApD;AACA,eAAOb,KAAP;;AAEF;AACE,eAAOA,KAAP;AA1BJ;AA4BD,G;;6BAEDc,oB,mCAAuB;AACrB,WAAO,sBAAYA,oBAAZ,EAAP;AACD,G;;6BAEDC,4B,2CAA+B;AAC7B,WAAO,sBAAYA,4BAAZ,EAAP;AACD,G;;6BAEDC,0B,yCAA6B;AAC3B,WAAO,sBAAYA,0BAAZ,EAAP;AACD,G;;6BAEDC,qB,oCAAwB;AACtB,WAAO,sBAAYA,qBAAZ,EAAP;AACD,G;;6BAEDC,8B,6CAAiC;AAC/B,WAAO,sBAAYA,8BAAZ,EAAP;AACD,G;;6BAEDC,0B,yCAA6B;AAC3B,WAAO,sBAAYA,0BAAZ,EAAP;AACD,G;;6BAEDC,W,0BAAc;AACZ,WAAO,KAAKC,QAAL,GAAgB1B,QAAvB;AACD,G;;6BAED2B,a,4BAAgB;AACd,WAAO,KAAKD,QAAL,GAAgBzB,UAAvB;AACD,G;;6BAED2B,iB,gCAAoB;AAClB,WAAO,KAAKF,QAAL,GAAgBvB,cAAvB;AACD,G;;;;;kBAGY,IAAIL,gBAAJ,8B","file":"PreferencesStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AsyncActionStates, PreferencesTabTypes } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\n\nclass PreferencesStore extends ReduceStore {\n  getInitialState() {\n    return {\n      sessions: [],\n      currentTab: PreferencesTabTypes.GENERAL,\n      terminateState: {}\n    }\n  }\n\n  reduce(state, action) {\n    switch(action.type) {\n      case ActionTypes.PREFERENCES_SESSION_LOAD_SUCCESS:\n        return {\n          ...state,\n          sessions: action.response\n        }\n      case ActionTypes.PREFERENCES_MODAL_HIDE:\n        return this.getInitialState();\n\n      case ActionTypes.PREFERENCES_CHANGE_TAB:\n        return {\n          ...state,\n          currentTab: action.tab\n        }\n\n      case ActionTypes.PREFERENCES_SESSION_TERMINATE:\n        state.terminateState[action.id] = AsyncActionStates.PROCESSING;\n        return state;\n      case ActionTypes.PREFERENCES_SESSION_TERMINATE_SUCCESS:\n        delete state.terminateState[action.id];\n        return state;\n      case ActionTypes.PREFERENCES_SESSION_TERMINATE_ERROR:\n        state.terminateState[action.id] = AsyncActionStates.FAILURE;\n        return state;\n\n      default:\n        return state;\n    }\n  }\n\n  isSendByEnterEnabled() {\n    return ActorClient.isSendByEnterEnabled();\n  }\n\n  isGroupsNotificationsEnabled() {\n    return ActorClient.isGroupsNotificationsEnabled();\n  }\n\n  isOnlyMentionNotifications() {\n    return ActorClient.isOnlyMentionNotifications();\n  }\n\n  isSoundEffectsEnabled() {\n    return ActorClient.isSoundEffectsEnabled();\n  }\n\n  isShowNotificationsTextEnabled() {\n    return ActorClient.isShowNotificationsTextEnabled();\n  }\n\n  isAnimationAutoPlayEnabled() {\n    return ActorClient.isAnimationAutoPlayEnabled();\n  }\n\n  getSessions() {\n    return this.getState().sessions;\n  }\n\n  getCurrentTab() {\n    return this.getState().currentTab;\n  }\n\n  getTerminateState() {\n    return this.getState().terminateState;\n  }\n}\n\nexport default new PreferencesStore(Dispatcher);\n"]}