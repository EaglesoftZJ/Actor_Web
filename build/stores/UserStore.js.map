{"version":3,"sources":["../../src/stores/UserStore.js"],"names":["UserStore","getUser","uid","getMyId","getUid","isContact"],"mappings":";;;;AAIA;;;;;;AAEA,IAAMA,YAAY;AAChB;;;;;;AAMAC,SAPgB,mBAORC,GAPQ,EAOH;AACX,WAAO,sBAAYD,OAAZ,CAAoBC,GAApB,CAAP;AACD,GATe;;;AAWhB;;;;;AAKAC,SAhBgB,qBAgBN;AACR,WAAO,sBAAYC,MAAZ,EAAP;AACD,GAlBe;;;AAoBhB;;;;;;AAMAC,WA1BgB,qBA0BNH,GA1BM,EA0BD;AACb,WAAO,KAAKD,OAAL,CAAaC,GAAb,EAAkBG,SAAzB;AACD;AA5Be,CAAlB,C,CANA;;;;kBAqCeL,S","file":"UserStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport ActorClient from '../utils/ActorClient';\n\nconst UserStore = {\n  /**\n   * Get user information\n   *\n   * @param uid {number} User id\n   * @returns {object} User information\n   */\n  getUser(uid) {\n    return ActorClient.getUser(uid);\n  },\n\n  /**\n   * Get current user id\n   *\n   * @returns {number} User id\n   */\n  getMyId() {\n    return ActorClient.getUid();\n  },\n\n  /**\n   * Returns true if user is in contact\n   *\n   * @param uid {number} User id\n   * @returns {boolean}\n   */\n  isContact(uid) {\n    return this.getUser(uid).isContact\n  }\n};\n\nexport default UserStore;\n"]}