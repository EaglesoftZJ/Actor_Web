{"version":3,"sources":["../../src/stores/ActivityStore.js"],"names":["ActivityStore","getInitialState","isOpen","reduce","state","action","type","CALL_MODAL_OPEN","ACTIVITY_HIDE","ACTIVITY_SHOW","getState"],"mappings":";;;;AAIA;;AACA;;;;AACA;;;;;;;;+eANA;;;;IAQMA,a;;;;;;;;;0BACJC,e,8BAAkB;AAChB,WAAO;AACLC,cAAQ;AADH,KAAP;AAGD,G;;0BAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,eAAjB;AACA,WAAK,+BAAYC,aAAjB;AACE,eAAO,KAAKP,eAAL,EAAP;AACF,WAAK,+BAAYQ,aAAjB;AACE,eAAO;AACLP,kBAAQ;AADH,SAAP;AAGF;AACE,eAAOE,KAAP;AATJ;AAWD,G;;0BAEDF,M,qBAAS;AACP,WAAO,KAAKQ,QAAL,GAAgBR,MAAvB;AACD,G;;;;;kBAGY,IAAIF,aAAJ,8B","file":"ActivityStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass ActivityStore extends ReduceStore {\n  getInitialState() {\n    return {\n      isOpen: false\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.CALL_MODAL_OPEN:\n      case ActionTypes.ACTIVITY_HIDE:\n        return this.getInitialState();\n      case ActionTypes.ACTIVITY_SHOW:\n        return {\n          isOpen: true\n        };\n      default:\n        return state;\n    }\n  }\n\n  isOpen() {\n    return this.getState().isOpen;\n  }\n}\n\nexport default new ActivityStore(Dispatcher);\n"]}