{"version":3,"sources":["../../src/stores/CallStore.js"],"names":["CallStore","getInitialState","isOpen","isFloating","id","peer","state","members","isMuted","isOutgoing","reduce","action","type","CALL_MODAL_OPEN","CALL_MODAL_HIDE","CALL_CHANGED","time","call","CALL_TIME_CHANGED","CALL_MUTE_TOGGLE","CALL_FLOAT_TOGGLE"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;;;;;+eANA;;;;IAQMA,S;;;;;;;;;sBACJC,e,8BAAkB;AAChB,WAAO;AACLC,cAAQ,KADH;AAELC,kBAAY,KAFP;AAGLC,UAAI,IAHC;AAILC,YAAM,IAJD;AAKLC,aAAO,IALF;AAMLC,eAAS,IANJ;AAOLC,eAAS,KAPJ;AAQLC,kBAAY;AARP,KAAP;AAUD,G;;sBAEDC,M,mBAAOJ,K,EAAOK,M,EAAQ;AACpB,YAAOA,OAAOC,IAAd;AACE,WAAK,+BAAYC,eAAjB;AACE,4BACKP,KADL;AAEEJ,kBAAQ,IAFV;AAGEE,cAAIO,OAAOP;AAHb;AAKF,WAAK,+BAAYU,eAAjB;AACE,eAAO,KAAKb,eAAL,EAAP;AACF,WAAK,+BAAYc,YAAjB;AACE,4BACKT,KADL;AAEEU,gBAAM,OAFR;AAGEX,gBAAMM,OAAOM,IAAP,CAAYZ,IAHpB;AAIEC,iBAAOK,OAAOM,IAAP,CAAYX,KAJrB;AAKEC,mBAASI,OAAOM,IAAP,CAAYV,OALvB;AAMEE,sBAAYE,OAAOM,IAAP,CAAYR;AAN1B;AAQF,WAAK,+BAAYS,iBAAjB;AACE,4BACKZ,KADL;AAEEU,gBAAML,OAAOK;AAFf;AAIF,WAAK,+BAAYG,gBAAjB;AACE,4BACKb,KADL;AAEEE,mBAAS,CAACF,MAAME;AAFlB;AAIF,WAAK,+BAAYY,iBAAjB;AACE,4BACKd,KADL;AAEEH,sBAAY,CAACG,MAAMH;AAFrB;AAIF;AACE,eAAOG,KAAP;AAlCJ;AAoCD,G;;;;;kBAGY,IAAIN,SAAJ,8B","file":"CallStore.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass CallStore extends ReduceStore {\n  getInitialState() {\n    return {\n      isOpen: false,\n      isFloating: false,\n      id: null,\n      peer: null,\n      state: null,\n      members: null,\n      isMuted: false,\n      isOutgoing: false\n    };\n  }\n\n  reduce(state, action) {\n    switch(action.type) {\n      case ActionTypes.CALL_MODAL_OPEN:\n        return {\n          ...state,\n          isOpen: true,\n          id: action.id\n        };\n      case ActionTypes.CALL_MODAL_HIDE:\n        return this.getInitialState();\n      case ActionTypes.CALL_CHANGED:\n        return {\n          ...state,\n          time: '00:00',\n          peer: action.call.peer,\n          state: action.call.state,\n          members: action.call.members,\n          isOutgoing: action.call.isOutgoing\n        };\n      case ActionTypes.CALL_TIME_CHANGED:\n        return {\n          ...state,\n          time: action.time\n        };\n      case ActionTypes.CALL_MUTE_TOGGLE:\n        return {\n          ...state,\n          isMuted: !state.isMuted\n        };\n      case ActionTypes.CALL_FLOAT_TOGGLE:\n        return {\n          ...state,\n          isFloating: !state.isFloating\n        };\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new CallStore(Dispatcher);\n"]}