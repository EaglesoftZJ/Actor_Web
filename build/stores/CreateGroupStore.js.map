{"version":3,"sources":["../../src/stores/CreateGroupStore.js"],"names":["CreateGroupStore","getInitialState","step","NAME_INPUT","name","search","selectedUserIds","OrderedSet","reduce","state","action","type","GROUP_CREATE_OPEN_IN_DIALOG","peer","getCurrentPeer","add","id","GROUP_CREATE_SET_NAME","CONTACTS_SELECTION","GROUP_CREATE_SET_SEARCH","GROUP_CREATE_SET_MEMBERS","GROUP_CREATE","CREATION_STARTED","GROUP_CREATE_SUCCESS","GROUP_CREATE_ERROR","console","error","GROUP_CREATE_MODAL_HIDE","getCurrentStep","getState","getGroupName","getGroupSearch","getSelectedUserIds"],"mappings":";;;;;;AAIA;;;;AAEA;;AACA;;;;AACA;;AAEA;;;;;;;;;;+eAVA;;;;IAYMA,gB;;;;;;;;;6BACJC,e,8BAAkB;AAChB,WAAO;AACLC,YAAM,oCAAiBC,UADlB;AAELC,YAAM,EAFD;AAGLC,cAAQ,EAHH;AAIL;AACAC,uBAAiB,IAAI,oBAAUC,UAAd;AALZ,KAAP;AAOD,G;;6BAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,2BAAjB;AACA,YAAIC,OAAO,sBAAYC,cAAZ,EAAX;AACA,4BACKL,KADL;AAEEH,2BAAiBG,MAAMH,eAAN,CAAsBS,GAAtB,CAA0BF,KAAKG,EAA/B;AAFnB;AAIA,WAAK,+BAAYC,qBAAjB;AACE,4BACKR,KADL;AAEEP,gBAAM,oCAAiBgB,kBAFzB;AAGEd,gBAAMM,OAAON;AAHf;;AAMF,WAAK,+BAAYe,uBAAjB;AACE,4BACKV,KADL;AAEEP,gBAAM,oCAAiBgB,kBAFzB;AAGEb,kBAAQK,OAAOL;AAHjB;AAKF,WAAK,+BAAYe,wBAAjB;AACE,4BACKX,KADL;AAEEH,2BAAiBI,OAAOJ;AAF1B;;AAKF,WAAK,+BAAYe,YAAjB;AACE,4BACKZ,KADL;AAEEP,gBAAM,oCAAiBoB;;AAG3B;AALE,WAMF,KAAK,+BAAYC,oBAAjB;AACE,eAAO,KAAKtB,eAAL,EAAP;;AAEF,WAAK,+BAAYuB,kBAAjB;AACEC,gBAAQC,KAAR,CAAc,wBAAd,EAAwChB,OAAOgB,KAA/C;AACA,4BACKjB,KADL;AAEEP,gBAAM,oCAAiBsB;AAFzB;;AAKF,WAAK,+BAAYG,uBAAjB;AACE,eAAO,KAAK1B,eAAL,EAAP;;AAGF;AACE,eAAOQ,KAAP;AAhDJ;AAkDD,G;;6BAGCmB,c,6BAAiB;AACf,WAAO,KAAKC,QAAL,GAAgB3B,IAAvB;AACD,G;;6BAED4B,Y,2BAAe;AACb,WAAO,KAAKD,QAAL,GAAgBzB,IAAvB;AACD,G;;6BACD2B,c,6BAAiB;AACf,WAAO,KAAKF,QAAL,GAAgBxB,MAAvB;AACD,G;;6BAED2B,kB,iCAAqB;AACnB,WAAO,KAAKH,QAAL,GAAgBvB,eAAvB;AACD,G;;;;;kBAGU,IAAIN,gBAAJ,8B","file":"CreateGroupStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport Immutable from 'immutable';\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, CreateGroupSteps } from '../constants/ActorAppConstants';\n\nimport DialogStore from '../stores/DialogStore';\n\nclass CreateGroupStore extends ReduceStore {\n  getInitialState() {\n    return {\n      step: CreateGroupSteps.NAME_INPUT,\n      name: '',\n      search: '',\n      // selectedUserIds: new Set()\n      selectedUserIds: new Immutable.OrderedSet()\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.GROUP_CREATE_OPEN_IN_DIALOG:\n      var peer = DialogStore.getCurrentPeer();\n      return {\n        ...state,\n        selectedUserIds: state.selectedUserIds.add(peer.id)\n      }\n      case ActionTypes.GROUP_CREATE_SET_NAME:\n        return {\n          ...state,\n          step: CreateGroupSteps.CONTACTS_SELECTION,\n          name: action.name\n        }\n      \n      case ActionTypes.GROUP_CREATE_SET_SEARCH:\n        return {\n          ...state,\n          step: CreateGroupSteps.CONTACTS_SELECTION,\n          search: action.search\n        }\n      case ActionTypes.GROUP_CREATE_SET_MEMBERS:\n        return {\n          ...state,\n          selectedUserIds: action.selectedUserIds\n        }\n\n      case ActionTypes.GROUP_CREATE:\n        return {\n          ...state,\n          step: CreateGroupSteps.CREATION_STARTED\n        }\n\n      // TODO: Show create group error success messages in modal\n      case ActionTypes.GROUP_CREATE_SUCCESS:\n        return this.getInitialState();\n\n      case ActionTypes.GROUP_CREATE_ERROR:\n        console.error('Failed to create group', action.error);\n        return {\n          ...state,\n          step: CreateGroupSteps.GROUP_CREATE_ERROR\n        }\n\n      case ActionTypes.GROUP_CREATE_MODAL_HIDE:\n        return this.getInitialState();\n\n\n      default:\n        return state;\n    }\n  }\n\n\n    getCurrentStep() {\n      return this.getState().step;\n    }\n\n    getGroupName() {\n      return this.getState().name;\n    }\n    getGroupSearch() {\n      return this.getState().search;\n    }\n\n    getSelectedUserIds() {\n      return this.getState().selectedUserIds;\n    }\n}\n\nexport default new CreateGroupStore(Dispatcher);\n"]}