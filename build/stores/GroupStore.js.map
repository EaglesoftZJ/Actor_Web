{"version":3,"sources":["../../src/stores/GroupStore.js"],"names":["GroupStore","getInitialState","token","reduce","state","action","type","GROUP_GET_TOKEN","GROUP_GET_TOKEN_SUCCESS","response","GROUP_GET_TOKEN_ERROR","GROUP_LEAVE_SUCCESS","GROUP_DELETE_SUCCESS","setTimeout","setGroupList","CHAT_DELETE_SUCCESS","id","peer","gid","deleteDialog","currentPeer","getCurrentPeer","replace","GROUP_CLEAR","GROUP_CLEAR_SUCCESS","GROUP_CLEAR_ERROR","GROUP_LEAVE","GROUP_LEAVE_ERROR","GROUP_DELETE","GROUP_DELETE_ERROR","CHAT_DELETE","CHAT_DELETE_ERROR","getGroup","getToken","getState"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAZA;;;;IAcMA,U;;;;;;;;;uBACJC,e,8BAAkB;AAChB,WAAO;AACLC,aAAO;AADF,KAAP;AAGD,G;;uBAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;;AAEE,WAAK,+BAAYC,eAAjB;AACE,eAAOH,KAAP;AACF,WAAK,+BAAYI,uBAAjB;AACE,4BACKJ,KADL;AAEEF,iBAAOG,OAAOI;AAFhB;AAIF,WAAK,+BAAYC,qBAAjB;AACE,eAAO,KAAKT,eAAL,EAAP;AACF,WAAK,+BAAYU,mBAAjB;AACE;AACF,WAAK,+BAAYC,oBAAjB;AACE;AACA;AACAC,mBAAW,YAAM;AACf,8CAA0BC,YAA1B;AACD,SAFD,EAEG,CAFH;AAGF,WAAK,+BAAYC,mBAAjB;AACE;AACA,YAAIC,KAAKX,OAAOY,IAAP,GAAcZ,OAAOY,IAAP,CAAYD,EAA1B,GAA+BX,OAAOa,GAA/C;AACA,YAAIb,OAAOY,IAAX,EAAiB;AACf;AACAJ,qBAAW,YAAM;AACf,2CAAqBM,YAArB,CAAkCH,EAAlC;AACD,WAFD,EAEG,CAFH;AAGA;AACA;AACA;AACA;AACA;AACA;AACD;AACD,YAAII,cAAc,sBAAYC,cAAZ,EAAlB;AACA,YAAID,eAAeA,YAAYJ,EAA3B,IAAiCI,YAAYJ,EAAZ,KAAmBA,EAAxD,EAA4D;AAC1D;AACAH,qBAAW,YAAM;AACf,8BAAQS,OAAR,CAAgB,KAAhB;AACD,WAFD,EAEG,CAFH;AAGD;AACH,WAAK,+BAAYC,WAAjB;AACA,WAAK,+BAAYC,mBAAjB;AACA,WAAK,+BAAYC,iBAAjB;AACA,WAAK,+BAAYC,WAAjB;AACA,WAAK,+BAAYC,iBAAjB;AACA,WAAK,+BAAYC,YAAjB;AACA,WAAK,+BAAYC,kBAAjB;AACA,WAAK,+BAAYC,WAAjB;AACA,WAAK,+BAAYC,iBAAjB;AACA;AACE,eAAO3B,KAAP;AAnDJ;AAqDD,G;;AAED;;;;;;;;uBAMA4B,Q,qBAASd,G,EAAK;AACZ,WAAO,sBAAYc,QAAZ,CAAqBd,GAArB,CAAP;AACD,G;;AAED;;;;;;;uBAKAe,Q,uBAAW;AACT,WAAO,KAAKC,QAAL,GAAgBhC,KAAvB;AACD,G;;;;;kBAGY,IAAIF,UAAJ,8B","file":"GroupStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport history from '../utils/history';\nimport DialogStore from '../stores/DialogStore';\nimport QuickSearchActionCreators from '../actions/QuickSearchActionCreators'\nimport DialogActionCreators from '../actions/DialogActionCreators'\nimport linq from 'linq';\n\nclass GroupStore extends ReduceStore {\n  getInitialState() {\n    return {\n      token: null,\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n\n      case ActionTypes.GROUP_GET_TOKEN:\n        return state;\n      case ActionTypes.GROUP_GET_TOKEN_SUCCESS:\n        return {\n          ...state,\n          token: action.response\n        }\n      case ActionTypes.GROUP_GET_TOKEN_ERROR:\n        return this.getInitialState()\n      case ActionTypes.GROUP_LEAVE_SUCCESS:\n        // 离开群组\n      case ActionTypes.GROUP_DELETE_SUCCESS:\n        // 删除群组\n        // 更新快速查找数据\n        setTimeout(() => {\n          QuickSearchActionCreators.setGroupList();\n        }, 1);\n      case ActionTypes.CHAT_DELETE_SUCCESS:\n        // 在对话框中移除\n        var id = action.peer ? action.peer.id : action.gid;\n        if (action.peer) {\n          // 对话框移除成功，手动删除\n          setTimeout(() => {\n            DialogActionCreators.deleteDialog(id);\n          }, 1);\n          // DialogActionCreators.DialogActionCreators();\n          // var dialogs = DialogStore.getDialogs();\n          // for (var i = 0; i < dialogs.length; i++) {\n          //   var arr = linq.from(dialogs[i].shorts).except([{peer: {peer: {id: action.peer.id}}}], '$.peer.peer.id').toArray();\n          //   dialogs[i].shorts = arr;\n          // }\n        }\n        var currentPeer = DialogStore.getCurrentPeer();\n        if (currentPeer && currentPeer.id && currentPeer.id === id) {\n          // 当前对话框为以上对话框跳转空白\n          setTimeout(() => {\n            history.replace('/im');\n          }, 1);\n        }\n      case ActionTypes.GROUP_CLEAR:\n      case ActionTypes.GROUP_CLEAR_SUCCESS:\n      case ActionTypes.GROUP_CLEAR_ERROR:\n      case ActionTypes.GROUP_LEAVE:\n      case ActionTypes.GROUP_LEAVE_ERROR:\n      case ActionTypes.GROUP_DELETE:\n      case ActionTypes.GROUP_DELETE_ERROR:\n      case ActionTypes.CHAT_DELETE:\n      case ActionTypes.CHAT_DELETE_ERROR:\n      default:\n        return state;\n    }\n  }\n\n  /**\n   * Get group information\n   *\n   * @param gid {number} Group id\n   * @returns {object} Group information\n   */\n  getGroup(gid) {\n    return ActorClient.getGroup(gid);\n  }\n\n  /**\n   * Get group integration token\n   *\n   * @returns {string|null}\n   */\n  getToken() {\n    return this.getState().token;\n  }\n}\n\nexport default new GroupStore(Dispatcher);\n"]}