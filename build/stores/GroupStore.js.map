{"version":3,"sources":["../../src/stores/GroupStore.js"],"names":["GroupStore","getInitialState","token","reduce","state","action","type","GROUP_GET_TOKEN","GROUP_GET_TOKEN_SUCCESS","response","GROUP_GET_TOKEN_ERROR","GROUP_CLEAR","GROUP_CLEAR_SUCCESS","GROUP_CLEAR_ERROR","GROUP_LEAVE","GROUP_LEAVE_SUCCESS","GROUP_LEAVE_ERROR","GROUP_DELETE","GROUP_DELETE_SUCCESS","GROUP_DELETE_ERROR","CHAT_DELETE","CHAT_DELETE_SUCCESS","CHAT_DELETE_ERROR","getGroup","gid","getToken","getState"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;+eAPA;;;;IASMA,U;;;;;;;;;uBACJC,e,8BAAkB;AAChB,WAAO;AACLC,aAAO;AADF,KAAP;AAGD,G;;uBAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;;AAEE,WAAK,+BAAYC,eAAjB;AACE,eAAOH,KAAP;AACF,WAAK,+BAAYI,uBAAjB;AACE,4BACKJ,KADL;AAEEF,iBAAOG,OAAOI;AAFhB;AAIF,WAAK,+BAAYC,qBAAjB;AACE,eAAO,KAAKT,eAAL,EAAP;AACF,WAAK,+BAAYU,WAAjB;AACA,WAAK,+BAAYC,mBAAjB;AACA,WAAK,+BAAYC,iBAAjB;AACA,WAAK,+BAAYC,WAAjB;AACA,WAAK,+BAAYC,mBAAjB;AACA,WAAK,+BAAYC,iBAAjB;AACA,WAAK,+BAAYC,YAAjB;AACA,WAAK,+BAAYC,oBAAjB;AACA,WAAK,+BAAYC,kBAAjB;AACA,WAAK,+BAAYC,WAAjB;AACA,WAAK,+BAAYC,mBAAjB;AACA,WAAK,+BAAYC,iBAAjB;AACA;AACE,eAAOlB,KAAP;AAxBJ;AA0BD,G;;AAED;;;;;;;;uBAMAmB,Q,qBAASC,G,EAAK;AACZ,WAAO,sBAAYD,QAAZ,CAAqBC,GAArB,CAAP;AACD,G;;AAED;;;;;;;uBAKAC,Q,uBAAW;AACT,WAAO,KAAKC,QAAL,GAAgBxB,KAAvB;AACD,G;;;;;kBAGY,IAAIF,UAAJ,8B","file":"GroupStore.js","sourcesContent":["/*\r\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { ReduceStore } from 'flux/utils';\r\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes } from '../constants/ActorAppConstants';\r\nimport ActorClient from '../utils/ActorClient';\r\n\r\nclass GroupStore extends ReduceStore {\r\n  getInitialState() {\r\n    return {\r\n      token: null,\r\n    };\r\n  }\r\n\r\n  reduce(state, action) {\r\n    switch (action.type) {\r\n\r\n      case ActionTypes.GROUP_GET_TOKEN:\r\n        return state;\r\n      case ActionTypes.GROUP_GET_TOKEN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          token: action.response\r\n        }\r\n      case ActionTypes.GROUP_GET_TOKEN_ERROR:\r\n        return this.getInitialState()\r\n      case ActionTypes.GROUP_CLEAR:\r\n      case ActionTypes.GROUP_CLEAR_SUCCESS:\r\n      case ActionTypes.GROUP_CLEAR_ERROR:\r\n      case ActionTypes.GROUP_LEAVE:\r\n      case ActionTypes.GROUP_LEAVE_SUCCESS:\r\n      case ActionTypes.GROUP_LEAVE_ERROR:\r\n      case ActionTypes.GROUP_DELETE:\r\n      case ActionTypes.GROUP_DELETE_SUCCESS:\r\n      case ActionTypes.GROUP_DELETE_ERROR:\r\n      case ActionTypes.CHAT_DELETE:\r\n      case ActionTypes.CHAT_DELETE_SUCCESS:\r\n      case ActionTypes.CHAT_DELETE_ERROR:\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get group information\r\n   *\r\n   * @param gid {number} Group id\r\n   * @returns {object} Group information\r\n   */\r\n  getGroup(gid) {\r\n    return ActorClient.getGroup(gid);\r\n  }\r\n\r\n  /**\r\n   * Get group integration token\r\n   *\r\n   * @returns {string|null}\r\n   */\r\n  getToken() {\r\n    return this.getState().token;\r\n  }\r\n}\r\n\r\nexport default new GroupStore(Dispatcher);\r\n"]}