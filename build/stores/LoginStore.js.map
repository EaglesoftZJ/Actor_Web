{"version":3,"sources":["../../src/stores/LoginStore.js"],"names":["step","LOGIN_WAIT","errors","login","code","signup","name","isCodeRequested","isCodeSended","isLoginRequested","isSignupStarted","myUid","LoginStore","dispatcher","getStep","getErrors","getLogin","getCode","getName","getMyId","isLoggedIn","resetStore","intl","__onDispatch","action","type","AUTH_CHANGE_LOGIN","__emitChange","AUTH_CHANGE_CODE","AUTH_CHANGE_NAME","AUTH_CODE_REQUEST","AUTH_CODE_REQUEST_SUCCESS","CODE_WAIT","AUTH_CODE_REQUEST_FAILURE","error","messages","AUTH_USER_REQUEST","AUTH_USER_REQUEST_SUCCESS","AUTH_USER_REQUEST_FAILURE","AUTH_CODE_SEND","AUTH_CODE_SEND_SUCCESS","AUTH_CODE_SEND_FAILURE","AUTH_PASSWORD_SEND","AUTH_PASSWORD_SEND_SUCCESS","AUTH_PASSWORD_SEND_FAILURE","AUTH_SIGNUP_START","NAME_WAIT","AUTH_SIGNUP","AUTH_SIGNUP_SUCCESS","AUTH_SIGNUP_FAILURE","AUTH_RESTART","AUTH_SET_LOGGED_IN","getUid","AUTH_SET_LOGGED_OUT","localStorage","clear","location","reload"],"mappings":"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","file":"LoginStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AuthSteps } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\n\nimport { getIntlData } from '../l18n';\n\nlet step = AuthSteps.LOGIN_WAIT,\n    errors = {\n      login: null,\n      code: null,\n      signup: null\n    },\n    login = '',\n    code = '',\n    name = '',\n    isCodeRequested = false,\n    isCodeSended = false,\n    isLoginRequested = false,\n    isSignupStarted = false,\n    myUid = null;\n\nclass LoginStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n\n    // TODO: do not use intlData here. save error codes and send them to ui.\n    this.intl = getIntlData();\n  }\n\n  getStep = () => step;\n  getErrors = () => errors;\n  getLogin = () => login;\n  getCode = () => code;\n  getName = () => name;\n  isCodeRequested = () => isCodeRequested;\n  isCodeSended = () => isCodeSended;\n  isLoginRequested = () => isLoginRequested;\n  isSignupStarted = () => isSignupStarted;\n  getMyId = () => myUid;\n  isLoggedIn = () => ActorClient.isLoggedIn();\n\n  resetStore = () => {\n    step = AuthSteps.LOGIN_WAIT;\n    errors = {\n      login: null,\n      code: null,\n      signup: null\n    };\n    login = code = name = '';\n    isCodeRequested = isCodeSended = isSignupStarted = false;\n    myUid = null;\n  };\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.AUTH_CHANGE_LOGIN:\n        login = action.login;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CHANGE_CODE:\n        code = action.code;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CHANGE_NAME:\n        name = action.name;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_CODE_REQUEST:\n        isCodeRequested = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_REQUEST_SUCCESS:\n        step = AuthSteps.CODE_WAIT;\n        errors.login = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_REQUEST_FAILURE:\n        switch (action.error) {\n          case 'PHONE_NUMBER_INVALID':\n            errors.login = this.intl.messages['login.errors.numberInvalid'];\n            break;\n          case 'CODE_WAIT':\n            errors.login = this.intl.messages['login.errors.codeWait'];\n            break;\n          default:\n            errors.login = action.error;\n        }\n        isCodeRequested = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_USER_REQUEST:\n        isCodeRequested = true;\n        isLoginRequested = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_USER_REQUEST_SUCCESS:\n        step = AuthSteps.CODE_WAIT;\n        errors.login = null;\n        isLoginRequested = false;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_USER_REQUEST_FAILURE:\n        switch (action.error) {\n          case 'USER_INVALID':\n            errors.login = this.intl.messages['login.errors.numberInvalid'];\n            break;\n          case 'CODE_WAIT':\n            errors.login = this.intl.messages['login.errors.codeWait'];\n            break;\n          default:\n            errors.login = action.error;\n        }\n        isCodeRequested = false;\n        isLoginRequested = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_CODE_SEND:\n        isCodeSended = true;\n        isLoginRequested = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_SEND_SUCCESS:\n        errors.code = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_SEND_FAILURE:\n        switch (action.error) {\n          case 'PHONE_CODE_INVALID':\n          case 'EMAIL_CODE_INVALID':\n            errors.code = this.intl.messages['login.errors.codeInvalid'];\n            break;\n          case 'PHONE_CODE_EXPIRED':\n            errors.code = this.intl.messages['login.errors.codeExpired'];\n            break;\n          default:\n            errors.code = action.error;\n        }\n        isCodeSended = false;\n        isLoginRequested = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_PASSWORD_SEND:\n        isCodeSended = true;\n        isLoginRequested = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_PASSWORD_SEND_SUCCESS:\n        errors.code = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_PASSWORD_SEND_FAILURE:\n        switch (action.error) {\n          case 'PHONE_CODE_INVALID':\n          case 'EMAIL_CODE_INVALID':\n            errors.code = this.intl.messages['login.errors.codeInvalid'];\n            break;\n          case 'PHONE_CODE_EXPIRED':\n            errors.code = this.intl.messages['login.errors.codeExpired'];\n            break;\n          default:\n            errors.code = action.error;\n        }\n        isCodeSended = false;\n        isLoginRequested = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SIGNUP_START:\n        step = AuthSteps.NAME_WAIT;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SIGNUP:\n        isSignupStarted = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SIGNUP_SUCCESS:\n        errors.signup = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SIGNUP_FAILURE:\n        switch (action.error) {\n          case 'NAME_INVALID':\n            errors.signup = this.intl.messages['login.errors.nameInvalid'];\n            break;\n          default:\n            errors.signup = action.error;\n        }\n        isSignupStarted = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_RESTART:\n        this.resetStore();\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SET_LOGGED_IN:\n        myUid = ActorClient.getUid();\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SET_LOGGED_OUT:\n        localStorage.clear();\n        location.reload();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new LoginStore(Dispatcher);\n"]}