{"version":3,"sources":["../../src/stores/LoginStore.js"],"names":["step","LOGIN_WAIT","errors","login","code","signup","name","storeName","localStorage","getItem","split","isCodeRequested","isCodeSended","isLoginRequested","isSignupStarted","myUid","LoginStore","dispatcher","getStep","getErrors","getLogin","getCode","getName","getStoreName","getMyId","isLoggedIn","resetStore","intl","__onDispatch","action","type","AUTH_CHANGE_LOGIN","__emitChange","AUTH_CHANGE_CODE","AUTH_CHANGE_NAME","AUTH_CODE_REQUEST","AUTH_CODE_REQUEST_SUCCESS","CODE_WAIT","AUTH_CODE_REQUEST_FAILURE","error","messages","AUTH_USER_REQUEST","AUTH_USER_REQUEST_SUCCESS","AUTH_USER_REQUEST_FAILURE","AUTH_CODE_SEND","AUTH_CODE_SEND_SUCCESS","AUTH_CODE_SEND_FAILURE","AUTH_PASSWORD_SEND","AUTH_PASSWORD_SEND_SUCCESS","AUTH_PASSWORD_SEND_FAILURE","AUTH_SIGNUP_START","NAME_WAIT","AUTH_SIGNUP","AUTH_SIGNUP_SUCCESS","AUTH_SIGNUP_FAILURE","AUTH_RESTART","AUTH_SET_LOGGED_IN","getUid","AUTH_SET_LOGGED_OUT","clear","location","reload"],"mappings":"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","file":"LoginStore.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { Store } from 'flux/utils';\r\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes, AuthSteps } from '../constants/ActorAppConstants';\r\n\r\nimport ActorClient from '../utils/ActorClient';\r\n\r\nimport { getIntlData } from '../l18n';\r\n\r\nlet step = AuthSteps.LOGIN_WAIT,\r\n    errors = {\r\n      login: null,\r\n      code: null,\r\n      signup: null\r\n    },\r\n    login = '',\r\n    code = '',\r\n    name = '',\r\n    storeName = localStorage.getItem('storeName') ? localStorage.getItem('storeName').split(',') : ['aaa','bbb','ccc'],\r\n    isCodeRequested = false,\r\n    isCodeSended = false,\r\n    isLoginRequested = false,\r\n    isSignupStarted = false,\r\n    myUid = null;\r\n\r\nclass LoginStore extends Store {\r\n  constructor(dispatcher) {\r\n    super(dispatcher);\r\n\r\n    // TODO: do not use intlData here. save error codes and send them to ui.\r\n    this.intl = getIntlData();\r\n  }\r\n\r\n  getStep = () => step;\r\n  getErrors = () => errors;\r\n  getLogin = () => login;\r\n  getCode = () => code;\r\n  getName = () => name;\r\n  getStoreName = () => storeName;\r\n  isCodeRequested = () => isCodeRequested;\r\n  isCodeSended = () => isCodeSended;\r\n  isLoginRequested = () => isLoginRequested;\r\n  isSignupStarted = () => isSignupStarted;\r\n  getMyId = () => myUid;\r\n  isLoggedIn = () => ActorClient.isLoggedIn();\r\n\r\n  resetStore = () => {\r\n    step = AuthSteps.LOGIN_WAIT;\r\n    errors = {\r\n      login: null,\r\n      code: null,\r\n      signup: null\r\n    };\r\n    login = code = name = '';\r\n    isCodeRequested = isCodeSended = isSignupStarted = false;\r\n    myUid = null;\r\n  };\r\n\r\n  __onDispatch(action) {\r\n    switch (action.type) {\r\n      case ActionTypes.AUTH_CHANGE_LOGIN:\r\n        login = action.login;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_CHANGE_CODE:\r\n        code = action.code;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_CHANGE_NAME:\r\n        name = action.name;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_CODE_REQUEST:\r\n        isCodeRequested = true;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_CODE_REQUEST_SUCCESS:\r\n        step = AuthSteps.CODE_WAIT;\r\n        errors.login = null;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_CODE_REQUEST_FAILURE:\r\n        switch (action.error) {\r\n          case 'PHONE_NUMBER_INVALID':\r\n            errors.login = this.intl.messages['login.errors.numberInvalid'];\r\n            break;\r\n          case 'CODE_WAIT':\r\n            errors.login = this.intl.messages['login.errors.codeWait'];\r\n            break;\r\n          default:\r\n            errors.login = action.error;\r\n        }\r\n        isCodeRequested = false;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_USER_REQUEST:\r\n        isCodeRequested = true;\r\n        isLoginRequested = true;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_USER_REQUEST_SUCCESS:\r\n        step = AuthSteps.CODE_WAIT;\r\n        errors.login = null;\r\n        isLoginRequested = false;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_USER_REQUEST_FAILURE:\r\n        switch (action.error) {\r\n          case 'USER_INVALID':\r\n            errors.login = this.intl.messages['login.errors.numberInvalid'];\r\n            break;\r\n          case 'CODE_WAIT':\r\n            errors.login = this.intl.messages['login.errors.codeWait'];\r\n            break;\r\n          default:\r\n            errors.login = action.error;\r\n        }\r\n        isCodeRequested = false;\r\n        isLoginRequested = false;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_CODE_SEND:\r\n        isCodeSended = true;\r\n        isLoginRequested = true;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_CODE_SEND_SUCCESS:\r\n        errors.code = null;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_CODE_SEND_FAILURE:\r\n        switch (action.error) {\r\n          case 'PHONE_CODE_INVALID':\r\n          case 'EMAIL_CODE_INVALID':\r\n            errors.code = this.intl.messages['login.errors.codeInvalid'];\r\n            break;\r\n          case 'PHONE_CODE_EXPIRED':\r\n            errors.code = this.intl.messages['login.errors.codeExpired'];\r\n            break;\r\n          default:\r\n            errors.code = action.error;\r\n        }\r\n        isCodeSended = false;\r\n        isLoginRequested = false;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_PASSWORD_SEND:\r\n        isCodeSended = true;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_PASSWORD_SEND_SUCCESS:\r\n        errors.code = null;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_PASSWORD_SEND_FAILURE:\r\n        switch (action.error) {\r\n          case 'PHONE_CODE_INVALID':\r\n          case 'EMAIL_CODE_INVALID':\r\n            errors.code = this.intl.messages['login.errors.codeInvalid'];\r\n            break;\r\n          case 'PHONE_CODE_EXPIRED':\r\n            errors.code = this.intl.messages['login.errors.codeExpired'];\r\n            break;\r\n          default:\r\n            errors.code = action.error;\r\n        }\r\n        isCodeSended = false;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_SIGNUP_START:\r\n        step = AuthSteps.NAME_WAIT;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_SIGNUP:\r\n        isSignupStarted = true;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_SIGNUP_SUCCESS:\r\n        errors.signup = null;\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_SIGNUP_FAILURE:\r\n        switch (action.error) {\r\n          case 'NAME_INVALID':\r\n            errors.signup = this.intl.messages['login.errors.nameInvalid'];\r\n            break;\r\n          default:\r\n            errors.signup = action.error;\r\n        }\r\n        isSignupStarted = false;\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_RESTART:\r\n        this.resetStore();\r\n        this.__emitChange();\r\n        break;\r\n\r\n      case ActionTypes.AUTH_SET_LOGGED_IN:\r\n        myUid = ActorClient.getUid();\r\n        this.__emitChange();\r\n        break;\r\n      case ActionTypes.AUTH_SET_LOGGED_OUT:\r\n        localStorage.clear();\r\n        location.reload();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n}\r\n\r\nexport default new LoginStore(Dispatcher);\r\n"]}